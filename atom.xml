<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[1024Bit  电子游牧日志]]></title>
  <link href="http://woody1983.github.com/atom.xml" rel="self"/>
  <link href="http://woody1983.github.com/"/>
  <updated>2013-09-09T22:49:30+08:00</updated>
  <id>http://woody1983.github.com/</id>
  <author>
    <name><![CDATA[Johnny Hsu]]></name>
    <email><![CDATA[unix1983@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby On Kettle]]></title>
    <link href="http://woody1983.github.com/blog/2013/09/09/ruby-on-kettle/"/>
    <updated>2013-09-09T22:34:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/09/09/ruby-on-kettle</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">00</span><span class="mi">9</span> <span class="o">&gt;</span> <span class="s2">&quot;1111111111&quot;</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">1023</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">010</span> <span class="o">&gt;</span> <span class="mi">1023</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;1111111111&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>总要为Kettle做点什么 用二进制来完成一对多线路分发 监控就成了主要的问题。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">013</span> <span class="o">&gt;</span> <span class="s2">&quot;1111111111&quot;</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">10</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">014</span> <span class="o">&gt;</span> <span class="s2">&quot;1111111111&quot;</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<h4>10位对应10个分发线路</h4>

<p>一个最常见的问题 我需要充值某条数据的某个线路重新发送 或者紧急止停某条线路的一批数据下发，so 要定位</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">016</span> <span class="o">&gt;</span> <span class="s2">&quot;1111111111&quot;</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>重置Reset 0号线路 也就是Array最右边那个</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">021</span> <span class="o">&gt;</span> <span class="n">rok</span> <span class="o">=</span> <span class="s2">&quot;1111111111&quot;</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="o">]</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">022</span> <span class="o">&gt;</span> <span class="n">rok</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="o">]</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">023</span> <span class="o">&gt;</span> <span class="n">rok</span><span class="o">[</span><span class="mi">10</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">024</span> <span class="o">&gt;</span> <span class="n">rok</span><span class="o">[</span><span class="mi">10</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;0&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;0&quot;</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p194</span> <span class="p">:</span><span class="mo">025</span> <span class="o">&gt;</span> <span class="n">rok</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;0&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>明天抽时间写一个Class 封装这个动作</code></p>

<h3>我想要的功能应该有</h3>

<ul>
<li>Preview Kettle当前运行状况和<code>质量</code></li>
<li>单独查看某个线路或某张表的下发情况 <code>时间</code> &amp; <code>Error</code> &amp; <code>Count</code></li>
<li>Error 单独分析和Email寄送功能</li>
<li>Reset 下发Status</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby inject]]></title>
    <link href="http://woody1983.github.com/blog/2013/09/08/ruby-inject/"/>
    <updated>2013-09-08T23:26:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/09/08/ruby-inject</id>
    <content type="html"><![CDATA[<p>很早之前再Ruby China问的一个问题 就是1到10 可以创建多少个3位数不重复的组合</p>

<p>现在有了答案!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">combination</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span></code></pre></td></tr></table></div></figure>


<p>说实话 这个函数我也没见过 但效果还不错 目测了一把基本是我要的，和数据打交道时间久了就总觉得号码是有规律可言的。上周研习了一下<code>inject</code>的用法 感觉可以做一点小东西出来玩一下。</p>

<p>大乐透的前五位数有多少种组合呢？ 呵呵</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">35</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">combination</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby-Bits]]></title>
    <link href="http://woody1983.github.com/blog/2013/09/05/ruby-bits/"/>
    <updated>2013-09-05T22:10:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/09/05/ruby-bits</id>
    <content type="html"><![CDATA[<p>关于Ruby最佳实践的记录，我几乎已经放弃向周围的人推荐Ruby这门让人开心的语言了，原因其实很奇怪。</p>

<p>关于参数，Ruby的Function中定义的函数或类总是会接收很多参数 不接受参数的Function不觉得很奇葩吗？</p>

<p>传统的语法和实践是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">CHR</span><span class="p">(</span><span class="n">username</span><span class="p">,</span><span class="n">login_id</span><span class="p">,</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'> <span class="c1">#...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个不能说错 但按照CodeSchool老师的原话来说<code>Location isn't always used, so let's add default.</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">CHR</span><span class="p">(</span><span class="n">username</span><span class="p">,</span><span class="n">login_id</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span><span class="n">message</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'> <span class="c1">#...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>还有一种情况就是参数过多，以致于让function变得毫无可读性<code>have to keep placeholders for arguments you’re not using</code>
这个时候可以采用 <code>HASH Arguments</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tweet</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="n">status</span> <span class="o">=</span> <span class="no">Status</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">status</span><span class="o">.</span><span class="n">lat</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:lat</span><span class="o">]</span>
</span><span class='line'>  <span class="n">status</span><span class="o">.</span><span class="n">long</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:long</span><span class="o">]</span>
</span><span class='line'>  <span class="n">status</span><span class="o">.</span><span class="n">body</span> <span class="o">=</span> <span class="n">message</span>
</span><span class='line'>  <span class="n">status</span><span class="o">.</span><span class="n">reply_id</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:reply_id</span><span class="o">]</span>
</span><span class='line'>  <span class="n">status</span><span class="o">.</span><span class="n">post</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用的时候 就可以利用Symbol来实现多参数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="n">tweet</span><span class="p">(</span><span class="s2">&quot;Practicing Ruby-Fu!&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:lat</span> <span class="o">=&gt;</span> <span class="mi">28</span><span class="o">.</span><span class="mi">55</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:long</span> <span class="o">=&gt;</span> <span class="o">-</span><span class="mi">81</span><span class="o">.</span><span class="mi">33</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:reply_id</span> <span class="o">=&gt;</span> <span class="mi">227946</span>
</span><span class='line'><span class="err">￼￼</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>Using Ruby 1.9 hash syntax</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tweet</span><span class="p">(</span><span class="s2">&quot;Practicing Ruby-Fu!&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">lat</span><span class="p">:</span> <span class="mi">28</span><span class="o">.</span><span class="mi">55</span><span class="p">,</span>
</span><span class='line'>    <span class="n">long</span><span class="p">:</span> <span class="o">-</span><span class="mi">81</span><span class="o">.</span><span class="mi">33</span><span class="p">,</span>
</span><span class='line'>    <span class="n">reply_id</span><span class="p">:</span> <span class="mi">227946</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>参数的顺序也无所谓了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="n">tweet</span><span class="p">(</span><span class="s2">&quot;Practicing Ruby-Fu!&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">reply_id</span><span class="p">:</span> <span class="mi">227946</span><span class="p">,</span>
</span><span class='line'>  <span class="n">lat</span><span class="p">:</span> <span class="mi">28</span><span class="o">.</span><span class="mi">55</span><span class="p">,</span>
</span><span class='line'>  <span class="n">long</span><span class="p">:</span> <span class="o">-</span><span class="mi">81</span><span class="o">.</span><span class="mi">33</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>一个参数也ok</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tweet</span><span class="p">(</span><span class="s2">&quot;Practicing Ruby-Fu!&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">new_game</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nb">name</span><span class="p">:</span> <span class="nb">name</span><span class="p">,</span>
</span><span class='line'>    <span class="n">year</span><span class="p">:</span> <span class="n">options</span><span class="o">[</span><span class="ss">:year</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="nb">system</span><span class="p">:</span> <span class="n">options</span><span class="o">[</span><span class="ss">:system</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">game</span> <span class="o">=</span> <span class="n">new_game</span><span class="p">(</span><span class="s2">&quot;Street Figher II&quot;</span><span class="p">,</span> <span class="n">year</span><span class="p">:</span> <span class="mi">1992</span><span class="p">,</span> <span class="nb">system</span><span class="p">:</span> <span class="s2">&quot;SNES&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>EXCEPTIONS</h3>

<p>关于判断例外EXCEPTIONS的问题 最传统的写法就是先做判断 有值就出来 如果没值的话 就抛除个神器的东西。貌似这么写程序不太好。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">get_tweets</span><span class="p">(</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">list</span><span class="o">.</span><span class="n">authorized?</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</span><span class='line'>    <span class="n">list</span><span class="o">.</span><span class="n">tweets</span> <span class="c1">#如果这个user是验证成功的就把他的tweet列出来</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="k">end</span><span class="o">[]</span> <span class="c1">#“magic” return value</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果没有tweet 查出来是空的话  还要报一个Error 貌似在Ruby里没这个必要。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tweets</span> <span class="o">=</span> <span class="n">get_tweets</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="n">tweets</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>  <span class="n">alert</span> <span class="s2">&quot;No tweets were found!&quot;</span> <span class="o">+</span>
</span><span class='line'>  <span class="s2">&quot;Are you authorized to access this list?&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>最佳方法应该是用unless先对<code>@user</code>这个对象进行判断 如果没有就用<code>raise</code>来抛除一个异常并返回登陆.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="k">def</span> <span class="nf">get_tweets</span><span class="p">(</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'>  <span class="k">unless</span> <span class="n">list</span><span class="o">.</span><span class="n">authorized?</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">AuthorizationException</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="n">list</span><span class="o">.</span><span class="n">tweets</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">tweets</span> <span class="o">=</span> <span class="n">get_tweets</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">AuthorizationException</span>
</span><span class='line'>  <span class="nb">warn</span> <span class="s2">&quot;You are not authorized to access this list.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>练习</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">InvalidGameError</span> <span class="o">&lt;</span> <span class="no">StandardError</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'><span class="k">def</span> <span class="nf">new_game</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nb">name</span><span class="p">:</span> <span class="nb">name</span><span class="p">,</span>
</span><span class='line'>    <span class="n">year</span><span class="p">:</span> <span class="n">options</span><span class="o">[</span><span class="ss">:year</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="nb">system</span><span class="p">:</span> <span class="n">options</span><span class="o">[</span><span class="ss">:system</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">game</span> <span class="o">=</span> <span class="n">new_game</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">InvalidGameError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There was a problem creating your new game: </span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">message</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We want to make sure that each game is a valid game object - in this case a simple hash of values. Even still, we wouldn&#8217;t want to return a hash with a nil name. Raise an InvalidGameError error in the new_game method if name is nil.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">InvalidGameError</span> <span class="o">&lt;</span> <span class="no">StandardError</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'><span class="k">def</span> <span class="nf">new_game</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="k">raise</span> <span class="no">InvalidGameError</span><span class="p">,</span> <span class="s2">&quot;You must provide a name for this game.&quot;</span> <span class="k">unless</span> <span class="nb">name</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nb">name</span><span class="p">:</span> <span class="nb">name</span><span class="p">,</span>
</span><span class='line'>    <span class="n">year</span><span class="p">:</span> <span class="n">options</span><span class="o">[</span><span class="ss">:year</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="nb">system</span><span class="p">:</span> <span class="n">options</span><span class="o">[</span><span class="ss">:system</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">game</span> <span class="o">=</span> <span class="n">new_game</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">InvalidGameError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There was a problem creating your new game: </span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">message</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>splat arguments</h3>

<p>说实话 我没觉得这个比hash那个要实用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="k">def</span> <span class="nf">mention</span><span class="p">(</span><span class="n">status</span><span class="p">,</span> <span class="o">*</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tweet</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">names</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">mention</span><span class="p">(</span><span class="s1">&#39;Your courses rocked!&#39;</span><span class="p">,</span> <span class="s1">&#39;eallam&#39;</span><span class="p">,</span> <span class="s1">&#39;greggpollack&#39;</span><span class="p">,</span> <span class="s1">&#39;jasonvanlue&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">describe_favorites</span><span class="p">(</span><span class="o">*</span><span class="n">games</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">game</span> <span class="k">in</span> <span class="n">games</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Favorite Game: </span><span class="si">#{</span><span class="n">game</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">describe_favorites</span><span class="p">(</span><span class="s1">&#39;Mario&#39;</span><span class="p">,</span> <span class="s1">&#39;Contra&#39;</span><span class="p">,</span> <span class="s1">&#39;Metroid&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>为一个二维Array创建一个Class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="n">user_names</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>  <span class="o">[</span><span class="s2">&quot;Ashton&quot;</span><span class="p">,</span> <span class="s2">&quot;Kutcher&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="o">[</span><span class="s2">&quot;Wil&quot;</span><span class="p">,</span> <span class="s2">&quot;Wheaton&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="o">[</span><span class="s2">&quot;Madonna&quot;</span><span class="o">]</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">user_names</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">n</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">n</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个要直接打印出来 最后那个就会多一个分隔符。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Name</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">first</span><span class="p">,</span> <span class="n">last</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@first</span> <span class="o">=</span> <span class="n">first</span>
</span><span class='line'>    <span class="vi">@last</span> <span class="o">=</span> <span class="n">last</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">￼￼</span><span class="k">def</span> <span class="nf">format</span>
</span><span class='line'>    <span class="o">[</span><span class="vi">@last</span><span class="p">,</span> <span class="vi">@first</span><span class="o">].</span><span class="n">compact</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[heroku]]></title>
    <link href="http://woody1983.github.com/blog/2013/09/05/heroku/"/>
    <updated>2013-09-05T21:20:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/09/05/heroku</id>
    <content type="html"><![CDATA[<p>一开始是在 <a href="https://class.coursera.org/startup-001/class/index">Coursera</a>上的公开课学到的 留个记录 以后会天天用到的。</p>

<h3>安装命令很简单 Gem包</h3>

<p><code>gem install heroku</code></p>

<p><code>$ heroku keys</code> 可以查看目前主机中存有的key 如果没有你当前主机的话 就用<code>heroku keys:add</code></p>

<p>Heroku只是一个托管平台而已 Code还是要保存在Github上 需要部署的时候部署过去。我还真不知道怎么从Heroku直接拖Code下来。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku create semisconblog
</span><span class='line'>Creating semisconblog... done, stack is cedar
</span><span class='line'>http://semisconblog.herokuapp.com/ | git@heroku.com:semisconblog.git
</span><span class='line'>Git remote heroku added</span></code></pre></td></tr></table></div></figure>


<p>回头再写 Heroku还是有点不熟悉</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Blocks With Objective-C]]></title>
    <link href="http://woody1983.github.com/blog/2013/08/15/about-blocks-with-objective-c/"/>
    <updated>2013-08-15T11:38:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/08/15/about-blocks-with-objective-c</id>
    <content type="html"><![CDATA[<h4>一般的做法</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">someBOOLVariable</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello from inside the if statement&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span><span class="c1">//如果someBOOLVariable是YES {}里的代码将会被执行</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>其实我们想的是能够括号里的代码能够脱离任何特定功能 比如触发条件
Blocks是一组代码 意味着 他可以被传递到方法或像NSArray或NSDictionary中集合</p>

<p> #### ^ {}块可以创建</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello from inside the block&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="o">^</span><span class="n">LogMessage</span> <span class="o">=</span> <span class="o">^</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="err">@“你好块里面的”</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>如果不想其返回任何值 就加一个void</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">void</span> <span class="o">^</span><span class="n">logMessage</span> <span class="o">=</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello from inside the block&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>练习- 创建一个块  不接受和不返回任何信息</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">myFirstBlock</span><span class="p">)(</span><span class="kt">void</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello from inside the block&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">myFirstBlock</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Blocks with arguments</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">^</span><span class="p">(</span><span class="n">NSUInteger</span> <span class="n">num1</span><span class="p">,</span> <span class="n">NSUInteger</span> <span class="n">num2</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;The sum of the numbers is %lu&quot;</span><span class="p">,</span> <span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">sumNumbers</span><span class="p">)(</span><span class="n">NSUInteger</span><span class="p">,</span> <span class="n">NSUInteger</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">(</span><span class="n">NSUInteger</span> <span class="n">num1</span><span class="p">,</span> <span class="n">NSUInteger</span> <span class="n">num2</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;The sum of the numbers is %lu&quot;</span><span class="p">,</span> <span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> sumNumbers(45, 89);</span>
</span><span class='line'><span class="cm"> sumNumbers(18, 56);</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">logCount</span><span class="p">)(</span><span class="n">NSArray</span> <span class="o">*</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">(</span><span class="n">NSArray</span> <span class="o">*</span><span class="n">array</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;There are %lu objects in this array&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">array</span> <span class="n">count</span><span class="p">]);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">logCount</span><span class="p">(</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;Mr.&quot;</span><span class="p">,</span> <span class="s">@&quot;Higgie&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="n">logCount</span><span class="p">(</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;Mr.&quot;</span><span class="p">,</span> <span class="s">@&quot;Jony&quot;</span><span class="p">,</span> <span class="s">@&quot;Ive&quot;</span><span class="p">,</span> <span class="s">@&quot;Higgie&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> challenge[2]: There are 2 objects in this array</span>
</span><span class='line'><span class="cm"> challenge[2]: There are 4 objects in this array</span>
</span><span class='line'><span class="cm"> */</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>练习</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">myFirstBlock</span><span class="p">)(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="o">=</span> <span class="o">^</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">str1</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ from inside the block&quot;</span><span class="p">,</span><span class="n">str1</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">myFirstBlock</span><span class="p">(</span><span class="s">@&quot;Hello&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">myFirstBlock</span><span class="p">(</span><span class="s">@&quot;World&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Enumerate with blocks</h2>

<p> 绝大多数的时候，你会不会块分配给一个变量，调用它自己。相反，你会传递一个块作为参数的消息，像<code>enumerateObjectsUsingBlock：NSArray</code>的消息。</p>

<p> <code>enumerateObjectsUsingBlock：</code>可以用来作为快速枚举的替代品，因为它基本上是同样的事情：执行一个代码块，在一个数组中的每个对象。但是，而不是使用特殊的语法，它使用正常短信的发送和块。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">newHats</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Cowboy&quot;</span><span class="p">,</span> <span class="s">@&quot;Conductor&quot;</span><span class="p">,</span> <span class="s">@&quot;Baseball&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;Beanie&quot;</span><span class="p">,</span> <span class="s">@&quot;Beret&quot;</span><span class="p">,</span> <span class="s">@&quot;Fez&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">hat</span> <span class="k">in</span> <span class="n">newHats</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Trying on hat %@&quot;</span><span class="p">,</span> <span class="n">hat</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">enumeratingBlock</span><span class="p">)(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">,</span> <span class="n">NSUInteger</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="p">)</span> <span class="o">=</span>
</span><span class='line'><span class="o">^</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">word</span><span class="p">,</span> <span class="n">NSUInteger</span> <span class="n">index</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">word</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">funnyWords</span> <span class="nl">enumerateObjectsUsingBlock:</span><span class="n">enumeratingBlock</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">newHats</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Cowboy&quot;</span><span class="p">,</span> <span class="s">@&quot;Conductor&quot;</span><span class="p">,</span> <span class="s">@&quot;Baseball&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;Beanie&quot;</span><span class="p">,</span> <span class="s">@&quot;Beret&quot;</span><span class="p">,</span> <span class="s">@&quot;Fez&quot;</span><span class="p">];</span>
</span><span class='line'><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="n">enumeratingBlock</span><span class="p">)(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">,</span> <span class="n">NSUInteger</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="p">)</span> <span class="o">=</span>
</span><span class='line'><span class="o">^</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">hat</span><span class="p">,</span> <span class="n">NSUInteger</span> <span class="n">index</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">hat</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">newHats</span> <span class="nl">enumerateObjectsUsingBlock:</span><span class="n">enumeratingBlock</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enumerating an NSDictionary]]></title>
    <link href="http://woody1983.github.com/blog/2013/08/15/enumerating-an-nsdictionary/"/>
    <updated>2013-08-15T11:36:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/08/15/enumerating-an-nsdictionary</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">funnyWords</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span>
</span><span class='line'><span class="s">@&quot;Schadenfreude&quot;</span><span class="o">:</span> <span class="s">@&quot;pleasure derived by someone from another person&#39;s misfortune.&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;Portmanteau&quot;</span><span class="o">:</span> <span class="s">@&quot;consisting of or combining two or more separable aspects or qualities&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;Penultimate&quot;</span><span class="o">:</span> <span class="s">@&quot;second to the last&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">word</span> <span class="k">in</span> <span class="n">funnyWords</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">definition</span> <span class="o">=</span> <span class="n">funnyWords</span><span class="p">[</span><span class="n">word</span><span class="p">];</span><span class="c1">//</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is defined as %@&quot;</span><span class="p">,</span> <span class="n">word</span><span class="p">,</span> <span class="n">definition</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Practice makes perfect</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">newHats</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span>
</span><span class='line'><span class="s">@&quot;Cowboy&quot;</span><span class="o">:</span> <span class="s">@&quot;White&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;Conductor&quot;</span><span class="o">:</span> <span class="s">@&quot;Brown&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;Baseball&quot;</span><span class="o">:</span> <span class="s">@&quot;Red&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">hat</span> <span class="k">in</span> <span class="n">newHats</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">color</span> <span class="o">=</span> <span class="n">newHats</span><span class="p">[</span><span class="n">hat</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Trying on new %@ %@ hat&quot;</span><span class="p">,</span> <span class="n">color</span><span class="p">,</span> <span class="n">hat</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">([</span><span class="n">mrHiggie</span> <span class="nl">tryOnHat:</span><span class="n">hat</span> <span class="nl">withColor:</span><span class="n">color</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie loves it&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie hates it&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fast enumeration]]></title>
    <link href="http://woody1983.github.com/blog/2013/08/14/fast-enumeration/"/>
    <updated>2013-08-14T23:50:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/08/14/fast-enumeration</id>
    <content type="html"><![CDATA[<h3>能多快速？</h3>

<blockquote><p>Objective-C is good at making decisions, but it’s great at being lazy.</p></blockquote>

<h4>笨方法循环打印数组内容</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">funnyWords</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Schadenfreude&quot;</span><span class="p">,</span> <span class="s">@&quot;Portmanteau&quot;</span><span class="p">,</span> <span class="s">@&quot;Penultimate&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">funnyWords</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">funnyWords</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">funnyWords</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>更简洁的方法是</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">funnyWords</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Schadenfreude&quot;</span><span class="p">,</span> <span class="s">@&quot;Portmanteau&quot;</span><span class="p">,</span> <span class="s">@&quot;Penultimate&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">word</span> <span class="k">in</span> <span class="n">funnyWords</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">word</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>练习</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">newHats</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Cowboy&quot;</span><span class="p">,</span> <span class="s">@&quot;Conductor&quot;</span><span class="p">,</span> <span class="s">@&quot;Baseball&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">hat</span><span class="p">;</span> <span class="c1">//记得声明</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">hat</span> <span class="k">in</span> <span class="n">newHats</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Trying on new %@ hat&quot;</span><span class="p">,</span> <span class="n">hat</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">([</span><span class="n">mrHiggie</span> <span class="nl">tryOnHat:</span><span class="n">hat</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie loves it&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie hates it&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try Objective-C]]></title>
    <link href="http://woody1983.github.com/blog/2013/08/11/try-objective-c/"/>
    <updated>2013-08-11T23:30:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/08/11/try-objective-c</id>
    <content type="html"><![CDATA[<h3>Code School 上的免费教程，为什么要着急先把这个免费的学掉 我也不知道具体是为什么。一个月学费20$ 总是出现在我最忙的时候。月底还有考试，真TMD服了。</h3>

<!-- more -->


<h2>常规的一些语法 变量 输出</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello,Mr.Johnny&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="n">firstName</span><span class="p">);</span> <span class="c1">//Logging a variable</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello there, %@.&quot;</span><span class="p">,</span> <span class="n">firstName</span> <span class="p">);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ %@&quot;</span><span class="p">,</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">firstName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ %@&quot;</span><span class="p">,</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">lastName</span><span class="p">);</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">age</span> <span class="o">=</span> <span class="err">@</span><span class="mi">30</span><span class="p">;</span> <span class="c1">//Creating a number object</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">NSNumber *ipodBirthdayYear = @2001;</span>
</span><span class='line'><span class="cm">NSNumber *iphoneBirthdayYear = @2007;</span>
</span><span class='line'><span class="cm">NSNumber *ipadBirthdayYear = @2010;</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Log a number object</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is %@ years old&quot;</span><span class="p">,</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Creating an array variable</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">apps</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;AngryFowl&quot;</span><span class="p">,</span><span class="s">@&quot;Lettertouch&quot;</span><span class="p">,</span><span class="s">@&quot;Tweetrobot&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Accessing values in an array</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">apps</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="c1">//challenge[11]: Lettertouch</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Changing an array</span>
</span><span class='line'><span class="n">apps</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;AngryFowl&quot;</span><span class="p">,</span><span class="s">@&quot;Lettertouch&quot;</span><span class="p">,</span><span class="s">@&quot;Tweetrobot&quot;</span><span class="p">,</span><span class="s">@&quot;Instacanvas&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="cp">## Dictionary还是蛮实用的。</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Creating a dictionary</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;First Name&quot;</span><span class="o">:</span> <span class="s">@&quot;Johnny&quot;</span><span class="p">};</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">appRatings</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;AngryFowl&quot;</span><span class="o">:</span> <span class="err">@</span><span class="mi">3</span><span class="p">,</span> <span class="s">@&quot;Lettertouch&quot;</span><span class="o">:</span> <span class="err">@</span><span class="mi">5</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Accessing values in a dictionary</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Lettertouch has a rating of %@.&quot;</span><span class="p">,</span> <span class="n">appRatings</span><span class="p">[</span><span class="s">@&quot;Lettertouch&quot;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<h1>基础部分结束</h1>

<h1>Objective-C 有一个特性就是调用一个方法 在这里称之为传递一个信息 不过这么看倒反而形象了。</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//Sending a message</span>
</span><span class='line'><span class="p">[</span><span class="n">tryobjc</span> <span class="n">completeThisChallenge</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Sending the description message</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">Try sending the description message to the foods array inside of NSLog() to see what it returns.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">foods</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;tacos&quot;</span><span class="p">,</span> <span class="s">@&quot;burgers&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">foods</span> <span class="n">description</span><span class="p">]);</span>
</span><span class='line'><span class="c1">//--------------------------Storing the result of a message</span>
</span><span class='line'><span class="c1">//NSString *result = [myArrayObject description];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">foods</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;tacos&quot;</span><span class="p">,</span> <span class="s">@&quot;burgers&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="n">foods</span> <span class="n">description</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//--------------------------Trying to log an NSUInteger</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">city</span> <span class="o">=</span> <span class="s">@&quot;Ice World&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">cityLength</span> <span class="o">=</span> <span class="p">[</span><span class="n">city</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;City has %lu characters&quot;</span><span class="p">,</span> <span class="n">cityLength</span><span class="p">);</span>
</span><span class='line'><span class="c1">//If you want to log an NSUInteger, you can use the %lu placeholder instead of %@.</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Operating on NSNumbers</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">NSNumber *higgiesAge = @6;</span>
</span><span class='line'><span class="cm">NSNumber *phoneLives = @3;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">NSUInteger higgiesAgeInt = [higgiesAge unsignedIntegerValue];</span>
</span><span class='line'><span class="cm">NSUInteger phoneLivesInt = [phoneLives unsignedIntegerValue];</span>
</span><span class='line'>
</span><span class='line'><span class="cm">NSUInteger higgiesRealAge = higgiesAgeInt * phoneLivesInt;</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">higgiesAge</span> <span class="o">=</span> <span class="err">@</span><span class="mi">6</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">phoneLives</span> <span class="o">=</span> <span class="err">@</span><span class="mi">3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">higgiesAgeInt</span> <span class="o">=</span> <span class="p">[</span><span class="n">higgiesAge</span> <span class="n">unsignedIntegerValue</span><span class="p">];</span>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">phoneLivesInt</span> <span class="o">=</span> <span class="p">[</span><span class="n">phoneLives</span> <span class="n">unsignedIntegerValue</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">product</span> <span class="o">=</span> <span class="n">higgiesAgeInt</span> <span class="o">*</span> <span class="n">phoneLivesInt</span><span class="p">;</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Higgie is actually %lu years old.&quot;</span><span class="p">,</span> <span class="n">product</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------Appending 2 strings</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[</span><span class="n">firstName</span> <span class="nl">stringByAppendingString:</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">Well, it turns out that we can. There is a method on NSString called stringByAppendingString: </span>
</span><span class='line'><span class="cm">that takes a single NSString argument and appends it to the NSString object that received the </span>
</span><span class='line'><span class="cm">stringByAppendingString: message, returning the full string. So we can rewrite the above code like so:</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h1>Nesting messages</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[[</span><span class="n">firstName</span> <span class="nl">stringByAppendingString:</span><span class="s">@&quot; &quot;</span><span class="p">]</span> <span class="nl">stringByAppendingString:</span><span class="n">lastName</span> <span class="p">];</span>
</span><span class='line'> <span class="cm">/*//Append firstName and lastName with a space between//*/</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//---------------------Working with long message names</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[[</span><span class="n">firstName</span> <span class="nl">stringByAppendingString:</span><span class="s">@&quot; &quot;</span><span class="p">]</span>
</span><span class='line'>                        <span class="nl">stringByAppendingString:</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">replaced</span> <span class="o">=</span> <span class="p">[</span><span class="n">fullName</span> <span class="nl">stringByReplacingOccurrencesOfString:</span><span class="n">firstName</span>
</span><span class='line'>                                                         <span class="nl">withString:</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">replaced</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">challenge[9]: Johnny Hsu</span>
</span><span class='line'><span class="cm">challenge[10]: Hsu Hsu</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Creating an NSString with a message</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">copy</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithString:</span><span class="n">firstName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a copy of %@&quot;</span><span class="p">,</span> <span class="n">copy</span><span class="p">,</span> <span class="n">firstName</span><span class="p">);</span>
</span><span class='line'><span class="c1">//challenge[5]: Johnny Hsu is a copy of Johnny Hsu</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Creating an NSString with alloc/init</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">NSString *emptyString = [[NSString alloc] init];</span>
</span><span class='line'><span class="cm">NSArray *emptyArray = [[NSArray alloc] init];</span>
</span><span class='line'><span class="cm">NSDictionary *emptyDictionary = [[NSDictionary alloc] init];</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">copy</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithString:</span><span class="n">firstName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a copy of %@&quot;</span><span class="p">,</span> <span class="n">copy</span><span class="p">,</span> <span class="n">firstName</span><span class="p">);</span>
</span><span class='line'><span class="c1">//challenge[5]: Johnny Hsu is a copy of Johnny Hsu</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Refactoring string combination</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%@ %@&quot;</span><span class="p">,</span><span class="n">firstName</span><span class="p">,</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h1>判断啥的 登场吧</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//----------------------A simple if</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">mrHiggieIsMean</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">mrHiggieIsMean</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Confirmed: he is super mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//----------------------if - else</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">mrHiggieIsMean</span> <span class="o">=</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">areYouMean</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">mrHiggieIsMean</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Confirmed: he is super mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Confirmed: he isn&#39;t super mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//----------------------if - else if - else</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">+----------------+-----------------------------------------+</span>
</span><span class='line'><span class="cm">| Meanness Range |               Log String                |</span>
</span><span class='line'><span class="cm">+----------------+-----------------------------------------+</span>
</span><span class='line'><span class="cm">| 0-3            | Mr. Higgie is on the nice side          |</span>
</span><span class='line'><span class="cm">| 4-7            | Mr. Higgie is sorta nice but not really |</span>
</span><span class='line'><span class="cm">| 8-10           | Mr. Higgie is definitely mean           |</span>
</span><span class='line'><span class="cm">+----------------+-----------------------------------------+</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">meannessScale</span> <span class="o">=</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">meannessScale</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">([</span><span class="n">meannessScale</span> <span class="n">intValue</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is on the nice side&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">([</span><span class="n">meannessScale</span> <span class="n">intValue</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">8</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="n">meannessScale</span> <span class="n">intValue</span><span class="p">]</span> <span class="o">&gt;</span><span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is sorta nice but not really&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is definitely mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------Equal strings</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">hat</span> <span class="o">=</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">currentHat</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">([</span><span class="n">hat</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;Sombrero&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Ese es un muy buen sombrero&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">hat</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;Fedora&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie was an iPhone before there was iPhone&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">hat</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie was an AstronautHelmet&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is currently hatless&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//--------------------Switch it up</span>
</span><span class='line'><span class="c1">//Mission:He has requested that we please update the switch to let him wear his AstronautHelmet hat on the weekends.</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">day</span> <span class="o">=</span> <span class="n">getDayOfWeek</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="n">day</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">4</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Fedora&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">5</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Sombrero&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">6</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">7</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is wearing: %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">currentHat</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Switch on enums</span>
</span><span class='line'><span class="k">typedef</span> <span class="nf">NS_ENUM</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">,</span> <span class="n">DayOfWeek</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">DayOfWeekMonday</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekTuesday</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekWednesday</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekThursday</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekFriday</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekSaturday</span> <span class="o">=</span> <span class="mi">6</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekSunday</span> <span class="o">=</span> <span class="mi">7</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Mission:Finish converting the rest of the cases to use the enum values.</span>
</span><span class='line'><span class="n">DayOfWeek</span> <span class="n">day</span> <span class="o">=</span> <span class="n">getDayOfWeek</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="n">day</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekMonday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekTuesday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekWednesday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekThursday:</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Fedora&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekFriday:</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Sombrero&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekSaturday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekSunday:</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is wearing: %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">currentHat</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h1>Obviously 还没写完 不能对一个拖延症患者要求太高不是。</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Arduino]]></title>
    <link href="http://woody1983.github.com/blog/2013/06/08/basic-arduino/"/>
    <updated>2013-06-08T23:50:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/06/08/basic-arduino</id>
    <content type="html"><![CDATA[<h3>PIN脚电压</h3>

<p>digitalWrite(led, HIGH);</p>

<p>使13腳位的電壓設定為相對應的值,HIGH為5V(3.3的板子上為3.3v),LOW為0V</p>

<ul>
<li>Digital Read Serial 串行数字阅读</li>
<li>Analog Read Serial 串行模拟阅读</li>
<li>resistor 电阻</li>
<li>hook-up wire 面包板插线</li>
<li>breadboard 面包板</li>
</ul>


<p>留意 LED的+电源是有PIN脚给的~ 5V电源是直接供电给button 然后通过10k的电阻连接到GND~ 并在-电源上插了一根线连到一个PIN脚上 并pinMode设置为OUTPUT~获取pushbutton的电源情况~</p>

<p><img src="http://25.media.tumblr.com/fa5442720a0bb7c5977224b78bcde78f/tumblr_mnb2qw0yjf1sst44io1_400.jpg"></p>

<!-- more -->


<h3>ADC &amp; Analog Read Serial</h3>

<p>arduino主控板上A0—-A5是指ADC输入，所谓ADC值模数变换器，将读入的模拟值进行处理，将模拟数转换为数字，便于用户对数据进行处理，因为atmea328ADC是一个10位的寄存器，2的10次方=1024，从1~1023所以当arduino读入值为默认的电压最大值5V时，analogRead读到的值就是1023.</p>

<p>模拟信号
模拟信号是指信息参数在给定范围内表现为连续的信号。 或在一段连续的时间间隔内，其代表信息的特征量可以在任意瞬间呈现为任意数值的信号。比如正弦函数、指数函数等。 从自然界感知的大部分物理量都是模拟性质的，如速度、压力、温度、声音、重量以及位置等都是最常见的物理量。</p>

<p>数字信号
数字信号指幅度的取值是离散的，幅值表示被限制在有限个数值之内。二进制码就是一种数字信号。二进制码受噪声的影响小，易于有数字电路进行处理，所以得到了广泛的应用。 通俗的说：数字传感器就产生0 1信号(此0与1是指高低电平形成的矩形波) 而模拟传感器是通过输出一个线性变换的电平信号(如通常的正弦波)</p>

<h1>杂记</h1>

<h3>关于VGA 看来还是需要给Raspberry配个显示器</h3>

<p>HDMI: High Definition Multimedia Interface, 高清晰度多媒体接口，其可同时传送音频和影音信号，最高数据传输速度为5Gbps</p>

<p>VGA: Video Graphics Array, 视频图形阵列,</p>

<p>普及一下知识，笔记本电脑上的VGA接口和HDMI接口的是输出作用的，就是说只能数据输出，没有接受数据的功能。</p>

<p>补记:远程也可以 但第一次配置WiFi账户密码什么的 还是需要显示的</p>

<h3>关于电位器</h3>

<p>程序方面没有什么特别的地方 一样是 将他的Analog数值读出来用作你想使用的地方</p>

<p>int sensorValue = analogRead(A0);
实用的地方之一 就是可以用外界来控制电压的大小 来达到想要的效果.</p>

<p>将得到的analog数值按照模拟方式写给电子元件</p>

<p>analogWrite(2,sensorValue);
另外 蜂鸣器需要特殊的操作才能发出声音…噪音确切点</p>

<h3>我的第一个Arduino UNO R3</h3>

<p><img src="http://24.media.tumblr.com/cd348854371f41a165a21b802d4b8cae/tumblr_mn8rm1rGDS1sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/425af0b5217813e7227785ac1431ad3f/tumblr_mnd3ouoEB61sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/a4e9ab26fd2e9a2f630db6476747192b/tumblr_mnejqm2t7l1sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/0eb1b4af85107cd163413a5d8456edef/tumblr_mngqgrrtWg1sst44io1_400.jpg">
<img src="http://24.media.tumblr.com/19a7eebe4d1eed8da211d38ee1c75825/tumblr_mnikolbPlQ1sst44io1_400.jpg">
<img src="http://24.media.tumblr.com/4eecaf0a7307ada1595b2ceae1f0fd63/tumblr_mnimukqbd41sst44io1_400.jpg"></p>

<h3>Arduino Sensor Shield V5.0</h3>

<p><img src="http://24.media.tumblr.com/c61baa915d4c6b609c18ab8eb428ebd2/tumblr_mncx4xipVw1sst44io1_400.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LM35使用笔记]]></title>
    <link href="http://woody1983.github.com/blog/2013/06/08/lm35shi-yong-bi-ji/"/>
    <updated>2013-06-08T23:25:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/06/08/lm35shi-yong-bi-ji</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">使用LM35来测量室内温度</span>
</span><span class='line'>
</span><span class='line'><span class="cm">留意float类型的计算和温度换算公式</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">analogRead</span><span class="p">(</span><span class="n">A0</span><span class="p">);</span>    <span class="c1">//读取A0口的电压值</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">float</span> <span class="n">vol</span> <span class="o">=</span> <span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mf">1024.0</span><span class="p">)</span> <span class="o">*</span> <span class="mf">5.0</span><span class="p">;</span>   <span class="c1">//使用浮点数存储温度数据，温度数据由电压值换算得到</span>
</span><span class='line'>  <span class="kt">float</span> <span class="n">T</span> <span class="o">=</span> <span class="n">vol</span><span class="o">*</span><span class="mi">100</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">&quot;analogRead A0: &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">&quot; Volatge: &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">vol</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">&quot; Temperature: &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">T</span><span class="p">);</span>                   <span class="c1">//串口输出温度数据</span>
</span><span class='line'>  <span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span>                           <span class="c1">//等待2秒，控制刷新速度</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Analog convert Voltage</h3>

<p>LM35换算公式简化掉 Analog数值*(5/1024) 即可 5 voltage 1024 analog</p>

<p><img src="http://25.media.tumblr.com/d0f801f032d35b3ff84a0df6c6c2cb63/tumblr_mnbaw9lKc31sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/0dae8653daf7cb673d7956f3ecc5ef20/tumblr_mnb63bt0J11sst44io1_400.jpg"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">LM35</span> <span class="n">Temperature</span> <span class="n">Sensor</span>
</span><span class='line'><span class="err">和</span><span class="n">TMP36</span><span class="err">不太一样</span> <span class="n">LM35</span><span class="err">没有默认电流</span> <span class="err">在没有温度的时候</span> <span class="err">输出电压是</span><span class="mi">0</span><span class="n">mv</span>
</span><span class='line'>
</span><span class='line'><span class="err">对比关系还是</span><span class="mi">5</span><span class="n">v</span><span class="err">对应</span><span class="n">analog</span><span class="err">的</span><span class="mi">1023</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1023</span><span class="err">的</span><span class="n">analog</span><span class="err">数值转换成</span><span class="n">voltage</span> <span class="o">=</span> <span class="n">analog</span><span class="o">/</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="err">摄氏度</span> <span class="o">=</span> <span class="mi">10</span><span class="n">mv</span> <span class="n">so</span> <span class="n">voltage</span><span class="err">转温度也比较容易一些</span>
</span><span class='line'>
</span><span class='line'><span class="n">open</span> <span class="n">a</span> <span class="n">serial</span> <span class="n">connection</span> <span class="n">to</span> <span class="n">display</span> <span class="n">values</span> <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AR底盘]]></title>
    <link href="http://woody1983.github.com/blog/2013/06/03/ardi-pan/"/>
    <updated>2013-06-03T23:43:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/06/03/ardi-pan</id>
    <content type="html"><![CDATA[<h4>ミニ四駆30周年を迎え、空力を含め走行性能を追求した新設計シャーシを採用。</h4>

<p>看完图纸 第一感觉是 <code>底盘是越来越低了</code>  <code>电池和马达可以在车底更换，而且是在不拆壳的前提下完成。</code></p>

<p>原车配有刹车零件和<code>26mm低重心胎框</code>與六顆低磨擦導輪。</p>

<p>迷你四驅車REV中的REV是指「REVOLUTION」，具有革命的意味。</p>

<p><img src="http://media.tumblr.com/32ac50b59e4af6c02874ee053816f3c9/tumblr_inline_mnt1idjMPz1qz4rgp.jpg"></p>

<!-- more -->


<h4>侧面来看车身底盘高度。</h4>

<p><img src="http://media.tumblr.com/41a4dfd6bdf6e495643f3d69cbad62f4/tumblr_inline_mnt1j3q37w1qz4rgp.jpg"></p>

<h4>底盘的造型可以说是对得起30周年纪念日的发型车。</h4>

<p><img src="http://media.tumblr.com/dc8096af27257865d2db2f25f5135511/tumblr_inline_mnt1l1fRxL1qz4rgp.jpg"></p>

<h4>传说中的空气动力系统</h4>

<p><img src="http://media.tumblr.com/b32763821bf74056603bda1a57ad6c3d/tumblr_inline_mnt1lkCqPE1qz4rgp.jpg"></p>

<h2>进气口特写</h2>

<p><img src="http://media.tumblr.com/ff855c86495064e20e3cc7e86aa83923/tumblr_inline_mnt1ng1Pow1qz4rgp.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于HC-SR04 超声波传感器]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/27/guan-yu-hc-sr04-chao-sheng-bo-chuan-gan-qi/"/>
    <updated>2013-05-27T00:21:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/27/guan-yu-hc-sr04-chao-sheng-bo-chuan-gan-qi</id>
    <content type="html"><![CDATA[<p>关于HC-SR04 超声波传感器</p>

<p>淘宝上面最便宜的SRF-04超声波传感器，有四个脚：5v电源脚（Vcc），触发控制端（Trig），接收端（Echo），地端（GND） 我的是HC-SR04</p>

<p>模块工作原理：</p>

<p>1.采用IO触发测距，给至少10us的高电平信号；
2.模块自动发送8个40KHz的方波，自动检测是否有信号返回；
3.有信号返回，通过IO输出一高电平，高电平持续的时间就是超声波从发射到返回的时间．测试距离=(高电平时间*声速(340m/s))/2;
pulseIn函数用于读取引脚脉冲的时间长度，脉冲可以是HIGH或LOW。如果是HIGH，函数将先等引脚变为高电平，然后开始计时，一直到变为低电平为止。返回脉冲持续的时间长短, 单位为ms。如果超时还没有读到的话, 将返回0。</p>

<p>Demo:</p>

<p>发一个10ms的高脉冲去触发TrigPin</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">digitalWrite</span><span class="p">(</span><span class="n">TrigPin</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'><span class="n">delayMicroseconds</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">//使发出发出超声波信号接口低电平2μs</span>
</span><span class='line'><span class="n">digitalWrite</span><span class="p">(</span><span class="n">TrigPin</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'><span class="n">delayMicroseconds</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span> <span class="c1">//使发出发出超声波信号接口高电平10μs，这里是至少10μs</span>
</span><span class='line'><span class="n">digitalWrite</span><span class="p">(</span><span class="n">TrigPin</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span> <span class="c1">//保持发出超声波信号接口低电平</span>
</span></code></pre></td></tr></table></div></figure>


<h4>距离换算</h4>

<ul>
<li>cm = pulseIn(EchoPin, HIGH) / 58.0; //算成厘米</li>
<li>cm = (int(cm * 100.0)) / 100.0; //保留两位小数</li>
</ul>


<p>原理理解以后 尽量使用arduino官方推荐的SR04超声波传感器类库</p>

<h3>读出脉冲时间</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="n">distance</span> <span class="o">=</span> <span class="n">pulseIn</span><span class="p">(</span><span class="n">inputPin</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'><span class="n">distance</span><span class="o">=</span> <span class="n">distance</span><span class="o">/</span><span class="mi">58</span><span class="p">;</span> <span class="c1">// 将脉冲时间转化为距离（单位：厘米）</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ariadne]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/26/ariadne/"/>
    <updated>2013-05-26T23:38:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/26/ariadne</id>
    <content type="html"><![CDATA[<h4>アリアス/ Ariadne / 阿里阿德涅</h4>

<p><img src="http://media.tumblr.com/d5e95b4a06b7a25e6b96c61d2c7564d2/tumblr_inline_mnelt4J0Qq1qz4rgp.jpg"></p>

<p>阿里阿德涅在希臘神話中(拉丁文：Arianna)是克里特(Crete)之王 米諾斯(Minos)[補充5]與其皇后帕西菲(Pasiphaë)所生的女兒。 她曾經幫助過忒修斯[補充]解開米諾斯的迷宮，並戰勝了彌諾陶洛斯 (Minotaur)[補充6]。 後來成為了古希臘神話中的酒神狄俄倪索斯(Dionysus)[補充7]的妻子。</p>

<p>[補充5] 克里特島國王米諾斯在戰爭中打敗過雅典，他要求雅典人每九年(亦傳每年) 奉祭七名少年七名少女給怪物彌諾陶洛斯。輪到第三次奉祭時，忒修斯 自告奮勇要去殺死那個怪物。他和父親埃勾斯約定，當他的船回航時若成功則掛白帆。</p>

<p>在克里特，米諾斯的女兒阿里阿德涅愛上了忒修斯，她給了他一個線團， 以便他在迷宮中標記退路。忒修斯殺死了彌諾陶洛斯，帶領其他雅典人 逃離了迷宮，他還帶走了阿里阿德涅，但在回航路上將她遺棄在奈克索斯島 (Naxos)。阿里阿德涅詛咒了他，於是忒修斯忘記掛上白帆，埃勾斯以為 忒修斯失敗身亡，悲痛之下墮下海岸而死，從此這片海域就被稱為愛琴海 (Aegean)。</p>

<p>另一種說法是忒修斯被酒神狄俄涅索斯脅迫，將阿里阿德涅遺棄， 沮喪之餘忘記了掛白帆。</p>

<p>忒修斯回航所乘的船據說在雅典保留了很多年，木頭朽毀後不斷修補替換， 後來人們常把部分替換後主體是否仍然保留的哲學命題稱為忒修斯的船。</p>

<p>這段故事三千年來在歐洲被廣泛傳誦多次改編。 阿里阿德涅的線(Ariadne’s thread )、忒修斯的船(Ship of Theseus)等 成為常用的典故，亦在邏輯學、哲學中成為專用的術語。</p>

<p>[補充6] 彌諾陶洛斯希為臘神話中一個著名的半人半牛怪物。 彌諾陶洛斯是克里特國王米諾斯之妻帕西菲與克里特公牛發生反常性關係 而生出來的怪物。在彌諾斯與其兄弟爭奪王位的時候，海神波塞冬曾從海上 送給他一頭純白色的公牛。彌諾斯本應以此牛向波塞冬獻祭，但他卻將其 藏匿起來，並獻祭了另外一頭。波塞冬為了報復，就使帕西菲瘋狂地愛上 了這頭牛。在著名的建築師代達羅斯(他在米諾斯的宮廷裡避難)的幫助下， 帕西菲化裝成一頭母牛與此牛交配；結果她不久便懷孕生下了彌諾陶洛斯。</p>

<p>按照另一種說法，彌諾陶洛斯則是波塞冬本人與帕西菲所生。</p>

<p>在古希臘人的想象中，彌諾陶洛斯具有人類的身體，但長著一顆牛頭和 一條牛尾巴。據說帕西菲在彌諾陶洛斯嬰兒時期還曾撫養過它， 但彌諾陶洛斯在長大之後就變得非常殘忍凶暴。</p>

<p>[補充7] 狄俄倪索斯是古希臘神話中的酒神，與羅馬人信奉的巴克斯(拉丁語：Bacchus) 相對應。狄俄倪索斯是古代希臘色雷斯人信奉的葡萄酒之神，不僅握有葡萄酒 醉人的力量，還以布施歡樂與慈愛在當時成為極有感召力的神，他推動了古代 社會的文明並確立了法則，維護著世界的和平。此外，他還護佑著希臘的農業 與戲劇文化。傳說中他是宙斯與塞墨勒之子，又有一說是宙斯與珀耳塞福涅之子。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hermes]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/26/hermes/"/>
    <updated>2013-05-26T00:07:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/26/hermes</id>
    <content type="html"><![CDATA[<h2>ヘルメス/ Hermes/ 赫耳墨斯</h2>

<p>赫耳墨斯是宙斯與瑪亞的兒子，是奧林匹斯十二主神之一。 他是邊界及穿越邊界的旅行者之神，亦掌管牧羊人與牧牛人，辯論與靈舌， 詩與文字，體育，重量與度量，發明與商業，他也是狡猾的小偷和騙子之神。 《荷馬詩頌》裡描述他是一個變化多端、圓滑機靈的盜賊，他帶給人夢境， 是夜裡守望者，門外的小偷，在長生不老的眾神裡最先展示善意的人。</p>

<p>赫耳墨斯是神界與人界之間的信使，這是他與伊里斯共同擔當的職責。</p>

<p>赫耳墨斯發明了鑽木取火，他還發明了樂器排蕭和里拉琴。 赫耳墨斯也是各種競技比賽及拳擊的發明人，也因此成為運動員的保護神。 現代神話收集家經常把赫耳墨斯和其他民族文化裡的耍詭計的神相提並論。</p>

<p>赫耳墨斯還是亡靈的接引神，他幫助死去的靈魂到達冥界。 在許多希臘神話故事里，赫耳墨斯是除了哈得斯和珀耳塞福涅之外 唯一可以在冥界自由出入的神。</p>

<p>赫耳墨斯的代表動物是公雞和烏龜，他的身上戴有皮包或是皮夾， 腳穿插翼涼鞋，頭戴翼帽，手拿信使的權杖，也叫做雙盤蛇帶翼權杖。 赫耳墨斯因為他的機智與狡猾也成為盜賊之神，他出生的第一晚就已經 做了小偷，從母親瑪亞那裡溜出去偷他哥哥阿波羅的神牛。</p>

<p>赫耳墨斯對他的父親宙斯十分忠誠，當宙斯的愛人之一寧芙仙子 伊俄被赫拉捉住，並且派了百眼巨人阿耳戈斯看守的時候，是赫耳墨斯出手 解救了她。他給巨人唱悅耳動聽的歌，講冗長乏味的故事以哄他入睡之後， 用月牙形的彎刀砍下了他的頭。</p>

<p>赫耳墨斯在羅馬神話中對應于墨丘利(拉丁語：Mercurius)，是九大行星中的水星。 墨丘利繼承了赫耳墨斯的許多特徵，比如商業的守護神。</p>

<p>他雙腳長有雙翼、因此行走如飛，並成為在奧林匹斯山擔任宙斯和諸神傳令的 使者，為諸神傳送消息，並完成宙斯交給他的各種任務。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino PWM Control Led]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/24/arduino-pwm-control-led/"/>
    <updated>2013-05-24T11:54:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/24/arduino-pwm-control-led</id>
    <content type="html"><![CDATA[<h3>几个概念</h3>

<ul>
<li>LED长脚接(+)</li>
<li>Digital 的pin脚可以代替(+) 另一端需接GND地线</li>
<li>resistor 要选择合适的值 否则电压会过小或过大</li>
<li>串联和并联的区别 我初中白念了</li>
<li>analogWrite 模拟传值</li>
</ul>


<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">redled_1</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">redled_2</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">greenled</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">switchPins</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">brightness</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">fadeAmount</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">// 把3,4,5腳定義為輸出 </span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">redled_1</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">redled_2</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">greenled</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 把第2腳定義為輸入 </span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">switchPins</span><span class="p">,</span><span class="n">INPUT</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">switchstate</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">// 用 digitalRead(2) 來讀取第2腳開關的狀態 </span>
</span><span class='line'>  <span class="n">switchstate</span> <span class="o">=</span> <span class="n">digitalRead</span><span class="p">(</span><span class="n">switchPins</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 如果案件沒有按下，就只亮綠燈 </span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">switchstate</span> <span class="o">==</span> <span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="c1">//digitalWrite(3, HIGH); </span>
</span><span class='line'>    <span class="c1">// 將第3腳的綠燈點亮 </span>
</span><span class='line'>    <span class="n">analogWrite</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">brightness</span><span class="p">);</span>
</span><span class='line'>    <span class="n">brightness</span> <span class="o">=</span> <span class="n">brightness</span> <span class="o">+</span> <span class="n">fadeAmount</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">brightness</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">brightness</span> <span class="o">==</span> <span class="mi">255</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>        <span class="n">fadeAmount</span> <span class="o">=</span> <span class="o">-</span><span class="n">fadeAmount</span> <span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
</span><span class='line'>    <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 將第4腳的紅燈熄滅 </span>
</span><span class='line'>    <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 將第5腳的紅燈熄滅 </span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 如果按鍵按下了，就會進入下面的程式碼 </span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>     <span class="p">{</span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第3腳的綠燈熄滅 </span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第4腳的紅燈熄滅 </span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第5腳的紅燈點亮 </span>
</span><span class='line'>       <span class="c1">// 等 250 mini-second 後再改變燈號 </span>
</span><span class='line'>       <span class="n">delay</span><span class="p">(</span><span class="mi">250</span><span class="p">);</span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第4腳的紅燈點亮 </span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第5腳的紅燈熄滅 </span>
</span><span class='line'>       <span class="c1">// 等 250 mini-second 後再改變燈號 </span>
</span><span class='line'>       <span class="n">delay</span><span class="p">(</span><span class="mi">250</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Servo]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/23/servo/"/>
    <updated>2013-05-23T23:49:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/23/servo</id>
    <content type="html"><![CDATA[<p>Servo myservo; <code>创建一个舵机对象 使用Servo类最多可以控制8个舵机</code></p>

<p>int pos = 0; <code>// 该变量用与存储舵机角度位置</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">myservo</span><span class="p">.</span><span class="n">attach</span><span class="p">(</span><span class="mi">9</span><span class="p">);</span>  <span class="c1">// 该舵机由arduino第九脚控制</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R语言和回归分析的模拟]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/17/ryu-yan-he-hui-gui-fen-xi-de-mo-ni/"/>
    <updated>2013-05-17T15:35:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/17/ryu-yan-he-hui-gui-fen-xi-de-mo-ni</id>
    <content type="html"><![CDATA[<h3>导入数据</h3>

<p>employees &lt;- read.csv(&#8220;http://www.headfirstlabs.com/books/hfda/hfda_ch09_employees.csv&#8221;,header=TRUE)</p>

<ul>
<li>X id</li>
<li>received 加薪幅度</li>
<li>negotiated 是否提出加薪需求</li>
<li>gender 性别</li>
<li>year 加薪时间？</li>
</ul>


<!-- more -->


<h3>Create Hist</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received, breaks=50)</span></code></pre></td></tr></table></div></figure>


<p>Y轴 Frequency 是频数 此处为人数的意思
X轴 employees$received 加薪幅度
多数人的加薪幅度为5%左右</p>

<p>确认加薪幅度的标准差为多少</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sd(employees$received)
</span><span class='line'>#-- [1] 2.432138</span></code></pre></td></tr></table></div></figure>


<h3>汇总统计</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>summary(employees$received)
</span><span class='line'>#  Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
</span><span class='line'>#-1.800   4.600   5.500   6.028   6.700  25.900 </span></code></pre></td></tr></table></div></figure>


<h3>单独看一下2007年的加薪情况</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$year == 2007], breaks=50)
</span><span class='line'>hist(employees$received[employees$year == 2008], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h3>女性的加薪情况</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$gender == "F"], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h3>男性的加薪情况</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$gender == "M"], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h3>多角度去看</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$year == 2007 & 
</span><span class='line'>     employees$gender == "M"], breaks=50)
</span><span class='line'>hist(employees$received[employees$year == 2007 & 
</span><span class='line'>     employees$gender == "F" & employees$negotiated == "TRUE"], breaks=50)
</span><span class='line'>hist(employees$received[employees$year == 2007 & 
</span><span class='line'>     employees$gender == "F" & employees$negotiated == "FALSE"], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h4>对是否提出过的加薪要求和没有提出要求的分别统计</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>summary(employees$received[employees$negotiated == TRUE])
</span><span class='line'>#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
</span><span class='line'>#-1.800   6.300   7.600   8.096   9.000  25.900 
</span><span class='line'>summary(employees$received[employees$negotiated == FALSE])
</span><span class='line'>#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
</span><span class='line'>#1.700   4.300   5.000   4.994   5.700   8.100 </span></code></pre></td></tr></table></div></figure>


<blockquote><p>很明显  提出加薪要求的人 得到的加薪幅度最大</p></blockquote>

<h2>预测部分</h2>

<p>比较 两个变量：要求加薪幅度和实际加薪幅度</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>employees &lt;- read.csv("http://www.headfirstlabs.com/books/hfda/hfda_ch10_employees.csv",header=TRUE)
</span><span class='line'>
</span><span class='line'>head(employees)
</span><span class='line'>plot(employees$requested[employees$negotiated == TRUE],
</span><span class='line'>     employees$received[employees$negotiated == TRUE])</span></code></pre></td></tr></table></div></figure>


<h3>相关系数</h3>

<p><code>[1] 0.6656481</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cor(employees$requested[employees$negotiated == TRUE],
</span><span class='line'>     employees$received[employees$negotiated == TRUE])</span></code></pre></td></tr></table></div></figure>


<h4>预测公式</h4>

<blockquote><p>Y轴实际加薪值received（y）= Y轴截距(a) + 斜率(b) x X轴要求加薪值requested(x)</p></blockquote>

<h3>创建一个线性模型 指出回归线的系数</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myLm &lt;- lm(received[negotiated == TRUE] ~ requested[negotiated == TRUE],data=employees)</span></code></pre></td></tr></table></div></figure>


<h3>回归线系数</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myLm$coefficients
</span><span class='line'>#                  (Intercept) requested[negotiated == TRUE] 
</span><span class='line'>#                   2.3121277                     0.7250664 </span></code></pre></td></tr></table></div></figure>


<p>截距 <code>2.3</code>     斜率<code>0.7</code></p>

<p>如果你要求加薪8% 用这个公式就是 y = 2.3+0.7<em>8 实际可能加薪7.9%
如果预期是5% ，y = 2.3+0.7</em>5 # 5.8% 则会超过预期</p>

<h2>有关合理误差</h2>

<p>!!! 小心外插法:用回归方程预测数据范围以外的数值成为外插法
内插法对数据范围内的点进行预测 正式回归法的本来目的。
千万要对模型假设保持戒心。</p>

<blockquote><p>观察他人的模型时，一定要想一想他们的假设有何道理，以及他们是否忘记了某种假设。不合适的假设会使模型完全失效&#8212;这还算是最好的结果；最坏的结果是具有危险的欺骗性。</p></blockquote>

<p>限定预测范围 避免外插法
 x的范围在 <code>0%到22%</code></p>

<h3>添加一条回归线  有lm运算得出  在回归线上放的人得到的比预期的多  下方同理</h3>

<p><code>abline(myLm)</code></p>

<p>任何点在距离回归线的距离叫做“残差”    预测总是会与机会误差同在  所以指出误差所在是必要的。
指出误差可以让分析方：<code>1 切实的预期 2 了解更多 3 更好的决策</code></p>

<h4>找出均方根误差</h4>

<p>summary(myLm)<code>#Summary函数里的可以显示Residual standard error: 2.298 on 998 degrees of freedom</code>
也可以使用函数 sigma直接显示
summary(myLm)$sigma <code>#[1] 2.297743</code></p>

<p>结果 加减2.3% 把机会误差的范围也计算进去</p>

<h3>分割的根本目的是管理误差</h3>

<p>以要求加薪10%为标准  划分两个结果 因为10%以下的误差最小
 两个独立的模型  两条回归线
 优秀的回归分析兼具解释功能和预测功能</p>

<h3>创建新模型</h3>

<h2>激进谈判者专用</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myLmBig &lt;- lm(received[negotiated == TRUE & requested &gt; 10] ~ requested[negotiated == TRUE & requested &gt; 10],
</span><span class='line'>              data=employees)
</span><span class='line'>#胆小谈判者专用
</span><span class='line'>myLmSmall &lt;- lm(received[negotiated == TRUE & requested &lt;= 10] ~ requested[negotiated == TRUE & requested &lt;= 10],
</span><span class='line'>              data=employees)</span></code></pre></td></tr></table></div></figure>


<h3>汇总分析两个新模型</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>summary(myLmSmall)$coefficients
</span><span class='line'>#                                                 Estimate Std. Error   t value      Pr(&gt;|t|)
</span><span class='line'>#(Intercept)                                     0.7933468 0.22472009  3.530378  4.378156e-04
</span><span class='line'>#requested[negotiated == TRUE & requested &lt;= 10] 0.9424946 0.03151835 29.903041 6.588020e-134
</span><span class='line'>summary(myLmSmall)$sigma #[1] 1.374526
</span><span class='line'>
</span><span class='line'>#--/ 方根误差更小 1.4左右
</span><span class='line'>
</span><span class='line'>summary(myLmBig)$coefficients
</span><span class='line'>#                                               Estimate Std. Error  t value     Pr(&gt;|t|)
</span><span class='line'>#(Intercept)                                    7.813403  1.8760371 4.164845 4.997597e-05
</span><span class='line'>#requested[negotiated == TRUE & requested &gt; 10] 0.302609  0.1420151 2.130824 3.457618e-02
</span><span class='line'>summary(myLmBig)$sigma #[1] 4.544424
</span><span class='line'>#--/ 方根误差在4.5</span></code></pre></td></tr></table></div></figure>


<p>Summary</p>

<h2>如果要求小于或等于10%的时候  Y = 0.8 + 0.9X  ±1.4%</h2>

<h2>如果要求大于10%的时候 Y = 7.8 + 0.3X ±4.5%</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R Note]]></title>
    <link href="http://woody1983.github.com/blog/2013/04/16/r-note/"/>
    <updated>2013-04-16T14:21:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/04/16/r-note</id>
    <content type="html"><![CDATA[<h3>R 的安装 OS是Centos5.5</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> 1011  wget http://cran.r-project.org/src/base/R-3/R-3.0.0.tar.gz
</span><span class='line'> 1012  tar zxvf R-3.0.0.tar.gz
</span><span class='line'> 1013  ls -lah
</span><span class='line'> 1014  cd R-3.0.0
</span><span class='line'> 1015  yum install gcc-gfortran
</span><span class='line'> 1016  yum install gcc gcc-c++
</span><span class='line'> 1017  yum install readline-devel
</span><span class='line'> 1018  yum install libXt-devel
</span><span class='line'> 1019  ./configure
</span><span class='line'> 1020  make
</span><span class='line'> 1021  make install
</span><span class='line'> 1022  R</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>RのSyntax</h3>

<p><code>+ "" *</code>典型的四则运算</p>

<p><code>Logical Values</code>
Some expressions return a <code>Logical Values</code> : <code>TRUE</code> or <code>FALSE</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; 2 + 25
</span><span class='line'>[1] FALSE</span></code></pre></td></tr></table></div></figure>


<p>T and F are shorthand for TRUE FALSE</p>

<p> 给Variables赋值用 <code>&lt;-</code>
you can re-assign any value to a variable at any time, assigning the TRUE logical value to &#8216;X&#8217;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; x &lt;- 42
</span><span class='line'>&gt; x/2
</span><span class='line'>[1] 21
</span><span class='line'>&gt; x &lt;- T
</span><span class='line'>&gt; x
</span><span class='line'>[1] TRUE
</span><span class='line'>&gt; x &lt;- "R"
</span><span class='line'>&gt; x
</span><span class='line'>[1] "R"</span></code></pre></td></tr></table></div></figure>


<h3>RのFunction</h3>

<p> 直接调用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sum(1,2,3)
</span><span class='line'>[1] 6
</span><span class='line'>&gt; sqrt(16)
</span><span class='line'>[1] 4</span></code></pre></td></tr></table></div></figure>


<p>有些Function有参数<code>names</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; rep("Yo",times=3)
</span><span class='line'>[1] "Yo" "Yo" "Yo"</span></code></pre></td></tr></table></div></figure>


<h3>RのHelp</h3>

<p><code>help(sum)</code> &amp; <code>example(sum)</code></p>

<h3>RのFiles</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; list.files()
</span><span class='line'>[1] "sum.R"
</span><span class='line'>&gt; source("sum.R")
</span><span class='line'>&gt; x
</span><span class='line'>[1] 6</span></code></pre></td></tr></table></div></figure>


<h3>RのVectors</h3>

<p>中文翻译:<code>载体</code>或 <code>向量</code> R的需要业务逻辑都依靠向量来完成。
A vector&#8217;s values can be numbers, strings, logical values, or any other type, as long as they&#8217;re all the same type!
The function <code>c</code> creates a new vector by combining a list of values.</p>

<h3>c is shorthand Combine</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; c(4,5,6)
</span><span class='line'>[1] 4 5 6
</span><span class='line'>&gt; x &lt;- c(4,5,6,7,8,9)
</span><span class='line'>&gt; x
</span><span class='line'>[1] 4 5 6 7 8 9</span></code></pre></td></tr></table></div></figure>


<p>不同Type的value不能combine成一个Vector 如果硬来 只能转换成一个characters的Vector</p>

<h3>RのSequence Vectors</h3>

<p>如果你需要一个数字序列的Vectors 用 <code>__:__</code>来创建</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; 5:9
</span><span class='line'>[1] 5 6 7 8 9
</span><span class='line'>&gt; 9:5
</span><span class='line'>[1] 9 8 7 6 5</span></code></pre></td></tr></table></div></figure>


<p>A more Versatile way to make seq is to call the <code>seq</code> fun. Let&#8217;s do the same thing with seqs:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; seq(1,9)
</span><span class='line'>[1] 1 2 3 4 5 6 7 8 9</span></code></pre></td></tr></table></div></figure>


<p>修改步长</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; seq(1,9,0.5)
</span><span class='line'> [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0</span></code></pre></td></tr></table></div></figure>


<h3>RのVector Access</h3>

<p>用一些Strings创建一个Vector 并存在一个Variable里。
we&#8217;re going to create a new vector with some strings in it,and store it in the Sentence variable.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence &lt;- c('walk','the','plank')
</span><span class='line'>&gt; sentence[3]
</span><span class='line'>[1] "plank"</span></code></pre></td></tr></table></div></figure>


<p>重写第三个</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[3] &lt;- 'dog'
</span><span class='line'>&gt; sentence[3]
</span><span class='line'>[1] "dog"</span></code></pre></td></tr></table></div></figure>


<p>追加第四个</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[4] &lt;- 'to'
</span><span class='line'>&gt; sentence
</span><span class='line'>[1] "walk" "the"  "dog"  "to"</span></code></pre></td></tr></table></div></figure>


<p>用Vector访问Vector</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[c(1,3)]
</span><span class='line'>[1] "walk" "dog"</span></code></pre></td></tr></table></div></figure>


<p>或者一个ranges</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[2:4]
</span><span class='line'>[1] "the" "dog" "to"</span></code></pre></td></tr></table></div></figure>


<p>追加一个Vector到指定的范围</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[5:7] &lt;- c('the','poop','deck')
</span><span class='line'>&gt; sentence
</span><span class='line'>[1] "walk" "the"  "dog"  "to"   "the"  "poop" "deck"</span></code></pre></td></tr></table></div></figure>


<h3>RのVector Names</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; ranks &lt;- 1:3
</span><span class='line'>&gt; names(ranks) &lt;- c("first","second","third")
</span><span class='line'>&gt; ranks
</span><span class='line'> first second  third
</span><span class='line'>     1      2      3</span></code></pre></td></tr></table></div></figure>


<h3>RのPlotting One Vector</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; vesselsSunk &lt;- c(4,5,1)
</span><span class='line'>&gt; names(vesselsSunk) &lt;- c("England","French","Norway")
</span><span class='line'>&gt; barplot(vesselsSunk)
</span><span class='line'>
</span><span class='line'>&gt; barplot(1:00) 绘制一个从1到100的柱状图。</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R1.jpg"></p>

<h3>RのVector Math</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; a &lt;- c(1,2,3)
</span><span class='line'>&gt; b &lt;- c(4,5,6)
</span><span class='line'>&gt; a+1
</span><span class='line'>[1] 2 3 4
</span><span class='line'>&gt; a/2
</span><span class='line'>[1] 0.5 1.0 1.5
</span><span class='line'>&gt; a+2
</span><span class='line'>[1] 3 4 5
</span><span class='line'>&gt; a+b
</span><span class='line'>[1] 5 7 9
</span><span class='line'>&gt; a-b
</span><span class='line'>[1] -3 -3 -3
</span><span class='line'>
</span><span class='line'>&gt; a == c(1,99,3)
</span><span class='line'>[1]  TRUE FALSE  TRUE
</span><span class='line'>
</span><span class='line'>&gt; sin(a)
</span><span class='line'>[1] 0.8414710 0.9092974 0.1411200
</span><span class='line'>&gt; sqrt(a)
</span><span class='line'>[1] 1.000000 1.414214 1.732051
</span></code></pre></td></tr></table></div></figure>


<h3>RのScatter Plots</h3>

<p>散点图 The plot function takes two vectors, one for X values and one for Y values and draws a graph of them.</p>

<p>绘制数字和正弦sin之间的关系</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; x &lt;- seq(1,20, 0.1)
</span><span class='line'>&gt; y &lt;- sin(x)
</span><span class='line'>&gt; plot (x,y)
</span><span class='line'>&gt; q();
</span><span class='line'>Save workspace image? [y/n/c]: y
</span><span class='line'>
</span><span class='line'>&gt; values &lt;- -10:10
</span><span class='line'>&gt; absolutes &lt;- abs(values)
</span><span class='line'>&gt; plot(values,absolutes)
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R2.jpg"></p>

<p><img src="http://woody1983.github.com/images/img/R3.jpg"></p>

<h3>RのNA值</h3>

<p>当数据中的某个值不可用时 可用NA代替</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; a &lt;- c(1,3,NA,7,9)
</span><span class='line'>&gt; sum(a)
</span><span class='line'>[1] NA
</span><span class='line'>&gt; sum(a, na.rm=T)
</span><span class='line'>[1] 20</span></code></pre></td></tr></table></div></figure>


<h3>RのMatrices</h3>

<p>Matrix是一种二维数组。
A matrix is just a fancy term for a 2-dimensional array.
Let&#8217;s make a matrix 3 rows high by 4 columns wide,with all its fields set to 0.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; matrix(0,3,4)
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    0    0    0    0
</span><span class='line'>[2,]    0    0    0    0
</span><span class='line'>[3,]    0    0    0    0
</span><span class='line'>&gt; a &lt;- 1:12
</span><span class='line'>&gt; a
</span><span class='line'> [1]  1  2  3  4  5  6  7  8  9 10 11 12
</span><span class='line'>&gt; matrix(a,3,4)
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    1    4    7   10
</span><span class='line'>[2,]    2    5    8   11
</span><span class='line'>[3,]    3    6    9   12</span></code></pre></td></tr></table></div></figure>


<p>或者另一种方法 用<code>dim</code>函数</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; plank &lt;- 1:8
</span><span class='line'>&gt; dim(plank) &lt;- c(2,4)
</span><span class='line'>&gt; plank
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    1    3    5    7
</span><span class='line'>[2,]    2    4    6    8</span></code></pre></td></tr></table></div></figure>


<p>这就是Matrix!!!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; matrix(25,5,5)
</span><span class='line'>     [,1] [,2] [,3] [,4] [,5]
</span><span class='line'>[1,]   25   25   25   25   25
</span><span class='line'>[2,]   25   25   25   25   25
</span><span class='line'>[3,]   25   25   25   25   25
</span><span class='line'>[4,]   25   25   25   25   25
</span><span class='line'>[5,]   25   25   25   25   25
</span><span class='line'>&gt; matrix(1:25,5,5)
</span><span class='line'>     [,1] [,2] [,3] [,4] [,5]
</span><span class='line'>[1,]    1    6   11   16   21
</span><span class='line'>[2,]    2    7   12   17   22
</span><span class='line'>[3,]    3    8   13   18   23
</span><span class='line'>[4,]    4    9   14   19   24
</span><span class='line'>[5,]    5   10   15   20   25</span></code></pre></td></tr></table></div></figure>


<h3>RのMatrices Access</h3>

<p>seq真是好东西!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; plank
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    1    3    5    7
</span><span class='line'>[2,]    2    4    6    8
</span><span class='line'>&gt; plank[2,3]
</span><span class='line'>[1] 6
</span><span class='line'>&gt; plank[2,]
</span><span class='line'>[1] 2 4 6 8
</span><span class='line'>&gt; plank[,4]
</span><span class='line'>[1] 7 8
</span><span class='line'>&gt; plank[,2:4]
</span><span class='line'>     [,1] [,2] [,3]
</span><span class='line'>[1,]    3    5    7
</span><span class='line'>[2,]    4    6    8</span></code></pre></td></tr></table></div></figure>


<h3>RのMatrices  Plotting</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; elevation &lt;- matrix(1,10,10)
</span><span class='line'>&gt; elevation[4,6] &lt;- 0
</span><span class='line'>&gt; coutour(elevation) #等高线地图
</span><span class='line'>&gt; persp(elevation, expand=0.2) #3D</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R4.jpg"></p>

<h3>Rの Summary Statistics</h3>

<p>统计数字摘要 Part of a statistician&#8217;s job is to explain their data.</p>

<h3>Mean  平均</h3>

<p><code>mean</code>是求平均的函数  配合<code>abline</code>可以加平均线</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; limbs &lt;- c(3,4,5,6,7,8,9)
</span><span class='line'>&gt; mean(limbs)
</span><span class='line'>[1] 6
</span><span class='line'>&gt; sum(limbs)
</span><span class='line'>[1] 42
</span><span class='line'>&gt; barplot(limbs)
</span><span class='line'>&gt; abline(h=mean(limbs))
</span><span class='line'>&gt; q()</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R5.jpg"></p>

<h3>Median 中位数</h3>

<p>Attention: 先plot后标中位线</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; limbs &lt;- c(4, 3, 4, 3, 2, 4, 4, 4)
</span><span class='line'>&gt; mean(limbs)
</span><span class='line'>[1] 3.5
</span><span class='line'>&gt; median(limbs)
</span><span class='line'>[1] 4
</span><span class='line'>&gt; abline(h = median(limbs))
</span><span class='line'>Error in int_abline(a = a, b = b, h = h, v = v, untf = untf, ...) :
</span><span class='line'>  plot.new has not been called yet
</span><span class='line'>&gt; barplot(limbs)
</span><span class='line'>&gt; abline(h = median(limbs))
</span></code></pre></td></tr></table></div></figure>


<h3>Standard Deviation</h3>

<p>标准偏差
<code>abline</code>应该是加标记线的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; pounds &lt;- c(4500,5000,35000, 40000, 35000, 45000, 10000, 15000)
</span><span class='line'>&gt; devication &lt;- sd(pounds)
</span><span class='line'>&gt; meanValue &lt;- mean(pounds)
</span><span class='line'>&gt; devication
</span><span class='line'>[1] 16718.12
</span><span class='line'>&gt; barplot(pounds)
</span><span class='line'>&gt; abline(h = meanValue)
</span><span class='line'>&gt; abline(h = devication + meanValue)
</span><span class='line'>&gt; abline(h = devication - meanValue)
</span><span class='line'>&gt; abline(h = meanValue - devication)
</span><span class='line'>
</span><span class='line'>&gt; devication - meanValue
</span><span class='line'>[1] -6969.38
</span><span class='line'>&gt; devication + meanValue
</span><span class='line'>[1] 40405.62
</span><span class='line'>&gt; meanValue - devication
</span><span class='line'>[1] 6969.38
</span><span class='line'>&gt; meanValue
</span><span class='line'>[1] 23687.5</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R6.jpg"></p>

<h3>RのFactors</h3>

<p>跟踪分类的值类型</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; chests &lt;- c('gold','silver','gems','gold','gems')
</span><span class='line'>&gt; chests
</span><span class='line'>[1] "gold"   "silver" "gems"   "gold"   "gems"
</span><span class='line'>&gt; types &lt;- factor(chests)
</span><span class='line'>&gt; types
</span><span class='line'>[1] gold   silver gems   gold   gems
</span><span class='line'>Levels: gems gold silver
</span><span class='line'>
</span><span class='line'>&gt; as.integer(types)
</span><span class='line'>[1] 2 3 1 2 1
</span><span class='line'>&gt; levels(types)
</span><span class='line'>[1] "gems"   "gold"   "silver"</span></code></pre></td></tr></table></div></figure>


<h3>RのPlot with Factors</h3>

<p>绘制散点图和标签</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; weights &lt;- c(300,200,100,250,150)
</span><span class='line'>&gt; prices &lt;- c(9000,5000,12000,7500,18000)
</span><span class='line'>&gt; plot(weights,prices)
</span><span class='line'>
</span><span class='line'>&gt; legend("topright", levels(types),pch = 1:length(levels(types)))</span></code></pre></td></tr></table></div></figure>


<p>直接一点的写法:
<code>&gt; legend("topright", c("gems","gold","silver"),pch = 1:3)</code></p>

<h3>RのData Frames</h3>

<p>Our vectors with treasure chest data are perfect candidates for conversion to a data frame.<code>把Data转换成一个Data Frames</code></p>

<p><code>&gt; treasure &lt;- data.frame(weights, prices, types)</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; treasure
</span><span class='line'>  weights prices  types
</span><span class='line'>1     300   9000   gold
</span><span class='line'>2     200   5000 silver
</span><span class='line'>3     100  12000   gems
</span><span class='line'>4     250   7500   gold
</span><span class='line'>5     150  18000   gems</span></code></pre></td></tr></table></div></figure>


<h3>RのData Frames Access</h3>

<h4>用双括号 [[]]</h4>

<p>直接显示一列数据 直接使用列名也可以 记得加引号</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; treasure[[2]]
</span><span class='line'>[1]  9000  5000 12000  7500 18000
</span><span class='line'>&gt; treasure[[weights]]
</span><span class='line'>Error in .subset2(x, i, exact = exact) : no such index at level 1
</span><span class='line'>&gt; treasure[["weights"]]
</span><span class='line'>[1] 300 200 100 250 150</span></code></pre></td></tr></table></div></figure>


<p>Typing all those brackets can get tedious, so there&#8217;s also a shorthand notation: the data frame name, a dollar sign, and the column name (without quotes). Try using it to</p>

<p>get the <code>prices</code> column:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; treasure$types
</span><span class='line'>[1] gold   silver gems   gold   gems
</span><span class='line'>Levels: gems gold silver</span></code></pre></td></tr></table></div></figure>


<h3>RのLoading Data Frames</h3>

<p>使用<code>read.table</code>和<code>read.csv</code>读取本地文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; read.table("infantry.txt", sep="\t")
</span><span class='line'>                     V1
</span><span class='line'>1 Port         Infantry
</span><span class='line'>2      Porto Bello  700
</span><span class='line'>3      Cartagena    500
</span><span class='line'>4     Panama City  1500
</span><span class='line'>5     Havana       2000
</span><span class='line'>&gt; read.csv("targets.csv")
</span><span class='line'>         Port Population Worth
</span><span class='line'>1   Cartagena      35000 10000
</span><span class='line'>2 Porto Bello      49000 15000
</span><span class='line'>3      Havana     140000 50000
</span><span class='line'>4 Panama City     105000 35000</span></code></pre></td></tr></table></div></figure>


<p>银行<code>header</code>使用<code>read.table("infantry.txt", sep="\t", header=TRUE)</code></p>

<h3>RのMerging Data Frames</h3>

<p>第一步骤导入csv文件和txt文件 在TryR的教程基础上我添加了<code>data.frame</code>函数进行Data Frame化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; targets &lt;- data.frame(read.csv("targets.csv"))
</span><span class='line'>&gt; targets
</span><span class='line'>         Port Population Worth
</span><span class='line'>1   Cartagena      35000 10000
</span><span class='line'>2 Porto Bello      49000 15000
</span><span class='line'>3      Havana     140000 50000
</span><span class='line'>4 Panama City     105000 35000
</span><span class='line'>
</span><span class='line'>&gt; infantry &lt;- data.frame(read.table("infantry.txt", sep="\t", header=TRUE))
</span><span class='line'>&gt; infantry
</span><span class='line'>         Port Infantry
</span><span class='line'>1 Porto Bello      700
</span><span class='line'>2   Cartagena      500
</span><span class='line'>3 Panama City     1500
</span><span class='line'>4      Havana     2000
</span><span class='line'>&gt; infantry[[1]]
</span><span class='line'>[1] Porto Bello Cartagena   Panama City Havana
</span><span class='line'>Levels: Cartagena Havana Panama City Porto Bello
</span><span class='line'>&gt; infantry[[2]]
</span><span class='line'>[1]  700  500 1500 2000</span></code></pre></td></tr></table></div></figure>


<p>第二步开始Merge</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; merge(x = targets, y = infantry)
</span><span class='line'>         Port Population Worth Infantry
</span><span class='line'>1   Cartagena      35000 10000      500
</span><span class='line'>2      Havana     140000 50000     2000
</span><span class='line'>3 Panama City     105000 35000     1500
</span><span class='line'>4 Porto Bello      49000 15000      700</span></code></pre></td></tr></table></div></figure>


<p>和教程上的出入在于制作txt文件时 <code>\t</code>部分被替换错误 导致数据格式</p>

<p><img src="http://woody1983.github.com/images/img/R7.jpg"></p>

<h3>Real-World Data</h3>

<p>后记，R非常适合做统计。TryR的教程里的这一章节是用国家的GDP和盗版率做线性回归(暂时不知道啥意思)
关于盗版率的数据文件<code>piracy.csv</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Country,Piracy
</span><span class='line'>Australia,23
</span><span class='line'>Bangladesh,90
</span><span class='line'>Brunei,67
</span><span class='line'>China,77</span></code></pre></td></tr></table></div></figure>


<p><code>gdp.txt</code>文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Rank    Country        GDP
</span><span class='line'>1       Liechtenstein  141100
</span><span class='line'>2       Qatar          104300
</span><span class='line'>3       Luxembourg     81100
</span><span class='line'>4       Bermuda        69900</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; piracy &lt;- data.frame(read.csv("piracy.csv"))
</span><span class='line'>&gt; gdp &lt;- data.frame(read.table("gdp.txt", sep="\t", header=TRUE))
</span><span class='line'>&gt; piracy
</span><span class='line'>     Country Piracy
</span><span class='line'>1  Australia     23
</span><span class='line'>2 Bangladesh     90
</span><span class='line'>3     Brunei     67
</span><span class='line'>4      China     77
</span><span class='line'>&gt; gdp
</span><span class='line'>  Rank       Country    GDP
</span><span class='line'>1    1 Liechtenstein 141100
</span><span class='line'>2    2         Qatar 104300
</span><span class='line'>3    3    Luxembourg  81100
</span><span class='line'>4    4       Bermuda  69900</span></code></pre></td></tr></table></div></figure>


<p>可以先做一个散点图 <code>plot(countries$GDP,countries$Piracy)</code></p>

<p>补充:线性回归
<code>线性回归是利用数理统计中的回归分析，来确定两种或两种以上变量间相互依赖的定量关系的一种统计分析方法之一，运用十分广泛。分析按照自变量和因变量之间的关系类型，可分为线性回归分析和非线性回归分析.</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lm                    package:stats                    R Documentation
</span><span class='line'>
</span><span class='line'>Fitting Linear Models
</span><span class='line'>
</span><span class='line'>Description:
</span><span class='line'>
</span><span class='line'>     ‘lm’ is used to fit linear models.  It can be used to carry out
</span><span class='line'>     regression, single stratum analysis of variance and analysis of
</span><span class='line'>     covariance (although ‘aov’ may provide a more convenient interface
</span><span class='line'>     for these).
</span><span class='line'>We have more countries represented in our GDP data than we do our piracy rate data. If we know a country's GDP, can we use that to estimate its piracy rate?</span></code></pre></td></tr></table></div></figure>


<p>Try calculating the linear model for piracy rate by GDP, and assign it to the line variable:</p>

<p>RedoComplete
<code>&gt; line &lt;- lm(countries$Piracy ~ countries$GDP)</code></p>

<p>在图上标记出来
<code>&gt; abline(line)</code></p>

<h3>新图形包的安装</h3>

<p><code>install.packages("ggplot2")</code> and 查询一个new packages的使用说明<code>&gt; help(package = "ggplot2")</code></p>

<p>一个Demo</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; weights &lt;- c(300, 200, 100, 250, 150)
</span><span class='line'>&gt; prices &lt;- c(9000, 5000, 12000, 7500, 18000)
</span><span class='line'>&gt; chests &lt;- c('gold', 'silver', 'gems', 'gold', 'gems')
</span><span class='line'>&gt; types &lt;- factor(chests)
</span><span class='line'>
</span><span class='line'>&gt; qplot(weights, prices, color = types)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[吴秀波谈忧郁]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/25/wu-xiu-bo-tan-you-yu/"/>
    <updated>2013-03-25T15:01:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/25/wu-xiu-bo-tan-you-yu</id>
    <content type="html"><![CDATA[<p>吴秀波：我觉得人生除了在得意忘形时，其实无处不是困境，所谓困境就是因为不满，所以带来沮丧的感受。就拿影片中Frank这个男人做个解释，他就像一棵“树”，你看树的生存环境是“不能动”。所谓“不能动”，是指他在家庭中的位置，他生活的选择、对妻女的爱、对人性的善意不能动。那么，随之而来你会看到他面临了所有的困境，工作离他而去，妻子嫁给别人，甚至连孩子的抚养权都没有了，隐约而来以为的“幸福”也要离他而去。这些接踵而来的变故，就像树的叶子、花朵、果实一个个都掉了，这就是困境。如果这棵树就此死掉了，就是绝望。<code>如果这棵树在明年春天还能开花，到了秋天依旧结果，那在整个冬天他就叫做忧郁。在所有东西离你而去，生命中所有的失去渐渐开始，你依然在静静带着感恩的心境来接受的时候，我以为这是唯一能被人称为“忧郁”气质的东西</code>。</p>

<h3>吴秀波给我一种很睿智的感觉 网上也经常看到他的<code>语录</code> 读了几遍 感觉禅意十足 而且有些东西在我看来 实在是需要岁月的沉淀才能酝酿不一样的人生。</h3>

<p>时光网：Frank是一个稀有好男人，用文佳佳话说“好的都有点贱”，你怎么理解这个角色？</p>

<p>吴秀波：可能现今的社会状态下，一个男人不占女人便宜就叫好了。所以很多人看Frank这个角色，真有这样的男的吗？我不知道您是哪年生人，在我父母那个年代，这样的人比比皆是，也许现在还有这样的人。</p>

<!-- more -->


<p>“家庭”对吴秀波来说太重要了，他认为“如果你自己都不能去正确的领悟生活，你拿什么作为跟儿子的谈资？如果你自己都没有稳定的事业，你怎么来养活家人？如果你自己都不能保证不犯法，你怎么去报效你的父母？作为一个男人来讲，要对自己负责。”因此，脱下“明星光环”的吴秀波，就是个不折不扣的“家居男”。</p>

<p>　　早在成名之前，不停在歌厅与餐馆之间来回折腾的吴秀波便结识了现在的爱妻，当初他们是“姐弟恋”，30多岁时结婚，在吴秀波整个家底只剩下几千块的时候，妻子为他生下了两个可爱的孩子。正是因为妻儿让吴秀波放下了愤青架子，努力在影视圈打拼，为他们的幸福而不断努力。美满的家庭生活，让吴秀波本人都充满了温馨的“家居味”，丝毫没有“性格派”的硬冷与装酷，私下只给人平和亲切之感。</p>

<p>　　与此同时，吴秀波再红再风光，都竭力保护家人的信息不被公开，从未想过把老婆孩子作为娱乐话题被媒体曝光，也没有大秀恩爱，平淡低调才是吴秀波维护幸福的秘诀。所以每次看完采访提纲，他都会与媒体沟通说：“我非常真诚地表示，感情、家人、绯闻问题真的与工作无关，但我可以接受跟工作有关的采访。”所以，吴秀波只会对外界强调：“你问我爱我儿子和妻子吗，我的回答是爱。你问我如何处理家庭和工作之间的关系，我说在工作中想着家里，在家里想着工作。”就是如此“倔强”，让吴秀波至今都能将家人捍卫得滴水不漏，他在被问及私生活方面的表现越是“圆滑”和“难搞”，便越显示他对家的深厚感情。如此“家居男子”，不作秀、不喧哗，才是最有人情味儿的。</p>

<h3>关于明星</h3>

<p>马龙·白兰度最后也是一具枯骨，梦露再漂亮也就是一张照片。这就是一个过程，给你幸福你就要承受痛苦，同意吗？就好像你看一窝蚂蚁，从小到大看过无数蚂蚁，你记得哪只蚂蚁是你见过的吗？没有，都是蚂蚁，都是凡人。</p>

<h3>关于爱情</h3>

<p>被翻译成英文的:I fall in love with you at this age,it&#8217;s not because you have car and house.It&#8217;s only because you wore a shirt I like on that sunny day.
在这个年纪爱你，不因为你有车有房，只是那天阳光很好，你穿了一件我爱的衬衫。</p>

<p>原版<code>“那时候爱上一个人不是因为你有车有房，而是下午阳光很好，你穿了一件白衬衫。”</code></p>

<h3>关于信仰</h3>

<p>我觉得任何的信仰的源泉都来源于爱。爱是什么？爱只存在于第一人称，如我爱什么，我爱你，我爱他，我爱谁，这就是爱。你要说我爱你，你爱我吗？这不是爱，这叫换，两码事。所以我觉得所有的信仰源于爱，一旦爱不能成立或者不能释放，我就需要新的信仰来完善这个世界。</p>

<p>人在正常情况下，都要保持平静和愉悦，学习也是随时随地的，这样人会变得谦卑。</p>

<p>只要拥有完善的精神世界就好，别人骂我赞我，我都感恩，也都算是我的修行。</p>

<p>今天的天亮不亮，取决于你的眼睛是不是特别需要光。 ————吴秀波</p>

<h2>回头再总结吧 总之是个很值得学习的男人。</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monica et Vincent]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/18/monica-et-vincent/"/>
    <updated>2013-03-18T17:34:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/18/monica-et-vincent</id>
    <content type="html"><![CDATA[<p><code>第一次法文作业 漏洞百出 不忍直视。</code></p>

<p><img src="http://woody1983.github.com/images/img/monica.jpg"></p>

<h3>Ils s&#8217;appellent Monica et Vincent.</h3>

<h3>Ils sont acteur et lls travaillent dans le cinéma.</h3>

<h3>Ils habitent à Paris et ils ont deux enfants.</h3>

<h3>Ils aiment le musique, le cinéma et l&#8217;Opéra.</h3>

<p><img src="http://woody1983.github.com/images/img/monica1.jpg"></p>

<h3>Monica est italienne et elle parle très bien italien, anglais et un peu français.</h3>

<h3>Elle a les cheveux bruns et raides et elle est très belle.</h3>

<p><code>brun 在这里修饰头发 故不用阴性</code> &amp; <code>语言不使用阴性</code></p>

<p><img src="http://woody1983.github.com/images/img/vincent.jpg"></p>

<h3>Vincent est français et il parle très bien français anglais et un peu italien.</h3>

<h3>Vincent est grand et il a les cheveux bruns et crépus.</h3>

<h3>Ils sont très gentille et ils sont acteur de valeur.</h3>
]]></content>
  </entry>
  
</feed>
