<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[1024Bit  电子游牧日志]]></title>
  <link href="http://woody1983.github.com/atom.xml" rel="self"/>
  <link href="http://woody1983.github.com/"/>
  <updated>2013-01-03T23:25:25+08:00</updated>
  <id>http://woody1983.github.com/</id>
  <author>
    <name><![CDATA[Woody.Xu]]></name>
    <email><![CDATA[unix1983@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails3 Notes Model]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/rails3-notes-model/"/>
    <updated>2013-01-03T22:21:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/rails3-notes-model</id>
    <content type="html"><![CDATA[<h4>Rails3 中和Model有关的内容我单独整理出来了。可能是做数据库的时间比较多，喜欢从数据的层面分析问题。</h4>

<!-- more -->


<h1>Rails Model</h1>

<h2>Names Scope</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:rotting</span><span class="p">,</span> <span class="n">where</span><span class="p">(</span><span class="n">rotting</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:fresh</span><span class="p">,</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;age &lt; 20&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:recent</span><span class="p">,</span> <span class="n">order</span><span class="p">(</span><span class="s2">&quot;created_at desc&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用比较简单 直接在Crontroller中Call这些Scope</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Zombie</span><span class="o">.</span><span class="n">rotting</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="no">Zombie</span><span class="o">.</span><span class="n">recent</span><span class="o">.</span><span class="n">fresh</span><span class="o">.</span><span class="n">rotting</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Callbacks</h2>

<blockquote><p>应用场景比较简单，比如在save一个对象之前，根据目前这个对象的一些属性自动赋值。ex: When zombie age > 20 , set rotting to true.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">defore_save</span> <span class="ss">:make_rotting</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">make_rotting</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">rotting</span> <span class="o">=</span> <span class="kp">true</span> <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">20</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>All Callbacks</h4>

<ul>
<li>before_validation</li>
<li>save</li>
<li>create</li>
<li>update</li>
<li>destroy</li>
</ul>


<h2>model关系</h2>

<blockquote><p>单数和复数 has_one has_many belongs_to.复数的形式和英语标准文法里一致</p></blockquote>

<h1>Create Model 单数</h1>

<p><code>rails g model 单数 column:type</code></p>

<h2>dependent: :destroy</h2>

<p>has_one</p>

<h2>&#8220;include&#8221; option</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">all</span> <span class="c1">#然后在view里再去拉brain的数据 </span>
</span><span class='line'><span class="vi">@zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:brain</span><span class="p">)</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="c1">#Brain Load (0.3ms) SELECT * FROM &quot;brains&quot; WHERE &quot;zombie_id&quot; IN (4, 5, 6, 7)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>through</h2>

<blockquote><p>创建R表 也就是关联表。然后多对多关系的两边 同时宣告拥有多个R表 并且拥有多个第二个模型</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_many</span> <span class="ss">:assignments</span>
</span><span class='line'><span class="n">has_many</span> <span class="ss">:roles</span><span class="p">,</span> <span class="n">through</span><span class="p">:</span> <span class="ss">:assignments</span>
</span></code></pre></td></tr></table></div></figure>


<p>through关系建立完毕以后，创建多对多数据时 可以直接向第二个对象添加 ex</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">z</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'><span class="n">z</span><span class="o">.</span><span class="n">roles</span> <span class="o">&lt;&lt;</span> <span class="no">Role</span><span class="o">.</span><span class="n">find_by_title</span><span class="p">(</span><span class="s1">&#39;Captain&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#也可以用z.roles.push 看个人习惯</span>
</span><span class='line'><span class="err">这个时候</span><span class="n">check</span><span class="err">一下</span><span class="n">role</span><span class="err">的数据会看到他会</span><span class="n">inner</span> <span class="n">join</span><span class="err">关系表</span> <span class="err">调用</span><span class="n">a</span><span class="err">表的时候会使用</span><span class="n">b</span><span class="err">表的主键</span>
</span><span class='line'><span class="n">z</span><span class="o">.</span><span class="n">roles</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails3 Notes about view]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/rails3-notes-about-view/"/>
    <updated>2013-01-03T22:19:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/rails3-notes-about-view</id>
    <content type="html"><![CDATA[<h4>Rails3中View的Helper提供了很多实用的方法。</h4>

<!-- more -->


<h1>Viewer</h1>

<h2>Create a form</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">form_for</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果<code>@zombie</code>已经存在数据库里了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="o">&lt;</span><span class="n">form</span> <span class="n">action</span><span class="o">=</span><span class="s2">&quot;/zombies/8&quot;</span> <span class="nb">method</span><span class="o">=</span><span class="s2">&quot;post&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">input</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;_method&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;put&quot;</span> <span class="sr">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>否则就是post</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">form</span> <span class="n">action</span><span class="o">=</span><span class="s2">&quot;/zombies&quot;</span> <span class="nb">method</span><span class="o">=</span><span class="s2">&quot;post&quot;</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>f.submit</code>也是根据Zombie数据对象再数据库是否存在而选择显示Create 还是Update</p>

<h1>常见的Text_field</h1>

<p><code>f.text_field :name</code>提交出去的时候数据模型是这样子的</p>

<p><code>:params =&gt; {:zombie =&gt;{:name =&gt; 'Name'}}</code></p>

<h1>Label helper</h1>

<p><code>f.label :name</code> 在html里显示<code>&lt;label for="zombie_name"&gt;Name&lt;/label&gt;</code></p>

<h1>input helpers</h1>

<ul>
<li>text_area</li>
<li>check_box</li>
<li>radio_button :decomp, &#8216;fresh&#8217;, checked: true</li>
<li>select :decomp, [&#8216;frsh&#8217;,&#8217;new&#8217;]</li>
<li>select :decomp, [[&#8216;fresh,1],[&#8216;new&#8217;,2]]</li>
<li>password_field</li>
<li>number_field</li>
<li>range_field</li>
<li>email_field</li>
<li>url_field</li>
<li>telephone_field</li>
</ul>


<h2>Partials 减少重复代码 比如新建和更新的表单</h2>

<p>&lt;% render &#8216;form&#8217;%> <code>_form.html.erb</code></p>

<h1>View helper</h1>

<h2>div_for</h2>

<p>之前的<code>&lt;div id="tweet_&lt;%= tweet.id%&gt;" class='tweet'&gt;</code>可以写成
&lt;%= div_for tweet do %>
<code>dom_id(@tweet)</code> => tweet_2</p>

<h2>截断字符串</h2>

<p><code>truncate("I need brains!", :length =&gt; 10,:separator =&gt; ' ')</code>
:separator是为了保证不会切半个单词什么的。</p>

<h2>自动显示数量词单复数形式</h2>

<p><code>pluralize(Zombie.count,"zombie")</code></p>

<h2>String的标题化 //首字母自动大小写之类的设置 很使用</h2>

<p><code>@zombie.name.titleize</code></p>

<h2>队列化 a , b and c</h2>

<p><code>@role.name.to_sentence</code></p>

<h2>时间间隔表达</h2>

<p><code>time_ago_in_words @zombie.created_at</code></p>

<h2>Number的转换</h2>

<ul>
<li>number_to_currency</li>
<li>number_to_human</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Holiday Notes with Rails3]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/holiday-notes-with-rails/"/>
    <updated>2013-01-03T22:11:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/holiday-notes-with-rails</id>
    <content type="html"><![CDATA[<h4>假期没有出去玩 在家里宅了十几天的时间，基本消耗在Rails和德州扑克上多一些。现在开始整理笔记了，之前写的太乱。</h4>

<!-- more -->


<h1>Rails 重新开始</h1>

<blockquote><p>这个是在CodeSchool上学习的Rails开发教程的笔记。纪录下来，认真回过头好好复习一下。</p></blockquote>

<h1>Install Rails</h1>

<p>rails new TwitterForZombies</p>

<h2>Rails Commands</h2>

<ul>
<li>generate</li>
<li>console</li>
<li>server</li>
<li>dbconsole</li>
</ul>


<h2>Using Generators</h2>

<ul>
<li>helper</li>
<li>mailer</li>
<li>migration</li>
<li>model</li>
<li>scaffold</li>
</ul>


<h2>Using Scaffold</h2>

<p><code>rails g scaffold NAME [field:type field:type]</code></p>

<h2>Variable types</h2>

<ul>
<li>string</li>
<li>text</li>
<li>integer</li>
<li>boolean</li>
<li>decimal</li>
<li>float</li>
<li>binary</li>
<li>date</li>
<li>time</li>
<li>datetime</li>
</ul>


<h1>DB Migration</h1>

<h2>Create table in Migration</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>create_table :tablename do |t|
</span><span class='line'>  t.数据类型 :column_name
</span><span class='line'>  t.text :bio
</span><span class='line'>  t.index :name #add index with db
</span><span class='line'>  t.timestamps# same as t.datetime :created_at t.datetime :updated_at
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Adding Columns</h2>

<ul>
<li>AddColumn<code>Add&lt;Column_name&gt;To&lt;table_name&gt;</code></li>
<li>RemoveColumn <code>Remove&lt;&gt;From&lt;&gt;</code></li>
<li>add_index :table, :column</li>
<li>rename_column :table_name, :old, :new</li>
<li>rename_table :old_table, :new_table</li>
<li>drop_table :table_name</li>
<li>change_column :table, :column, :type, :options</li>
<li>change_column_default :table, :column, default: true/&#8217;string&#8217;</li>
</ul>


<p><code>rails g migration Drop__Table</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>  <span class="n">add_column</span> <span class="ss">:zombies</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:string</span><span class="p">,</span> <span class="n">limit</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span><span class="n">unique</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1> Migration options</h1>

<ul>
<li>default: <value></li>
<li>limit: 30</li>
<li>null: false</li>
<li>first: true</li>
<li>after: email</li>
<li>unique: true</li>
</ul>


<h2>Run Migrations</h2>

<ul>
<li>rake db:migrate</li>
<li>rake db:rollback</li>
<li>rake db:schema:dump #->￼db/schema.rb</li>
<li>rake db:setup</li>
</ul>


<h1>Ruby 1.9 Hash New Syntax</h1>

<p><code>{name: "hash new stntax"}</code>
<code>{render json: @zombies }</code></p>

<h1>REST {Link_to:}</h1>

<h3>to link to each action</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span> <span class="n">zombie</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">zombie</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;edit&#39;</span><span class="p">,</span> <span class="n">zombie</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:put</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="n">zombie</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span>
</span></code></pre></td></tr></table></div></figure>


<h2>resources :zombies</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &#39;All Zombies&#39;,  zombie_path %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;New Zombies&#39;</span><span class="p">,</span>  <span class="n">new_zombie_path</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= link_to &#39;Edit Zombies&#39;, edit_zombie_path(@zombie) %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &#39;Show Zombies&#39;, zombie_path(@zombie) %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Show Zombies&#39;</span><span class="p">,</span> <span class="vi">@zombie</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Nested Routes</h1>

<blockquote><p>嵌套路由 感觉平时项目里会经常用到 毕竟两个数据模型并行计算和处理的时候实在是太多了。</p></blockquote>

<p>标准写法是：将routes写成嵌套写法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:zombie</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:tweets</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>嵌套路由写好以后 还修改crontroller &amp; viewer{link_fo form_for}</p>

<h2>标准的嵌套url是 /zombies/4/tweets/2 /zombies/4/tweets</h2>

<p>那么在tweets的crontroller里 会接受到zombie和tweet两个id传参进来。</p>

<p>先在tweets&#8217;s crontroller中定义一个filter 来获取上一级信息 比如zombie
<code>before_filter :get_zombie</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">get_zombie</span>
</span><span class='line'>  <span class="vi">@zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:zombie_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">zombie</span> <span class="err">已经查出来了</span> <span class="n">show</span><span class="err">和</span><span class="n">index</span><span class="err">可以直接调用</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="vi">@tweet</span> <span class="o">=</span> <span class="vi">@zombie</span><span class="o">.</span><span class="n">tweets</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@tweets</span> <span class="o">=</span> <span class="vi">@zombie</span><span class="o">.</span><span class="n">tweets</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>在Nested rake routes的link写法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">link_to</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@zombie</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">&#39;s Tweets&quot;</span><span class="p">,</span> <span class="n">zombie_tweets_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;New Tweet&#39;</span><span class="p">,</span> <span class="n">new_zombie_tweet_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Edit Tweet&#39;</span><span class="p">,</span> <span class="n">edit_zombie_tweet_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">show</span> <span class="err">有两种写法</span> <span class="err">哪个简单用哪个</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span> <span class="n">zombie_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="p">)</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Destroy&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span><span class="p">,</span><span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span>
</span></code></pre></td></tr></table></div></figure>


<h2>嵌套的显示Viewer</h2>

<p>在二级目录里的index显示 需要使用到上一级资源的调用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="vi">@tweets</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tweets</span><span class="o">|</span>
</span><span class='line'>   <span class="n">tweet</span><span class="p">,</span><span class="n">body</span>
</span><span class='line'>   <span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span>
</span><span class='line'>   <span class="n">link_to</span> <span class="s1">&#39;Edit&#39;</span><span class="p">,</span><span class="n">edit_zombie_tweet_path</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span>
</span><span class='line'>   <span class="n">link_to</span> <span class="s1">&#39;Edstroy&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="n">link_to</span> <span class="s1">&#39;New Tweet&#39;</span><span class="p">,</span><span class="n">new_zombie_tweet_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>创建_form 表单比较简单</h3>

<p><code>form_for([@zombie,@tweet]) do |f|</code></p>

<h3>嵌套路由里 Controller中就不能直接些二级目录数据实体</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>  <span class="vi">@tweet</span> <span class="o">=</span> <span class="vi">@zombie</span><span class="o">.</span><span class="n">tweets</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:tweet</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="err">返回信息的时候要将</span><span class="mi">2</span><span class="err">级目录的信息一起返回。</span>
</span><span class='line'>
</span><span class='line'><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@tweet</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span><span class="n">redirect_to</span> <span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="vi">@tweet</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Tweet was successfully created.&#39;</span><span class="p">}</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="vi">@tweet</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">status</span><span class="p">:</span> <span class="ss">:created</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">location</span><span class="p">:</span> <span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="vi">@tweet</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s2">&quot;new&quot;</span> <span class="p">}</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="vi">@tweet</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span>
</span><span class='line'>                                <span class="n">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Asset Pipeline</h1>

<p>所有的tag 不需要指明路径 因为所有的资源调用和显示都会指向到<code>/assets/</code></p>

<ul>
<li>&lt;%= javascript_include_tag &#8220;custom&#8221; %></li>
<li>&lt;%= stylesheet_link_tag &#8220;style&#8221; %></li>
<li>&lt;%= image_tag &#8220;rails.png&#8221; %></li>
</ul>


<p>在css中调用一些图片的路径时 需要使用asset_path 否则无法使用缓存里的文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">form_new_zombie</span> <span class="n">input</span><span class="o">.</span><span class="n">submit</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">background</span><span class="o">-</span><span class="n">image</span><span class="p">:</span> <span class="n">url</span><span class="p">(</span><span class="o">&lt;%=</span> <span class="n">asset_path</span><span class="p">(</span><span class="s1">&#39;button.png&#39;</span><span class="p">)</span> <span class="o">%&gt;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>SCSS</h1>

<p><code>zombie.css.scss.erb</code> 嵌套写法的css</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">form</span><span class="o">.</span><span class="n">new_zombie</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">border</span><span class="p">:</span> <span class="mi">1</span><span class="n">px</span> <span class="n">dashed</span> <span class="n">gray</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">.</span><span class="n">field</span><span class="c1">#bio {</span>
</span><span class='line'>    <span class="nb">display</span><span class="p">:</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">input</span><span class="o">.</span><span class="n">submit</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">background</span><span class="o">-</span><span class="n">image</span><span class="p">:</span> <span class="n">url</span><span class="p">(</span><span class="o">&lt;%=</span> <span class="n">asset_path</span><span class="p">(</span><span class="s1">&#39;button.png&#39;</span><span class="p">)</span> <span class="o">%&gt;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails For Zombie]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/rails-for-zombie/"/>
    <updated>2013-01-03T21:58:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/rails-for-zombie</id>
    <content type="html"><![CDATA[<h3>这是国外的一个在线教育平台的课程 感觉非常不错 有很多知识点。现在共享出来，一起学习。</h3>

<!-- more -->


<h4>Rails new</h4>

<blockquote><p>Enter the command to start a new rails app called &#8216;ZombieTweets&#8217;</p></blockquote>

<p>rails new Zombi­eTweets</p>

<h4>GENERATE SCAFFOLD</h4>

<blockquote><p>Enter the command to create tweet scaffold with a string status and an integer of zombie_id</p></blockquote>

<p>rails g scaff­old tweet­ statu­s:string zombi­e_id:integ­er</p>

<h4>RUN MIGRATION</h4>

<blockquote><p>Enter the command to run the migration you just created.</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake db:mi­grate
</span><span class='line'>==  CreateTweets: migrating ===================================================
</span><span class='line'>-- create_table(:tweets)
</span><span class='line'>   -&gt; 0.0017s
</span><span class='line'>==  CreateTweets: migrated (0.0025s) ==========================</span></code></pre></td></tr></table></div></figure>


<h4>BOOT IT UP</h4>

<blockquote><p>Enter the command to start a rails server</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails s
</span><span class='line'>=&gt; Booting WEBrick
</span><span class='line'>=&gt; Rails 3.1.0 application starting in development on http://0.0.0.0:3000
</span><span class='line'>=&gt; Call with -d to detach
</span><span class='line'>=&gt; Ctrl-C to shutdown server
</span><span class='line'>[2013-01-03 12-26-14] INFO  WEBrick 1.3.1
</span><span class='line'>[2013-01-03 12-26-14] INFO  ruby 1.9.2 (2011-02-18) [x86_64-darwin10.7.0]
</span><span class='line'>[2013-01-03 12-26-14] INFO  WEBrick::HTTPServer#start: pid=35740 port=3000</span></code></pre></td></tr></table></div></figure>


<h4>ADD COLUMN TO TABLE</h4>

<blockquote><p>Enter the command line text to generate a migration called AddPrivateToTweets which adds a boolean field called private.</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails g migra­tion AddPr­ivateToTwe­ets priva­te:boolean­
</span><span class='line'>invoke  active_record
</span><span class='line'>create    db/migrate/20130103122847_add_private_to_tweets.rb</span></code></pre></td></tr></table></div></figure>


<h4>ROLLBACK MIGRATION</h4>

<blockquote><p>Assume we ran that last migration. However we forgot a column we wanted to add, could you please roll it back from the command line?</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake db:ro­llback
</span><span class='line'>==  AddLocationToTweets: reverting ============================================
</span><span class='line'>-- remove_column("tweets", :show_location)
</span><span class='line'>   -&gt; 0.0008s
</span><span class='line'>-- remove_column("tweets", :location)
</span><span class='line'>   -&gt; 0.0003s
</span><span class='line'>==  AddLocationToTweets: reverted (0.0012s) ===================================</span></code></pre></td></tr></table></div></figure>


<h4>REMOVE COLUMN</h4>

<blockquote><p>On second thought, that category_name string column was a bad idea. Write a migration to remove the category_name column.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">RemoveCategoryNameFromTweets</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">up</span>
</span><span class='line'>    <span class="n">remove_column</span> <span class="ss">:tweets</span> <span class="p">,</span> <span class="ss">:category_name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">down</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:tweets</span><span class="p">,</span><span class="ss">:category_name</span> <span class="p">,</span> <span class="ss">:string</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>DATABASE SETUP</h4>

<blockquote><p>You&#8217;ve decided to install the app on another computer. Please enter the command you should use (instead of rake db:migrate) to create the database, load the schema, and run the seed file.</p></blockquote>

<p>rake db:setup</p>

<h4>IN THE CONSOLE</h4>

<blockquote><p>Enter the command to enter the Rails console</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Enter the command to enter the Rails console.
You are now running in the Rails console!
Experiment with creating a new Tweet and saving it to the database. Type next to move on.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="o">&gt;</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">crea</span><span class="err">­</span><span class="n">te</span><span class="p">(</span><span class="n">message</span><span class="err">­</span><span class="p">:</span> <span class="s1">&#39;hell­o&#39;</span><span class="p">,</span> <span class="n">categ</span><span class="err">­</span><span class="n">ory_name</span><span class="p">:</span> <span class="s1">&#39;cate­gory&#39;</span><span class="p">,</span> <span class="n">locat</span><span class="err">­</span><span class="n">ion</span><span class="p">:</span> <span class="s1">&#39;Chin­a&#39;</span><span class="p">,</span> <span class="n">show_</span><span class="err">­</span><span class="n">location</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span><span class="err">­</span> <span class="n">zombi</span><span class="err">­</span><span class="n">e_id</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c1">#&lt;Tweet id: 1, message: &quot;hello&quot;, category_name: &quot;category&quot;, location: &quot;China&quot;, show_location: true, zombie_id: 1&gt;</span>
</span><span class='line'><span class="n">ruby</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>schema:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">create_table</span><span class="p">(</span><span class="ss">:tweets</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:message</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:category_name</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:location</span><span class="p">,</span> <span class="ss">:limit</span> <span class="o">=&gt;</span> <span class="mi">30</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">boolean</span> <span class="ss">:show_location</span><span class="p">,</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:zombie_id</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>SCOPES</h4>

<blockquote><p>Write a scope on the Tweet model called recent which returns the 4 most recent tweets. Hint: You&#8217;ll need an order AND a limit scope.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:recent</span> <span class="p">,</span> <span class="n">order</span><span class="p">(</span><span class="s2">&quot;created_at desc&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Write another scope called graveyard which only shows tweets where the show_location column is true and the location is &#8220;graveyard&#8221;</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:recent</span><span class="p">,</span> <span class="n">order</span><span class="p">(</span><span class="s1">&#39;created_at desc&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:graveyard</span><span class="p">,</span> <span class="n">where</span><span class="p">(</span><span class="n">show_location</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span><span class="n">location</span><span class="p">:</span> <span class="s1">&#39;graveyard&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>USING SCOPES</h4>

<blockquote><p>In this controller action create an instance variable called @graveyard_tweets which uses both of the two scopes recent and graveyard together.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TweetsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@tweets</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>    <span class="vi">@graveyard_tweets</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">recent</span><span class="o">.</span><span class="n">graveyard</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>BEFORE SAVE</h4>

<blockquote><p>Create a before_save callback that checks to see if a tweet has a location, if it does have a location then set show_location to true.
Tip: You can check to see if location exists with if self.location?</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">before_save</span> <span class="ss">:tweet</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">tweet</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">show_location</span> <span class="o">=</span> <span class="kp">true</span> <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">location</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>CALLBACK LOGGING</h4>

<blockquote><p>Add callbacks so the appropriate log function is called after an update and destroy.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'><span class="n">after_update</span> <span class="ss">:log_update</span>
</span><span class='line'><span class="n">after_destroy</span> <span class="ss">:log_destroy</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">log_update</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Tweet </span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2"> updated&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">log_destroy</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Tweet </span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2"> deleted&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>HAS ONE</h4>

<blockquote><p>Instead of storing location inside the Tweet model, let&#8217;s instead break it out into a separate table (as you see below). In this case we want to define that a Tweet can have one Location, and a Location belongs to a Tweet. Fill out the models below accordingly.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="n">has_one</span> <span class="ss">:location</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Location</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="n">belongs_to</span> <span class="ss">:tweet</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>FOREIGN KEY</h4>

<blockquote><p>OH NO! Our Database Admin turned into a Zombie and decided to rename the belongs_to field in our locations table tweeter_id instead of the intelligent default tweet_id. We&#8217;re going to slay him and correct this, but in the meantime set the foreign_key on both relationships to tweeter_id. Also set the dependency so when a tweet is destroyed, the location is destroyed as well.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:location</span><span class="p">,</span> <span class="n">dependent</span><span class="p">:</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="n">foreign_key</span><span class="p">:</span> <span class="ss">:tweeter_id</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Location</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:tweet</span><span class="p">,</span> <span class="n">foreign_key</span><span class="p">:</span> <span class="ss">:tweeter_id</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>INCLUDES</h4>

<blockquote><p>We&#8217;re going to be iterating through many tweets and printing out their location. Refactor the controller code below to use the includes method.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TweetsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@tweets</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:location</span><span class="p">)</span><span class="o">.</span><span class="n">recent</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>RELATIONSHIP MIGRATION</h4>

<blockquote><p>A Tweet can belong to one or more Categories (e.g. eating flesh, walking dead, searching for brains). Write a migration that creates two tables, categories, and categorizations. Give categories one column named name of type string; and give categorizations two integer columns: tweet_id and category_id.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AddTweetCategories</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:categories</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:categorizations</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:tweet_id</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:category_id</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>HAS MANY THROUGH</h4>

<blockquote><p>Now that we have our new tables, it&#8217;s time to define the relationships between each of the models. Define the has_many through relationships in the Tweet &amp; Category model and the belongs_to relationships in the Categorization model.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:categorizations</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:categories</span><span class="p">,</span> <span class="n">through</span><span class="p">:</span> <span class="ss">:categorizations</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Categorization</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:tweet</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:category</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Category</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:categorizations</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:tweets</span><span class="p">,</span> <span class="n">through</span><span class="p">:</span> <span class="ss">:categorizations</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Moudle &amp; Class &amp; Method]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/11/ruby-moudle-and-class-and-method/"/>
    <updated>2012-12-11T15:17:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/11/ruby-moudle-and-class-and-method</id>
    <content type="html"><![CDATA[<h4>不能创建实例和继承 作用之一是提供namespace 通过使用<code>Moudle.method</code>的方式调用 可以避免方法 常数和类名称的冲突。</h4>

<p>include一个module以后 可以直接调用里面的常数和方法 一般调用方法为</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">HelloWorld</span>
</span><span class='line'>  <span class="no">Version</span> <span class="o">=</span> <span class="s2">&quot;1.0&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;Hi </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">. </span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1">#如果该method需要对外部公开的话</span>
</span><span class='line'>  <span class="kp">module_function</span> <span class="ss">:hello</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用的时候就是 <code>HelloWorld::Verison</code> or <code>HelloWorld.hello('1024bit')</code></p>

<blockquote><p>Mix-in 讲moduld混到Class中 可以将两个Class中相同的功能植入Module中</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">MyModule</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MyClass1</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">MyModule</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MyClass2</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">MyModule</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Class</h2>

<ul>
<li>初始化方法 initialize</li>
<li>访问方法 <code>attr_reader :name</code> &amp; <code>attr_writer</code> &amp; <code>attr_accessor</code></li>
<li>类变量<code>@@</code>是所有实例共享的变量</li>
<li>类方法 不能对实例操作。或者说实例无法调用类方法</li>
</ul>


<p>类方法的声明三种写法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HelloWorld</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">HelloWorld</span><span class="o">.</span><span class="nf">hello</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">#</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#=&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HelloWorld</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="no">HelloWorld</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#=&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HelloWorld</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">hello</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Method</h2>

<p>如果Method的参数过多 建议放到Hash里去处理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Ruby&quot;</span><span class="p">,</span><span class="n">option</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="n">long</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:long</span><span class="o">]</span>
</span><span class='line'>  <span class="n">body</span> <span class="o">=</span> <span class="n">message</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thanks TBBT]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/10/thanks-tbbt/"/>
    <updated>2012-12-10T21:49:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/10/thanks-tbbt</id>
    <content type="html"><![CDATA[<p>生活大爆炸最新一季一直没看 说实话还蛮想他们的。BG2最近更新也慢  准备把TBBT最新一季都download下来漫漫看</p>

<p><img src="../images/img/tbbt.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctoPress Upload Images]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/07/octopress-upload-images/"/>
    <updated>2012-12-07T10:08:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/07/octopress-upload-images</id>
    <content type="html"><![CDATA[<h3>First all</h3>

<p>make <code>source/images/img</code> folder</p>

<div><script src='https://gist.github.com/4230466.js?file='></script>
<noscript><pre><code>&lt;img src=&quot;../images/img/galaxy.jpg&quot;/&gt;

&lt;!-- or --&gt;

{% img ../images/img/greece.jpg %}
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 错误处理和例外]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/05/ruby-cuo-wu-chu-li-he-li-wai/"/>
    <updated>2012-12-05T11:50:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/05/ruby-cuo-wu-chu-li-he-li-wai</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ltotal</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">wtotal</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">ctotal</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="no">ARGV</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">input</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>    <span class="n">l</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">w</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">line</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="n">gets</span>
</span><span class='line'>      <span class="n">l</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">c</span> <span class="o">+=</span> <span class="n">line</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>      <span class="n">line</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/^\s+/</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">ary</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>      <span class="n">w</span> <span class="o">+=</span> <span class="n">ary</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">input</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;%8d %8d %8d %s</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">w</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ltotal</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">wtotal</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">ctotal</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">ex</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;&gt;&gt;&gt;&quot;</span><span class="p">,</span><span class="n">ex</span><span class="o">.</span><span class="n">message</span><span class="p">,</span><span class="s2">&quot;&lt;&lt;&lt;&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;%8d %8d %8d %s</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="n">ltotal</span><span class="p">,</span><span class="n">wtotal</span><span class="p">,</span><span class="n">ctotal</span><span class="p">,</span><span class="s2">&quot;total&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>当无法打开文件阅读的时候，就会将例外报给ex变量 并打印输出。</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Resource]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/04/ruby-resource/"/>
    <updated>2012-12-04T14:37:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/04/ruby-resource</id>
    <content type="html"><![CDATA[<h3>1、<a href="www.tryruby.org">TryRuby</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>需要翻墙 配合codeschool一起练习的话 会有$5的代金券可以抵用学费</span></code></pre></td></tr></table></div></figure>


<h3>2、<a href="http://www.codecademy.com/zh/tracks/ruby">CodeCadeMy</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>全部做完，受益匪浅。</span></code></pre></td></tr></table></div></figure>


<h3>3、<a href="http://lrthw.github.com">笨方法學 Ruby</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>讲的很仔细  用的1.9的版本 各个知识点都讲了 不错</span></code></pre></td></tr></table></div></figure>


<h3>4、<a href="http://www.learnstreet.com/">LearnStreet的Ruby板块</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>目前免费，有一个全程的练习和配套的3个小项目练习 一个银行 一个度量转换 一个锻炼记忆力的。</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>5、<a href="http://teamtreehouse.com">TeamtreeHouse</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>最近广告打的最猛的就是这个网站 收费 一个月25$  有Ruby 试听过一节课 暂时没报名
</span><span class='line'>讲的很详细 有内建Project配合 连发布工具都有 免费的用户可以看每个课程的前1分钟</span></code></pre></td></tr></table></div></figure>


<h3>6、 <a href="www.codeschool.com">CodeSchool</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>强烈推荐的 包含Git 什么的 都有 其中的Ruby Bits讲最佳实践的课程 现在可以免费停Level-1 
</span><span class='line'>感觉不错 配合PDF和视频都可以下载的。 有几门免费课程CSS啊 之类的 学完都会有$5的代金券</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://stylesror.github.com">Ruby Style Guide 及 Rails Style Guide</a></h2>

<h2><a href="http://www.zenspider.com/Languages/Ruby/QuickRef.html">Ruby QuickRef</a></h2>

<h2><a href="http://mislav.uniqpath.com/poignant-guide/book/chapter-3.html">漫画教程 Why&#8217;s (Poignant) Guide to Ruby</a></h2>

<h2><a href="http://download.csdn.net/detail/Sevk/659363">RUBY语言入门教程.PDF</a></h2>

<h2><a href="http://ruby.on-page.net/">Ruby manual 一页教程</a></h2>

<h2><a href="http://www.kuqin.com/rubycndocument/man/index.html">面向对象脚本语言 Ruby 参考手册</a></h2>

<h2><a href="http://www.ruby-lang.org/zh_cn/documentation/ruby-from-other-languages/">从其它语言到 Ruby</a></h2>

<h2>Ruby 工具箱</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://api.rubyonrails.org/
</span><span class='line'>http://ruby-doc.org/
</span><span class='line'>http://apidock.com/
</span><span class='line'>http://guides.rubyonrails.org/</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby ARGV &amp; STDIN.gets.chomp()]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/04/ruby-argv-and-stdin-dot-gets-dot-chomp/"/>
    <updated>2012-12-04T14:32:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/04/ruby-argv-and-stdin-dot-gets-dot-chomp</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ser</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">prompt</span> <span class="o">=</span> <span class="s1">&#39;&gt; &#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hi </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">, I&#39;m the </span><span class="si">#{</span><span class="vg">$0</span><span class="si">}</span><span class="s2"> script.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;I&#39;d like to ask you a few questions.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Do you like me </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">likes</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Where do you live </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">lives</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;What kind of computer do you have?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">computer</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="o">&lt;&lt;</span><span class="no">MESSAGE</span>
</span><span class='line'><span class="sh">Alright, so you said #{likes} about liking me.</span>
</span><span class='line'><span class="sh">You live in #{lives}.  Not sure where that is.</span>
</span><span class='line'><span class="sh">And you have a #{computer} computer.  Nice.</span>
</span><span class='line'><span class="no">MESSAGE</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Important: 同時必須注意的是，我們也用了 STDIN.gets 取代了 gets。這是因為如果有東西在 ARGV 裡，標準的gets 會認為將第一個參數當成檔案而嘗試從裡面讀東西。在要從使用者的輸入（如stdin）讀取資料的情況下我們必須明確地使用 STDIN.gets。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Artisan's Art Spirit]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/26/the-artisans-art-spirit/"/>
    <updated>2012-08-26T15:52:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/26/the-artisans-art-spirit</id>
    <content type="html"><![CDATA[<p>偶然一个机会在罗永浩的微博看到这样一段话，感觉不错，随即抄了下来。</p>

<h3>罗永浩提到的工匠精神：</h3>

<h5>1）对所从事的事情有一种完美主义情节，在力所能及的情况下做到极致。</h5>

<h5>2）对细节的执着，点点滴滴决不放过。</h5>

<h5>3）激情，对所做的事欲罢不能，并从中获得巨大的心灵满足。</h5>

<h5>4）执着，百折不挠的勇气。可惜，这年头太缺乏具有工匠精神的人。</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[曾国藩 家书一篇]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/22/zengguofan/"/>
    <updated>2012-08-22T20:54:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/22/zengguofan</id>
    <content type="html"><![CDATA[<h2>课程</h2>

<pre><code>主敬  整齐严肃，无时不惧。无事时心在腔子里，应事时专一不杂。
静坐  每日不拘何时，静坐一会，体验静极生阳来复之仁心，正位凝命，如鼎之镇。
早起  黎明即起，醒后勿沾恋。
读书不二  一书未点完，断不看他书。东翻西阅，都是徇外为人。
读史  《二十三史》每日读十页，虽有事不间断。 
写日记  须端楷，凡日间过恶，身过、心过、口过，皆记出，终身不间断。
日知其所亡  每日记“茶余偶谈”一则，分德行门、学问门、经济门、艺术门。
月无忘所能  每月作诗文数首，以验积理之多寡，养气之盛否。
谨言  刻刻留心。
养气  无不可对人言之事，气藏丹田。
保身  谨遵大人手谕：节欲，节劳，节饮食。
作字  早饭后作字，凡笔墨应酬，当作自己功课。
夜不出门  旷功疲神，切戒切戒。
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mvc]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/22/mvc/"/>
    <updated>2012-08-22T00:36:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/22/mvc</id>
    <content type="html"><![CDATA[<p><img src="http://ruby.railstutorial.org/images/figures/mvc_detailed.png" alt="About MVC" />
* The browser issues a request for the /users URI.
* Rails routes /users to the index action in the Users controller.
* The index action asks the User model to retrieve all users (User.all).
* The User model pulls all the users from the database.
* The User model returns the list of users to the controller.
* The controller captures the users in the @users variable, which is passed to the index view.
* The view uses embedded Ruby to render the page as HTML.
* The controller passes the HTML back to the browser.3</p>

<p><img src="http://ruby.railstutorial.org/images/figures/demo_controller_inheritance.png" title="Optional title attribute" alt="About Controller" />
<code>app/controllers/application_controller.rb</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails学习全记录]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/22/rails-notes/"/>
    <updated>2012-08-22T00:10:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/22/rails-notes</id>
    <content type="html"><![CDATA[<h3>创建rails项目 跳过unit-test模块</h3>

<p><code>rails new sample_app --skip-test-unit</code></p>

<h3>不安装production环境所需要的gem</h3>

<p><code>bundle install --without production</code></p>

<h3>创建rspec测试模块</h3>

<p><code>rails generate rspec:install</code></p>

<h3>创建一个负责静态页面的控制器</h3>

<p><code>rails generate controller StaticPages home help --no-test-framework</code></p>

<p>其实还可以添加 about contact等方法</p>

<p>删除一个控制器<code>rails destroy  controller FooBars baz quux</code></p>

<!-- more -->


<h3>route中的get方法</h3>

<p><code>config/routes.rb</code></p>

<p>by using get we arrange for the route to respond to a GET request
<code>get "static_pages/about"</code></p>

<h4>The first step is to generate an integration test (request spec) for our static pages:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails generate integration_test static_pages
</span><span class='line'>      invoke  rspec
</span><span class='line'>      create    spec/requests/static_pages_spec.rb</span></code></pre></td></tr></table></div></figure>


<h1>About RSpec</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>describe "场景/描述“ do
</span><span class='line'>  it "..." do
</span><span class='line'>    ...
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h4>一段it语句</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>it "should have the content 'Sample App'" do #应该可以看到Sample App这个字样
</span><span class='line'>      visit '/static_pages/home' #访问这个path
</span><span class='line'>      page.should have_content('Sample App') #页面上(page) 应该会包含这个content
</span><span class='line'>    end</span></code></pre></td></tr></table></div></figure>


<h1>should and should_not 一招鲜</h1>

<p>uses the <code>Capybara</code> function <code>visit</code></p>

<p><code>spec/requests/static_pages_spec.rb</code> 可以将不同的静态页面定义到不同的describe中去测试 测试指定页面中是否包含什么文字</p>

<h3>再添加一个静态页面呢？</h3>

<ul>
<li>首先route中需要添加新的<code>get "static_pages/about"</code></li>
<li>controllers指定def</li>
<li>views中有对应的<code>html</code>页面<code>app/views/static_pages/about.html.erb</code></li>
</ul>


<h4>选择测试某一个元素 比如 title h1 等</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>page.should have_selector('title',
</span><span class='line'>                    :text =&gt; "Ruby on Rails Tutorial Sample App | Home")</span></code></pre></td></tr></table></div></figure>


<p>This uses the have_selector method, which checks for an HTML element (the “selector”) with the given content.
要查找的内容也可以用缩写 只寻找<code>关键字</code>
<code>page.should have_selector('title', :text =&gt; " | Home")</code></p>

<h3>Provide方法 可以提供临时变量给一个label</h3>

<p><code>&lt;% provide(:title, 'Home') %&gt;</code></p>

<h5>使用</h5>

<p><code>&lt;title&gt;Ruby on Rails Tutorial Sample App | &lt;%= yield(:title) %&gt;&lt;/title&gt;</code></p>

<blockquote><p>http://ruby.railstutorial.org/chapters/static-pages#top 明天继续</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于rspec浅见]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/20/about-rspec/"/>
    <updated>2012-08-20T20:52:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/20/about-rspec</id>
    <content type="html"><![CDATA[<h3>刚入手没几天，感觉开发过程中多了很多乐趣。</h3>

<p><code>should</code> and <code>should_not</code></p>

<h2>before and after</h2>

<p>before(:each) 每段it之前执行
before(:all) 每段describe 之前执行
after(:each)
after(:all)</p>

<h3>pending 可以先列出来打算要写的代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s2">&quot;…&quot;</span>
</span><span class='line'>  <span class="n">pending</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more-->


<h3>let 语法 有需要才会出来运算。</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span><span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:is_vip</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>should 后面</h3>

<p>be_true
be_false
be_nil</p>

<h3>检查class和def</h3>

<ul>
<li>target.should be_a_kind_of(Array)      <code>target.class.should == Array</code></li>
<li>target.should be_an_instance_of(Array) <code>target.class.should == Array</code></li>
<li>target.should respond_to(:foo)         <code>target.respond_to?(:foo).should == true</code></li>
</ul>


<h3>检查array hash</h3>

<ul>
<li>target.should have_key(:foo) <code>#target[:foo].should_not == nil</code></li>
<li>target.should include(4)     <code>#target.include?(4).should == true</code></li>
<li>target.should have(3).items  <code>#target.items.length == 3</code></li>
</ul>


<h3>任何be_开头的</h3>

<ul>
<li>target.should be_empty <code>#target.empty?.should == true</code></li>
<li>target.should be_blank <code>#target.blank?.should == true</code></li>
<li>target.should be_admin <code>#target.admin?.should == true</code></li>
</ul>


<h3>should ==   一招鲜吃遍天</h3>

<h3>expect to</h3>

<h4>希望一段代码会改变某个值货丢出例外</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s2">&quot;should update status to shipping&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">{</span><span class="n">order</span><span class="o">.</span><span class="n">ship!</span><span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">{</span><span class="n">order</span><span class="o">.</span><span class="n">status</span><span class="p">}</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="s2">&quot;new&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="s2">&quot;shippping&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>希望status从new变成shipping</h4>

<p>和这段差不多</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s2">&quot;should update status to shipping &quot;</span><span class="k">do</span>
</span><span class='line'><span class="n">order</span><span class="o">.</span><span class="n">status</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s2">&quot;new&quot;</span>
</span><span class='line'><span class="n">order</span><span class="o">.</span><span class="n">ship!</span>
</span><span class='line'><span class="n">order</span><span class="o">.</span><span class="n">status</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s2">&quot;shipping&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>subject 可以省略 receiver</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">subject</span> <span class="p">{</span><span class="no">Order</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:status</span> <span class="o">=&gt;</span> <span class="s2">&quot;New&quot;</span><span class="p">)}</span>
</span><span class='line'><span class="n">it</span> <span class="p">{</span><span class="n">should</span> <span class="n">be_valid</span><span class="p">}</span> <span class="c1">#subject.valid?should == true</span>
</span><span class='line'><span class="n">its</span><span class="p">(</span><span class="ss">:status</span><span class="p">){</span><span class="n">should</span> <span class="o">==</span> <span class="s2">&quot;New&quot;</span><span class="p">}</span> <span class="c1">#subject.status.should == &quot;New&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>it example specify 是一样的 都是别名</h3>

<h4>rspec filename.rb -fs 输出specdox文件</h4>

<h4>rspec filename.rb -fh 输出html文件</h4>

<h3>useful Rspec tools</h3>

<ul>
<li>factory_girl 造测试数据</li>
<li>shoulda 更多rails专用的matcher</li>
<li>capybara 提供浏览器模拟</li>
</ul>


<h3>rcov 测试覆盖度 看有哪些代码没有测试到</h3>

<h3>Capydara</h3>

<ul>
<li>fill_in &#8216;Login&#8217;, :with=>&#8217;username&#8217;</li>
<li>click_link &#8216;Sign up&#8217;</li>
</ul>


<h3>每个it只有一个测试目的。不被周边因素影响</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About PickerViewController]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/12/about-pickerviewconyroller/"/>
    <updated>2012-08-12T12:44:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/12/about-pickerviewconyroller</id>
    <content type="html"><![CDATA[<h4>Pickers get their data from a datasource and tell their delegates when something happens</h4>

<p><code>UIPickerViewDatasource.</code> and <code>UIPickerViewDelegate.</code></p>

<p>Controls have their own specific datasources and delegates</p>

<!-- more-->


<h4>First, declare that the controller conforms to both protocols</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">InstaEmailViewController</span> : <span class="nc">UIViewController</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">UIPickerViewDataSource</span><span class="p">,</span> <span class="n">UIPickerViewDelegate</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSArray</span><span class="o">*</span> <span class="n">activities_</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSArray</span><span class="o">*</span> <span class="n">feelings_</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在InstaEmailViewController.m文件中去定义array的具体内容</p>

<figure class='code'><figcaption><span>InstaEmailViewController.m</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="n">activities_</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSArray</span> <span class="n">alloc</span> <span class="p">]</span> <span class="nl">initWithObjects:</span><span class="s">@&quot;sleeping&quot;</span><span class="p">,</span><span class="s">@&quot;eating&quot;</span><span class="p">,</span><span class="s">@&quot;working&quot;</span><span class="p">,</span><span class="s">@&quot;thinking&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="n">feelings_</span> <span class="o">=</span><span class="p">[[</span><span class="n">NSArray</span> <span class="n">alloc</span> <span class="p">]</span><span class="nl">initWithObjects:</span><span class="s">@&quot;awesome&quot;</span><span class="p">,</span><span class="s">@&quot;sad&quot;</span><span class="p">,</span><span class="s">@&quot;happy&quot;</span><span class="p">,</span><span class="s">@&quot;ambivalent&quot;</span><span class="p">,</span><span class="s">@&quot;nauseous&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>              <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>记得要Release出去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dealloc</span><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">emailPicker_</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">activities_</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">feelings_</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">dealloc</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>The datasource protocol has two required methods</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">numberOfComponentsInPickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span> <span class="n">pickerView</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="c1">//要返回有多少个components(组件)</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nl">pickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="n">pickerView</span> <span class="nl">numberOfRowsInComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">component</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">component</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">[</span><span class="n">activities_</span> <span class="n">count</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">[</span><span class="n">feelings_</span> <span class="n">count</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这一步做完以后 将<code>Outlets</code>下的Datasource link到<code>File's Owner</code>上</p>

<h3>There’s just one method for the delegate protocol</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">pickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="nv">pickerView</span> <span class="nf">titleForRow:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">row</span> <span class="nf">forComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">component</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">component</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="p">[</span><span class="n">activities_</span> <span class="nl">objectAtIndex:</span><span class="n">row</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="p">[</span><span class="n">feelings_</span> <span class="nl">objectAtIndex:</span><span class="n">row</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>一样 也是link到Outlets上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[first app]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/11/first-app/"/>
    <updated>2012-08-11T23:32:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/11/first-app</id>
    <content type="html"><![CDATA[<h4>iDecideViewController.h</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">iDecideViewController</span> : <span class="nc">UIViewController</span><span class="p">{</span>
</span><span class='line'>    <span class="n">UILabel</span> <span class="o">*</span><span class="n">decisionText</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UITextField</span> <span class="o">*</span><span class="n">host</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UITextField</span> <span class="o">*</span><span class="n">port</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">retain</span><span class="p">,</span><span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">decisionText</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_redo:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_green:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>UIViewController 尝试声明了label和TextFiled等组件的使用，声明完毕以后需要在.storyboard中去right－click选择触发动作。并指向到<code>-(IBAction)</code>上。</p>

<!-- more -->


<h4>iDecideViewController.m</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;iDecideViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">iDecideViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">implementation</span> <span class="n">iDecideViewController</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">decisionText</span><span class="o">=</span><span class="n">decisionText_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">{</span>
</span><span class='line'>    <span class="n">decisionText_</span><span class="p">.</span><span class="n">text</span><span class="o">=</span><span class="s">@&quot;Go for it!&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">decisionText_</span><span class="p">.</span><span class="n">textColor</span><span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">blackColor</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 声明文字内容和颜色</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_redo:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">{</span>
</span><span class='line'>    <span class="n">decisionText_</span><span class="p">.</span><span class="n">text</span><span class="o">=</span><span class="s">@&quot;You wang redo?&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">decisionText_</span><span class="p">.</span><span class="n">textColor</span><span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_green:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">{</span>
</span><span class='line'>    <span class="n">decisionText_</span><span class="p">.</span><span class="n">text</span><span class="o">=</span><span class="s">@&quot;You choose Green&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">decisionText_</span><span class="p">.</span><span class="n">textColor</span><span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="n">host</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;192.168.1.100&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">port</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;3306&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 加载页面自动显示 没搞明白具体有什么特别的用处 仅作demo</span>
</span><span class='line'>  <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidUnload</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidUnload</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Release any retained subviews of the main view.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">shouldAutorotateToInterfaceOrientation:</span><span class="p">(</span><span class="n">UIInterfaceOrientation</span><span class="p">)</span><span class="nv">interfaceOrientation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">interfaceOrientation</span> <span class="o">!=</span> <span class="n">UIInterfaceOrientationPortraitUpsideDown</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Here’s what YOU can do to bend your brain into submission]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/11/heres-what-you-can-do-to-bend-your-brain-into-submission/"/>
    <updated>2012-08-11T23:20:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/11/heres-what-you-can-do-to-bend-your-brain-into-submission</id>
    <content type="html"><![CDATA[<p>So, we did our part. The rest is up to you. These tips are a starting point; listen to your brain and figure out what works for you and what doesn’t. Try new things.</p>

<p><code>Cut this out and stick it on your refrigerator.</code></p>

<!-- more -->


<h3>Slow down. The more you understand, the less you have to memorize.</h3>

<p>Don’t just read. Stop and think. When the book asks you a question, don’t just skip to the answer. Imagine that someone really is asking the question. The more deeply you force your brain to think, the better chance you have of learning and remembering.</p>

<h3>Do the exercises. Write your own notes.</h3>

<p>We put them in, but if we did them for you, that would be like having someone else do your workouts for you. And don’t just look at the exercises. Use a pencil. There’s plenty of evidence that physical activity while learning can increase the learning.</p>

<h3>Read the “There Are No Dumb Questions” sections.</h3>

<p>That means all of them. They’re not optional sidebars—they’re part of the core content!
Don’t skip them.</p>

<h3>Make this the last thing you read before bed. Or at least the last challenging thing.</h3>

<p>Part of the learning (especially the transfer to long-term memory) happens after you put the book down. Your brain needs time on its own, to do more processing. If you put in something new during that processing time, some of what you just learned will be lost.</p>

<h3>Drink water. Lots of it.</h3>

<p>Your brain works best in a nice bath of fluid. Dehydration (which can happen before you ever feel thirsty) decreases cognitive function.</p>

<h3>Talk about it. Out loud.</h3>

<p>Speaking activates a different part of the brain. If you’re trying to understand something, or increase your chance of remembering it later, say it out loud. Better still, try to explain it out loud to someone else. You’ll learn more quickly, and you might uncover ideas you didn’t know were there when you were reading about it.</p>

<h3>Listen to your brain.</h3>

<p>Pay attention to whether your brain is getting overloaded. If you find yourself starting to skim the surface or forget what you just read, it’s time for a break. Once you go past a certain point, you won’t learn faster by trying to shove more in, and you might even hurt the process.</p>

<h3>Feel something!</h3>

<p>Your brain needs to know that this matters. Get involved with the stories. Make up your own captions for the photos. Groaning over a bad joke is still better than feeling nothing at all.</p>

<h3>Create something!</h3>

<p>Apply this to your daily work; use what you’re learning to make decisions on your projects. Just do something to get some experience beyond the exercises and activities in this book. All you need is a pencil and a problem to solve&#8230;a problem that might benefit from using the tools and techniques you’re studying for the exam.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iDecide's logic]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/11/idecides-logic/"/>
    <updated>2012-08-11T23:11:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/11/idecides-logic</id>
    <content type="html"><![CDATA[<h4>iDecide’s logic</h4>

<p>Any controls you create need a method that Interface Builder can use to connect the control to behaviors specified in the implementation file.</p>

<p>The .xib file describes the button as you configured it in Interface Builder.
You’ll likely notice all the files’ names have “ViewController”
in them. Don’t sweat that for now, we’ll explain that in a bit.</p>

<p>iDecideViewController.h
This line declares a method called buttonPressed that Interface Builder will recognize as a possible callback.</p>

<p>iDecideViewController.m
You provide the method implementation in the
.m file. Here’s where you code up what should actually happen when the button is pressed.</p>

<h4>IBOutlet与IBAction</h4>

<p>通过在变量前增加IBOutlet来说明该变量将与界面上的某个UI对象对应，在方法前增加IBAction来说明该方法将与界面上的事件对应.</p>

<!-- more -->


<p>Below is the code for when the button gets tapped. Add the bolded code to the iDecideViewController.h and iDecideViewController.m files. We are creating three things: the UILabel property, the IBAction to respond to the button press, and the IBOutlet to change the label when the button is pressed.</p>

<h3>iDecideViewController.h</h3>

<p><code>UILabel *decisionText_;</code></p>

<p>We need to change the label text to provide our answer, so we need an IBOutlet to be able to get to the label control that the framework will build from our nib.</p>

<p><code>@property (retain, nonatomic) IBOutlet UILabel *decisionText;</code></p>

<p>We’ll talk more about properties later in the book.</p>

<p><code>-(IBAction)buttonPressed:(id)sender;</code></p>

<p>Here’s the action that will be called when the button is pressed.</p>

<h3>iDecideViewController.m</h3>

<p><code>@synthesize decisionText=decisionText_;</code></p>

<p>The @synthesize tells the compiler to create a getter and setter for the property we declared in the header file. We’ll get into that more in Chapter 3.</p>

<p><code>-(IBAction)buttonPressed:(id)sender</code></p>

<p>This is the implementation of the method that gets called when the button is pressed.</p>

<p><code>decisionText_.text = @”Go for it!”;</code></p>

<p>We’ll use our reference to the label to change the text.</p>

<p>Click on the circle next to New Referencing Outlet and drag it to the @property statement for the Outlet in the .h file on the right. Now when the decisionText UILabel is generated, our decisionText property will reference the control, through the IBOutlet.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">//</span>
</span><span class='line'><span class="cp">//  iDecideViewController.h</span>
</span><span class='line'><span class="cp">//  iDecide</span>
</span><span class='line'><span class="cp">//</span>
</span><span class='line'><span class="cp">//  Created by Woody.Xu on 12-8-11.</span>
</span><span class='line'><span class="cp">//  Copyright (c) 2012年 Woody.Xu. All rights reserved.</span>
</span><span class='line'><span class="cp">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">iDecideViewController</span> : <span class="nc">UIViewController</span><span class="p">{</span>
</span><span class='line'>      <span class="n">UILabel</span> <span class="o">*</span><span class="n">decisionText</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">retain</span><span class="p">,</span><span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">decisionText</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_redo:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_green:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;iDecideViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">iDecideViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">implementation</span> <span class="n">iDecideViewController</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">decisionText</span><span class="o">=</span><span class="n">decisionText_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">{</span>
</span><span class='line'>  <span class="n">decisionText_</span><span class="p">.</span><span class="n">text</span><span class="o">=</span><span class="s">@&quot;Go for it!&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">decisionText_</span><span class="p">.</span><span class="n">textColor</span><span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">blackColor</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_redo:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">{</span>
</span><span class='line'>  <span class="n">decisionText_</span><span class="p">.</span><span class="n">text</span><span class="o">=</span><span class="s">@&quot;You wang redo?&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">decisionText_</span><span class="p">.</span><span class="n">textColor</span><span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed_green:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">{</span>
</span><span class='line'>  <span class="n">decisionText_</span><span class="p">.</span><span class="n">text</span><span class="o">=</span><span class="s">@&quot;You choose Green&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">decisionText_</span><span class="p">.</span><span class="n">textColor</span><span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App Magnets]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/11/app-magnets/"/>
    <updated>2012-08-11T23:09:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/11/app-magnets</id>
    <content type="html"><![CDATA[<h2>App Magnets</h2>

<ul>
<li>Determine app layout. <code>确定应用程序的布局</code></li>
<li>Build the GUI <code>构建用户图形界面</code></li>
<li>Figure out how to use the controls <code>弄清楚如何使用控件</code></li>
<li>Handle the data <code>处理数据</code></li>
<li>Generate the email.  <code>生成电子邮件</code></li>
</ul>


<h3>Determine app layout.</h3>

<p>Before you start coding anything, sketch up what you’re thinking.</p>

<h3>Build the GUI</h3>

<p>Some people write backend code first—we’re going to go back and forth depending on our project, but to get started, we’ll do the GUI first this time.</p>

<h3>Figure out how to use the controls</h3>

<p>After you’ve landed on the general app design, you need to get into the documentation a little and figure out how to implement the controls you’ve chosen.</p>

<h3>Handle the data</h3>

<p>Here we need to manage the data coming from the controls.</p>

<h3>Generate the email.</h3>

<p>We’ll help you out with this last step.</p>
]]></content>
  </entry>
  
</feed>
