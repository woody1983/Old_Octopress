<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[1024Bit  电子游牧日志]]></title>
  <link href="http://woody1983.github.com/atom.xml" rel="self"/>
  <link href="http://woody1983.github.com/"/>
  <updated>2013-08-14T23:57:03+08:00</updated>
  <id>http://woody1983.github.com/</id>
  <author>
    <name><![CDATA[Johnny Hsu]]></name>
    <email><![CDATA[unix1983@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fast enumeration]]></title>
    <link href="http://woody1983.github.com/blog/2013/08/14/fast-enumeration/"/>
    <updated>2013-08-14T23:50:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/08/14/fast-enumeration</id>
    <content type="html"><![CDATA[<h3>能多快速？</h3>

<blockquote><p>Objective-C is good at making decisions, but it’s great at being lazy.</p></blockquote>

<h4>笨方法循环打印数组内容</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">funnyWords</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Schadenfreude&quot;</span><span class="p">,</span> <span class="s">@&quot;Portmanteau&quot;</span><span class="p">,</span> <span class="s">@&quot;Penultimate&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">funnyWords</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">funnyWords</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">funnyWords</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>更简洁的方法是</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">funnyWords</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Schadenfreude&quot;</span><span class="p">,</span> <span class="s">@&quot;Portmanteau&quot;</span><span class="p">,</span> <span class="s">@&quot;Penultimate&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">word</span> <span class="k">in</span> <span class="n">funnyWords</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a funny word&quot;</span><span class="p">,</span> <span class="n">word</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>练习</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">newHats</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;Cowboy&quot;</span><span class="p">,</span> <span class="s">@&quot;Conductor&quot;</span><span class="p">,</span> <span class="s">@&quot;Baseball&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">hat</span><span class="p">;</span> <span class="c1">//记得声明</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">hat</span> <span class="k">in</span> <span class="n">newHats</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Trying on new %@ hat&quot;</span><span class="p">,</span> <span class="n">hat</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">([</span><span class="n">mrHiggie</span> <span class="nl">tryOnHat:</span><span class="n">hat</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie loves it&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie hates it&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try Objective-C]]></title>
    <link href="http://woody1983.github.com/blog/2013/08/11/try-objective-c/"/>
    <updated>2013-08-11T23:30:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/08/11/try-objective-c</id>
    <content type="html"><![CDATA[<h3>Code School 上的免费教程，为什么要着急先把这个免费的学掉 我也不知道具体是为什么。一个月学费20$ 总是出现在我最忙的时候。月底还有考试，真TMD服了。</h3>

<!-- more -->


<h2>常规的一些语法 变量 输出</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello,Mr.Johnny&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="n">firstName</span><span class="p">);</span> <span class="c1">//Logging a variable</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello there, %@.&quot;</span><span class="p">,</span> <span class="n">firstName</span> <span class="p">);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ %@&quot;</span><span class="p">,</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">firstName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ %@&quot;</span><span class="p">,</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">lastName</span><span class="p">);</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">age</span> <span class="o">=</span> <span class="err">@</span><span class="mi">30</span><span class="p">;</span> <span class="c1">//Creating a number object</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">NSNumber *ipodBirthdayYear = @2001;</span>
</span><span class='line'><span class="cm">NSNumber *iphoneBirthdayYear = @2007;</span>
</span><span class='line'><span class="cm">NSNumber *ipadBirthdayYear = @2010;</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Log a number object</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is %@ years old&quot;</span><span class="p">,</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Creating an array variable</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">apps</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;AngryFowl&quot;</span><span class="p">,</span><span class="s">@&quot;Lettertouch&quot;</span><span class="p">,</span><span class="s">@&quot;Tweetrobot&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Accessing values in an array</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">apps</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="c1">//challenge[11]: Lettertouch</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Changing an array</span>
</span><span class='line'><span class="n">apps</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;AngryFowl&quot;</span><span class="p">,</span><span class="s">@&quot;Lettertouch&quot;</span><span class="p">,</span><span class="s">@&quot;Tweetrobot&quot;</span><span class="p">,</span><span class="s">@&quot;Instacanvas&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="cp">## Dictionary还是蛮实用的。</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Creating a dictionary</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;First Name&quot;</span><span class="o">:</span> <span class="s">@&quot;Johnny&quot;</span><span class="p">};</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">appRatings</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;AngryFowl&quot;</span><span class="o">:</span> <span class="err">@</span><span class="mi">3</span><span class="p">,</span> <span class="s">@&quot;Lettertouch&quot;</span><span class="o">:</span> <span class="err">@</span><span class="mi">5</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Accessing values in a dictionary</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Lettertouch has a rating of %@.&quot;</span><span class="p">,</span> <span class="n">appRatings</span><span class="p">[</span><span class="s">@&quot;Lettertouch&quot;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<h1>基础部分结束</h1>

<h1>Objective-C 有一个特性就是调用一个方法 在这里称之为传递一个信息 不过这么看倒反而形象了。</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//Sending a message</span>
</span><span class='line'><span class="p">[</span><span class="n">tryobjc</span> <span class="n">completeThisChallenge</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Sending the description message</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">Try sending the description message to the foods array inside of NSLog() to see what it returns.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">foods</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;tacos&quot;</span><span class="p">,</span> <span class="s">@&quot;burgers&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">foods</span> <span class="n">description</span><span class="p">]);</span>
</span><span class='line'><span class="c1">//--------------------------Storing the result of a message</span>
</span><span class='line'><span class="c1">//NSString *result = [myArrayObject description];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">foods</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;tacos&quot;</span><span class="p">,</span> <span class="s">@&quot;burgers&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="n">foods</span> <span class="n">description</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//--------------------------Trying to log an NSUInteger</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">city</span> <span class="o">=</span> <span class="s">@&quot;Ice World&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">cityLength</span> <span class="o">=</span> <span class="p">[</span><span class="n">city</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;City has %lu characters&quot;</span><span class="p">,</span> <span class="n">cityLength</span><span class="p">);</span>
</span><span class='line'><span class="c1">//If you want to log an NSUInteger, you can use the %lu placeholder instead of %@.</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Operating on NSNumbers</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">NSNumber *higgiesAge = @6;</span>
</span><span class='line'><span class="cm">NSNumber *phoneLives = @3;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">NSUInteger higgiesAgeInt = [higgiesAge unsignedIntegerValue];</span>
</span><span class='line'><span class="cm">NSUInteger phoneLivesInt = [phoneLives unsignedIntegerValue];</span>
</span><span class='line'>
</span><span class='line'><span class="cm">NSUInteger higgiesRealAge = higgiesAgeInt * phoneLivesInt;</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">higgiesAge</span> <span class="o">=</span> <span class="err">@</span><span class="mi">6</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">phoneLives</span> <span class="o">=</span> <span class="err">@</span><span class="mi">3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">higgiesAgeInt</span> <span class="o">=</span> <span class="p">[</span><span class="n">higgiesAge</span> <span class="n">unsignedIntegerValue</span><span class="p">];</span>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">phoneLivesInt</span> <span class="o">=</span> <span class="p">[</span><span class="n">phoneLives</span> <span class="n">unsignedIntegerValue</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSUInteger</span> <span class="n">product</span> <span class="o">=</span> <span class="n">higgiesAgeInt</span> <span class="o">*</span> <span class="n">phoneLivesInt</span><span class="p">;</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Higgie is actually %lu years old.&quot;</span><span class="p">,</span> <span class="n">product</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------Appending 2 strings</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[</span><span class="n">firstName</span> <span class="nl">stringByAppendingString:</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">Well, it turns out that we can. There is a method on NSString called stringByAppendingString: </span>
</span><span class='line'><span class="cm">that takes a single NSString argument and appends it to the NSString object that received the </span>
</span><span class='line'><span class="cm">stringByAppendingString: message, returning the full string. So we can rewrite the above code like so:</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h1>Nesting messages</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[[</span><span class="n">firstName</span> <span class="nl">stringByAppendingString:</span><span class="s">@&quot; &quot;</span><span class="p">]</span> <span class="nl">stringByAppendingString:</span><span class="n">lastName</span> <span class="p">];</span>
</span><span class='line'> <span class="cm">/*//Append firstName and lastName with a space between//*/</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//---------------------Working with long message names</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[[</span><span class="n">firstName</span> <span class="nl">stringByAppendingString:</span><span class="s">@&quot; &quot;</span><span class="p">]</span>
</span><span class='line'>                        <span class="nl">stringByAppendingString:</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">replaced</span> <span class="o">=</span> <span class="p">[</span><span class="n">fullName</span> <span class="nl">stringByReplacingOccurrencesOfString:</span><span class="n">firstName</span>
</span><span class='line'>                                                         <span class="nl">withString:</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">replaced</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">challenge[9]: Johnny Hsu</span>
</span><span class='line'><span class="cm">challenge[10]: Hsu Hsu</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Creating an NSString with a message</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">copy</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithString:</span><span class="n">firstName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a copy of %@&quot;</span><span class="p">,</span> <span class="n">copy</span><span class="p">,</span> <span class="n">firstName</span><span class="p">);</span>
</span><span class='line'><span class="c1">//challenge[5]: Johnny Hsu is a copy of Johnny Hsu</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Creating an NSString with alloc/init</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">NSString *emptyString = [[NSString alloc] init];</span>
</span><span class='line'><span class="cm">NSArray *emptyArray = [[NSArray alloc] init];</span>
</span><span class='line'><span class="cm">NSDictionary *emptyDictionary = [[NSDictionary alloc] init];</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">copy</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithString:</span><span class="n">firstName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@ is a copy of %@&quot;</span><span class="p">,</span> <span class="n">copy</span><span class="p">,</span> <span class="n">firstName</span><span class="p">);</span>
</span><span class='line'><span class="c1">//challenge[5]: Johnny Hsu is a copy of Johnny Hsu</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Refactoring string combination</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">firstName</span> <span class="o">=</span> <span class="s">@&quot;Johnny Hsu&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">lastName</span> <span class="o">=</span> <span class="s">@&quot;Hsu&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">fullName</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%@ %@&quot;</span><span class="p">,</span><span class="n">firstName</span><span class="p">,</span><span class="n">lastName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">fullName</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h1>判断啥的 登场吧</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//----------------------A simple if</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">mrHiggieIsMean</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">mrHiggieIsMean</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Confirmed: he is super mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//----------------------if - else</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">mrHiggieIsMean</span> <span class="o">=</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">areYouMean</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">mrHiggieIsMean</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Confirmed: he is super mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Confirmed: he isn&#39;t super mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//----------------------if - else if - else</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">+----------------+-----------------------------------------+</span>
</span><span class='line'><span class="cm">| Meanness Range |               Log String                |</span>
</span><span class='line'><span class="cm">+----------------+-----------------------------------------+</span>
</span><span class='line'><span class="cm">| 0-3            | Mr. Higgie is on the nice side          |</span>
</span><span class='line'><span class="cm">| 4-7            | Mr. Higgie is sorta nice but not really |</span>
</span><span class='line'><span class="cm">| 8-10           | Mr. Higgie is definitely mean           |</span>
</span><span class='line'><span class="cm">+----------------+-----------------------------------------+</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">meannessScale</span> <span class="o">=</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">meannessScale</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">([</span><span class="n">meannessScale</span> <span class="n">intValue</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is on the nice side&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">([</span><span class="n">meannessScale</span> <span class="n">intValue</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">8</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="n">meannessScale</span> <span class="n">intValue</span><span class="p">]</span> <span class="o">&gt;</span><span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is sorta nice but not really&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is definitely mean&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------Equal strings</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">hat</span> <span class="o">=</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">currentHat</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">([</span><span class="n">hat</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;Sombrero&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Ese es un muy buen sombrero&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">hat</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;Fedora&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie was an iPhone before there was iPhone&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">hat</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie was an AstronautHelmet&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is currently hatless&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//--------------------Switch it up</span>
</span><span class='line'><span class="c1">//Mission:He has requested that we please update the switch to let him wear his AstronautHelmet hat on the weekends.</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">day</span> <span class="o">=</span> <span class="n">getDayOfWeek</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="n">day</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">4</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Fedora&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">5</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Sombrero&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">6</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">7</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is wearing: %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">currentHat</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//-------------------------Switch on enums</span>
</span><span class='line'><span class="k">typedef</span> <span class="nf">NS_ENUM</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">,</span> <span class="n">DayOfWeek</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">DayOfWeekMonday</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekTuesday</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekWednesday</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekThursday</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekFriday</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekSaturday</span> <span class="o">=</span> <span class="mi">6</span><span class="p">,</span>
</span><span class='line'>    <span class="n">DayOfWeekSunday</span> <span class="o">=</span> <span class="mi">7</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Mission:Finish converting the rest of the cases to use the enum values.</span>
</span><span class='line'><span class="n">DayOfWeek</span> <span class="n">day</span> <span class="o">=</span> <span class="n">getDayOfWeek</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="n">day</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekMonday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekTuesday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekWednesday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekThursday:</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Fedora&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekFriday:</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;Sombrero&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekSaturday:</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">DayOfWeekSunday:</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">mrHiggie</span> <span class="nl">setCurrentHat:</span><span class="s">@&quot;AstronautHelmet&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Mr. Higgie is wearing: %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">mrHiggie</span> <span class="n">currentHat</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h1>Obviously 还没写完 不能对一个拖延症患者要求太高不是。</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Arduino]]></title>
    <link href="http://woody1983.github.com/blog/2013/06/08/basic-arduino/"/>
    <updated>2013-06-08T23:50:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/06/08/basic-arduino</id>
    <content type="html"><![CDATA[<h3>PIN脚电压</h3>

<p>digitalWrite(led, HIGH);</p>

<p>使13腳位的電壓設定為相對應的值,HIGH為5V(3.3的板子上為3.3v),LOW為0V</p>

<ul>
<li>Digital Read Serial 串行数字阅读</li>
<li>Analog Read Serial 串行模拟阅读</li>
<li>resistor 电阻</li>
<li>hook-up wire 面包板插线</li>
<li>breadboard 面包板</li>
</ul>


<p>留意 LED的+电源是有PIN脚给的~ 5V电源是直接供电给button 然后通过10k的电阻连接到GND~ 并在-电源上插了一根线连到一个PIN脚上 并pinMode设置为OUTPUT~获取pushbutton的电源情况~</p>

<p><img src="http://25.media.tumblr.com/fa5442720a0bb7c5977224b78bcde78f/tumblr_mnb2qw0yjf1sst44io1_400.jpg"></p>

<!-- more -->


<h3>ADC &amp; Analog Read Serial</h3>

<p>arduino主控板上A0—-A5是指ADC输入，所谓ADC值模数变换器，将读入的模拟值进行处理，将模拟数转换为数字，便于用户对数据进行处理，因为atmea328ADC是一个10位的寄存器，2的10次方=1024，从1~1023所以当arduino读入值为默认的电压最大值5V时，analogRead读到的值就是1023.</p>

<p>模拟信号
模拟信号是指信息参数在给定范围内表现为连续的信号。 或在一段连续的时间间隔内，其代表信息的特征量可以在任意瞬间呈现为任意数值的信号。比如正弦函数、指数函数等。 从自然界感知的大部分物理量都是模拟性质的，如速度、压力、温度、声音、重量以及位置等都是最常见的物理量。</p>

<p>数字信号
数字信号指幅度的取值是离散的，幅值表示被限制在有限个数值之内。二进制码就是一种数字信号。二进制码受噪声的影响小，易于有数字电路进行处理，所以得到了广泛的应用。 通俗的说：数字传感器就产生0 1信号(此0与1是指高低电平形成的矩形波) 而模拟传感器是通过输出一个线性变换的电平信号(如通常的正弦波)</p>

<h1>杂记</h1>

<h3>关于VGA 看来还是需要给Raspberry配个显示器</h3>

<p>HDMI: High Definition Multimedia Interface, 高清晰度多媒体接口，其可同时传送音频和影音信号，最高数据传输速度为5Gbps</p>

<p>VGA: Video Graphics Array, 视频图形阵列,</p>

<p>普及一下知识，笔记本电脑上的VGA接口和HDMI接口的是输出作用的，就是说只能数据输出，没有接受数据的功能。</p>

<p>补记:远程也可以 但第一次配置WiFi账户密码什么的 还是需要显示的</p>

<h3>关于电位器</h3>

<p>程序方面没有什么特别的地方 一样是 将他的Analog数值读出来用作你想使用的地方</p>

<p>int sensorValue = analogRead(A0);
实用的地方之一 就是可以用外界来控制电压的大小 来达到想要的效果.</p>

<p>将得到的analog数值按照模拟方式写给电子元件</p>

<p>analogWrite(2,sensorValue);
另外 蜂鸣器需要特殊的操作才能发出声音…噪音确切点</p>

<h3>我的第一个Arduino UNO R3</h3>

<p><img src="http://24.media.tumblr.com/cd348854371f41a165a21b802d4b8cae/tumblr_mn8rm1rGDS1sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/425af0b5217813e7227785ac1431ad3f/tumblr_mnd3ouoEB61sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/a4e9ab26fd2e9a2f630db6476747192b/tumblr_mnejqm2t7l1sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/0eb1b4af85107cd163413a5d8456edef/tumblr_mngqgrrtWg1sst44io1_400.jpg">
<img src="http://24.media.tumblr.com/19a7eebe4d1eed8da211d38ee1c75825/tumblr_mnikolbPlQ1sst44io1_400.jpg">
<img src="http://24.media.tumblr.com/4eecaf0a7307ada1595b2ceae1f0fd63/tumblr_mnimukqbd41sst44io1_400.jpg"></p>

<h3>Arduino Sensor Shield V5.0</h3>

<p><img src="http://24.media.tumblr.com/c61baa915d4c6b609c18ab8eb428ebd2/tumblr_mncx4xipVw1sst44io1_400.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LM35使用笔记]]></title>
    <link href="http://woody1983.github.com/blog/2013/06/08/lm35shi-yong-bi-ji/"/>
    <updated>2013-06-08T23:25:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/06/08/lm35shi-yong-bi-ji</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">使用LM35来测量室内温度</span>
</span><span class='line'>
</span><span class='line'><span class="cm">留意float类型的计算和温度换算公式</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">analogRead</span><span class="p">(</span><span class="n">A0</span><span class="p">);</span>    <span class="c1">//读取A0口的电压值</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">float</span> <span class="n">vol</span> <span class="o">=</span> <span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mf">1024.0</span><span class="p">)</span> <span class="o">*</span> <span class="mf">5.0</span><span class="p">;</span>   <span class="c1">//使用浮点数存储温度数据，温度数据由电压值换算得到</span>
</span><span class='line'>  <span class="kt">float</span> <span class="n">T</span> <span class="o">=</span> <span class="n">vol</span><span class="o">*</span><span class="mi">100</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">&quot;analogRead A0: &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">&quot; Volatge: &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">vol</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">&quot; Temperature: &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">T</span><span class="p">);</span>                   <span class="c1">//串口输出温度数据</span>
</span><span class='line'>  <span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span>                           <span class="c1">//等待2秒，控制刷新速度</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Analog convert Voltage</h3>

<p>LM35换算公式简化掉 Analog数值*(5/1024) 即可 5 voltage 1024 analog</p>

<p><img src="http://25.media.tumblr.com/d0f801f032d35b3ff84a0df6c6c2cb63/tumblr_mnbaw9lKc31sst44io1_400.jpg">
<img src="http://25.media.tumblr.com/0dae8653daf7cb673d7956f3ecc5ef20/tumblr_mnb63bt0J11sst44io1_400.jpg"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">LM35</span> <span class="n">Temperature</span> <span class="n">Sensor</span>
</span><span class='line'><span class="err">和</span><span class="n">TMP36</span><span class="err">不太一样</span> <span class="n">LM35</span><span class="err">没有默认电流</span> <span class="err">在没有温度的时候</span> <span class="err">输出电压是</span><span class="mi">0</span><span class="n">mv</span>
</span><span class='line'>
</span><span class='line'><span class="err">对比关系还是</span><span class="mi">5</span><span class="n">v</span><span class="err">对应</span><span class="n">analog</span><span class="err">的</span><span class="mi">1023</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1023</span><span class="err">的</span><span class="n">analog</span><span class="err">数值转换成</span><span class="n">voltage</span> <span class="o">=</span> <span class="n">analog</span><span class="o">/</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="err">摄氏度</span> <span class="o">=</span> <span class="mi">10</span><span class="n">mv</span> <span class="n">so</span> <span class="n">voltage</span><span class="err">转温度也比较容易一些</span>
</span><span class='line'>
</span><span class='line'><span class="n">open</span> <span class="n">a</span> <span class="n">serial</span> <span class="n">connection</span> <span class="n">to</span> <span class="n">display</span> <span class="n">values</span> <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AR底盘]]></title>
    <link href="http://woody1983.github.com/blog/2013/06/03/ardi-pan/"/>
    <updated>2013-06-03T23:43:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/06/03/ardi-pan</id>
    <content type="html"><![CDATA[<h4>ミニ四駆30周年を迎え、空力を含め走行性能を追求した新設計シャーシを採用。</h4>

<p>看完图纸 第一感觉是 <code>底盘是越来越低了</code>  <code>电池和马达可以在车底更换，而且是在不拆壳的前提下完成。</code></p>

<p>原车配有刹车零件和<code>26mm低重心胎框</code>與六顆低磨擦導輪。</p>

<p>迷你四驅車REV中的REV是指「REVOLUTION」，具有革命的意味。</p>

<p><img src="http://media.tumblr.com/32ac50b59e4af6c02874ee053816f3c9/tumblr_inline_mnt1idjMPz1qz4rgp.jpg"></p>

<!-- more -->


<h4>侧面来看车身底盘高度。</h4>

<p><img src="http://media.tumblr.com/41a4dfd6bdf6e495643f3d69cbad62f4/tumblr_inline_mnt1j3q37w1qz4rgp.jpg"></p>

<h4>底盘的造型可以说是对得起30周年纪念日的发型车。</h4>

<p><img src="http://media.tumblr.com/dc8096af27257865d2db2f25f5135511/tumblr_inline_mnt1l1fRxL1qz4rgp.jpg"></p>

<h4>传说中的空气动力系统</h4>

<p><img src="http://media.tumblr.com/b32763821bf74056603bda1a57ad6c3d/tumblr_inline_mnt1lkCqPE1qz4rgp.jpg"></p>

<h2>进气口特写</h2>

<p><img src="http://media.tumblr.com/ff855c86495064e20e3cc7e86aa83923/tumblr_inline_mnt1ng1Pow1qz4rgp.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于HC-SR04 超声波传感器]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/27/guan-yu-hc-sr04-chao-sheng-bo-chuan-gan-qi/"/>
    <updated>2013-05-27T00:21:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/27/guan-yu-hc-sr04-chao-sheng-bo-chuan-gan-qi</id>
    <content type="html"><![CDATA[<p>关于HC-SR04 超声波传感器</p>

<p>淘宝上面最便宜的SRF-04超声波传感器，有四个脚：5v电源脚（Vcc），触发控制端（Trig），接收端（Echo），地端（GND） 我的是HC-SR04</p>

<p>模块工作原理：</p>

<p>1.采用IO触发测距，给至少10us的高电平信号；
2.模块自动发送8个40KHz的方波，自动检测是否有信号返回；
3.有信号返回，通过IO输出一高电平，高电平持续的时间就是超声波从发射到返回的时间．测试距离=(高电平时间*声速(340m/s))/2;
pulseIn函数用于读取引脚脉冲的时间长度，脉冲可以是HIGH或LOW。如果是HIGH，函数将先等引脚变为高电平，然后开始计时，一直到变为低电平为止。返回脉冲持续的时间长短, 单位为ms。如果超时还没有读到的话, 将返回0。</p>

<p>Demo:</p>

<p>发一个10ms的高脉冲去触发TrigPin</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">digitalWrite</span><span class="p">(</span><span class="n">TrigPin</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'><span class="n">delayMicroseconds</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">//使发出发出超声波信号接口低电平2μs</span>
</span><span class='line'><span class="n">digitalWrite</span><span class="p">(</span><span class="n">TrigPin</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'><span class="n">delayMicroseconds</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span> <span class="c1">//使发出发出超声波信号接口高电平10μs，这里是至少10μs</span>
</span><span class='line'><span class="n">digitalWrite</span><span class="p">(</span><span class="n">TrigPin</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span> <span class="c1">//保持发出超声波信号接口低电平</span>
</span></code></pre></td></tr></table></div></figure>


<h4>距离换算</h4>

<ul>
<li>cm = pulseIn(EchoPin, HIGH) / 58.0; //算成厘米</li>
<li>cm = (int(cm * 100.0)) / 100.0; //保留两位小数</li>
</ul>


<p>原理理解以后 尽量使用arduino官方推荐的SR04超声波传感器类库</p>

<h3>读出脉冲时间</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="n">distance</span> <span class="o">=</span> <span class="n">pulseIn</span><span class="p">(</span><span class="n">inputPin</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'><span class="n">distance</span><span class="o">=</span> <span class="n">distance</span><span class="o">/</span><span class="mi">58</span><span class="p">;</span> <span class="c1">// 将脉冲时间转化为距离（单位：厘米）</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ariadne]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/26/ariadne/"/>
    <updated>2013-05-26T23:38:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/26/ariadne</id>
    <content type="html"><![CDATA[<h4>アリアス/ Ariadne / 阿里阿德涅</h4>

<p><img src="http://media.tumblr.com/d5e95b4a06b7a25e6b96c61d2c7564d2/tumblr_inline_mnelt4J0Qq1qz4rgp.jpg"></p>

<p>阿里阿德涅在希臘神話中(拉丁文：Arianna)是克里特(Crete)之王 米諾斯(Minos)[補充5]與其皇后帕西菲(Pasiphaë)所生的女兒。 她曾經幫助過忒修斯[補充]解開米諾斯的迷宮，並戰勝了彌諾陶洛斯 (Minotaur)[補充6]。 後來成為了古希臘神話中的酒神狄俄倪索斯(Dionysus)[補充7]的妻子。</p>

<p>[補充5] 克里特島國王米諾斯在戰爭中打敗過雅典，他要求雅典人每九年(亦傳每年) 奉祭七名少年七名少女給怪物彌諾陶洛斯。輪到第三次奉祭時，忒修斯 自告奮勇要去殺死那個怪物。他和父親埃勾斯約定，當他的船回航時若成功則掛白帆。</p>

<p>在克里特，米諾斯的女兒阿里阿德涅愛上了忒修斯，她給了他一個線團， 以便他在迷宮中標記退路。忒修斯殺死了彌諾陶洛斯，帶領其他雅典人 逃離了迷宮，他還帶走了阿里阿德涅，但在回航路上將她遺棄在奈克索斯島 (Naxos)。阿里阿德涅詛咒了他，於是忒修斯忘記掛上白帆，埃勾斯以為 忒修斯失敗身亡，悲痛之下墮下海岸而死，從此這片海域就被稱為愛琴海 (Aegean)。</p>

<p>另一種說法是忒修斯被酒神狄俄涅索斯脅迫，將阿里阿德涅遺棄， 沮喪之餘忘記了掛白帆。</p>

<p>忒修斯回航所乘的船據說在雅典保留了很多年，木頭朽毀後不斷修補替換， 後來人們常把部分替換後主體是否仍然保留的哲學命題稱為忒修斯的船。</p>

<p>這段故事三千年來在歐洲被廣泛傳誦多次改編。 阿里阿德涅的線(Ariadne’s thread )、忒修斯的船(Ship of Theseus)等 成為常用的典故，亦在邏輯學、哲學中成為專用的術語。</p>

<p>[補充6] 彌諾陶洛斯希為臘神話中一個著名的半人半牛怪物。 彌諾陶洛斯是克里特國王米諾斯之妻帕西菲與克里特公牛發生反常性關係 而生出來的怪物。在彌諾斯與其兄弟爭奪王位的時候，海神波塞冬曾從海上 送給他一頭純白色的公牛。彌諾斯本應以此牛向波塞冬獻祭，但他卻將其 藏匿起來，並獻祭了另外一頭。波塞冬為了報復，就使帕西菲瘋狂地愛上 了這頭牛。在著名的建築師代達羅斯(他在米諾斯的宮廷裡避難)的幫助下， 帕西菲化裝成一頭母牛與此牛交配；結果她不久便懷孕生下了彌諾陶洛斯。</p>

<p>按照另一種說法，彌諾陶洛斯則是波塞冬本人與帕西菲所生。</p>

<p>在古希臘人的想象中，彌諾陶洛斯具有人類的身體，但長著一顆牛頭和 一條牛尾巴。據說帕西菲在彌諾陶洛斯嬰兒時期還曾撫養過它， 但彌諾陶洛斯在長大之後就變得非常殘忍凶暴。</p>

<p>[補充7] 狄俄倪索斯是古希臘神話中的酒神，與羅馬人信奉的巴克斯(拉丁語：Bacchus) 相對應。狄俄倪索斯是古代希臘色雷斯人信奉的葡萄酒之神，不僅握有葡萄酒 醉人的力量，還以布施歡樂與慈愛在當時成為極有感召力的神，他推動了古代 社會的文明並確立了法則，維護著世界的和平。此外，他還護佑著希臘的農業 與戲劇文化。傳說中他是宙斯與塞墨勒之子，又有一說是宙斯與珀耳塞福涅之子。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hermes]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/26/hermes/"/>
    <updated>2013-05-26T00:07:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/26/hermes</id>
    <content type="html"><![CDATA[<h2>ヘルメス/ Hermes/ 赫耳墨斯</h2>

<p>赫耳墨斯是宙斯與瑪亞的兒子，是奧林匹斯十二主神之一。 他是邊界及穿越邊界的旅行者之神，亦掌管牧羊人與牧牛人，辯論與靈舌， 詩與文字，體育，重量與度量，發明與商業，他也是狡猾的小偷和騙子之神。 《荷馬詩頌》裡描述他是一個變化多端、圓滑機靈的盜賊，他帶給人夢境， 是夜裡守望者，門外的小偷，在長生不老的眾神裡最先展示善意的人。</p>

<p>赫耳墨斯是神界與人界之間的信使，這是他與伊里斯共同擔當的職責。</p>

<p>赫耳墨斯發明了鑽木取火，他還發明了樂器排蕭和里拉琴。 赫耳墨斯也是各種競技比賽及拳擊的發明人，也因此成為運動員的保護神。 現代神話收集家經常把赫耳墨斯和其他民族文化裡的耍詭計的神相提並論。</p>

<p>赫耳墨斯還是亡靈的接引神，他幫助死去的靈魂到達冥界。 在許多希臘神話故事里，赫耳墨斯是除了哈得斯和珀耳塞福涅之外 唯一可以在冥界自由出入的神。</p>

<p>赫耳墨斯的代表動物是公雞和烏龜，他的身上戴有皮包或是皮夾， 腳穿插翼涼鞋，頭戴翼帽，手拿信使的權杖，也叫做雙盤蛇帶翼權杖。 赫耳墨斯因為他的機智與狡猾也成為盜賊之神，他出生的第一晚就已經 做了小偷，從母親瑪亞那裡溜出去偷他哥哥阿波羅的神牛。</p>

<p>赫耳墨斯對他的父親宙斯十分忠誠，當宙斯的愛人之一寧芙仙子 伊俄被赫拉捉住，並且派了百眼巨人阿耳戈斯看守的時候，是赫耳墨斯出手 解救了她。他給巨人唱悅耳動聽的歌，講冗長乏味的故事以哄他入睡之後， 用月牙形的彎刀砍下了他的頭。</p>

<p>赫耳墨斯在羅馬神話中對應于墨丘利(拉丁語：Mercurius)，是九大行星中的水星。 墨丘利繼承了赫耳墨斯的許多特徵，比如商業的守護神。</p>

<p>他雙腳長有雙翼、因此行走如飛，並成為在奧林匹斯山擔任宙斯和諸神傳令的 使者，為諸神傳送消息，並完成宙斯交給他的各種任務。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino PWM Control Led]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/24/arduino-pwm-control-led/"/>
    <updated>2013-05-24T11:54:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/24/arduino-pwm-control-led</id>
    <content type="html"><![CDATA[<h3>几个概念</h3>

<ul>
<li>LED长脚接(+)</li>
<li>Digital 的pin脚可以代替(+) 另一端需接GND地线</li>
<li>resistor 要选择合适的值 否则电压会过小或过大</li>
<li>串联和并联的区别 我初中白念了</li>
<li>analogWrite 模拟传值</li>
</ul>


<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">redled_1</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">redled_2</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">greenled</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">switchPins</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">brightness</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">fadeAmount</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">// 把3,4,5腳定義為輸出 </span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">redled_1</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">redled_2</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">greenled</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 把第2腳定義為輸入 </span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">switchPins</span><span class="p">,</span><span class="n">INPUT</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">switchstate</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">// 用 digitalRead(2) 來讀取第2腳開關的狀態 </span>
</span><span class='line'>  <span class="n">switchstate</span> <span class="o">=</span> <span class="n">digitalRead</span><span class="p">(</span><span class="n">switchPins</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 如果案件沒有按下，就只亮綠燈 </span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">switchstate</span> <span class="o">==</span> <span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="c1">//digitalWrite(3, HIGH); </span>
</span><span class='line'>    <span class="c1">// 將第3腳的綠燈點亮 </span>
</span><span class='line'>    <span class="n">analogWrite</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">brightness</span><span class="p">);</span>
</span><span class='line'>    <span class="n">brightness</span> <span class="o">=</span> <span class="n">brightness</span> <span class="o">+</span> <span class="n">fadeAmount</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">brightness</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">brightness</span> <span class="o">==</span> <span class="mi">255</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>        <span class="n">fadeAmount</span> <span class="o">=</span> <span class="o">-</span><span class="n">fadeAmount</span> <span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="n">delay</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
</span><span class='line'>    <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 將第4腳的紅燈熄滅 </span>
</span><span class='line'>    <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 將第5腳的紅燈熄滅 </span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 如果按鍵按下了，就會進入下面的程式碼 </span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>     <span class="p">{</span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第3腳的綠燈熄滅 </span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第4腳的紅燈熄滅 </span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第5腳的紅燈點亮 </span>
</span><span class='line'>       <span class="c1">// 等 250 mini-second 後再改變燈號 </span>
</span><span class='line'>       <span class="n">delay</span><span class="p">(</span><span class="mi">250</span><span class="p">);</span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第4腳的紅燈點亮 </span>
</span><span class='line'>       <span class="n">digitalWrite</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
</span><span class='line'>       <span class="c1">// 將第5腳的紅燈熄滅 </span>
</span><span class='line'>       <span class="c1">// 等 250 mini-second 後再改變燈號 </span>
</span><span class='line'>       <span class="n">delay</span><span class="p">(</span><span class="mi">250</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Servo]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/23/servo/"/>
    <updated>2013-05-23T23:49:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/23/servo</id>
    <content type="html"><![CDATA[<p>Servo myservo; <code>创建一个舵机对象 使用Servo类最多可以控制8个舵机</code></p>

<p>int pos = 0; <code>// 该变量用与存储舵机角度位置</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">myservo</span><span class="p">.</span><span class="n">attach</span><span class="p">(</span><span class="mi">9</span><span class="p">);</span>  <span class="c1">// 该舵机由arduino第九脚控制</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R语言和回归分析的模拟]]></title>
    <link href="http://woody1983.github.com/blog/2013/05/17/ryu-yan-he-hui-gui-fen-xi-de-mo-ni/"/>
    <updated>2013-05-17T15:35:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/05/17/ryu-yan-he-hui-gui-fen-xi-de-mo-ni</id>
    <content type="html"><![CDATA[<h3>导入数据</h3>

<p>employees &lt;- read.csv(&#8220;http://www.headfirstlabs.com/books/hfda/hfda_ch09_employees.csv&#8221;,header=TRUE)</p>

<ul>
<li>X id</li>
<li>received 加薪幅度</li>
<li>negotiated 是否提出加薪需求</li>
<li>gender 性别</li>
<li>year 加薪时间？</li>
</ul>


<!-- more -->


<h3>Create Hist</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received, breaks=50)</span></code></pre></td></tr></table></div></figure>


<p>Y轴 Frequency 是频数 此处为人数的意思
X轴 employees$received 加薪幅度
多数人的加薪幅度为5%左右</p>

<p>确认加薪幅度的标准差为多少</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sd(employees$received)
</span><span class='line'>#-- [1] 2.432138</span></code></pre></td></tr></table></div></figure>


<h3>汇总统计</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>summary(employees$received)
</span><span class='line'>#  Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
</span><span class='line'>#-1.800   4.600   5.500   6.028   6.700  25.900 </span></code></pre></td></tr></table></div></figure>


<h3>单独看一下2007年的加薪情况</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$year == 2007], breaks=50)
</span><span class='line'>hist(employees$received[employees$year == 2008], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h3>女性的加薪情况</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$gender == "F"], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h3>男性的加薪情况</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$gender == "M"], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h3>多角度去看</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hist(employees$received[employees$year == 2007 & 
</span><span class='line'>     employees$gender == "M"], breaks=50)
</span><span class='line'>hist(employees$received[employees$year == 2007 & 
</span><span class='line'>     employees$gender == "F" & employees$negotiated == "TRUE"], breaks=50)
</span><span class='line'>hist(employees$received[employees$year == 2007 & 
</span><span class='line'>     employees$gender == "F" & employees$negotiated == "FALSE"], breaks=50)</span></code></pre></td></tr></table></div></figure>


<h4>对是否提出过的加薪要求和没有提出要求的分别统计</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>summary(employees$received[employees$negotiated == TRUE])
</span><span class='line'>#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
</span><span class='line'>#-1.800   6.300   7.600   8.096   9.000  25.900 
</span><span class='line'>summary(employees$received[employees$negotiated == FALSE])
</span><span class='line'>#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
</span><span class='line'>#1.700   4.300   5.000   4.994   5.700   8.100 </span></code></pre></td></tr></table></div></figure>


<blockquote><p>很明显  提出加薪要求的人 得到的加薪幅度最大</p></blockquote>

<h2>预测部分</h2>

<p>比较 两个变量：要求加薪幅度和实际加薪幅度</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>employees &lt;- read.csv("http://www.headfirstlabs.com/books/hfda/hfda_ch10_employees.csv",header=TRUE)
</span><span class='line'>
</span><span class='line'>head(employees)
</span><span class='line'>plot(employees$requested[employees$negotiated == TRUE],
</span><span class='line'>     employees$received[employees$negotiated == TRUE])</span></code></pre></td></tr></table></div></figure>


<h3>相关系数</h3>

<p><code>[1] 0.6656481</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cor(employees$requested[employees$negotiated == TRUE],
</span><span class='line'>     employees$received[employees$negotiated == TRUE])</span></code></pre></td></tr></table></div></figure>


<h4>预测公式</h4>

<blockquote><p>Y轴实际加薪值received（y）= Y轴截距(a) + 斜率(b) x X轴要求加薪值requested(x)</p></blockquote>

<h3>创建一个线性模型 指出回归线的系数</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myLm &lt;- lm(received[negotiated == TRUE] ~ requested[negotiated == TRUE],data=employees)</span></code></pre></td></tr></table></div></figure>


<h3>回归线系数</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myLm$coefficients
</span><span class='line'>#                  (Intercept) requested[negotiated == TRUE] 
</span><span class='line'>#                   2.3121277                     0.7250664 </span></code></pre></td></tr></table></div></figure>


<p>截距 <code>2.3</code>     斜率<code>0.7</code></p>

<p>如果你要求加薪8% 用这个公式就是 y = 2.3+0.7<em>8 实际可能加薪7.9%
如果预期是5% ，y = 2.3+0.7</em>5 # 5.8% 则会超过预期</p>

<h2>有关合理误差</h2>

<p>!!! 小心外插法:用回归方程预测数据范围以外的数值成为外插法
内插法对数据范围内的点进行预测 正式回归法的本来目的。
千万要对模型假设保持戒心。</p>

<blockquote><p>观察他人的模型时，一定要想一想他们的假设有何道理，以及他们是否忘记了某种假设。不合适的假设会使模型完全失效&#8212;这还算是最好的结果；最坏的结果是具有危险的欺骗性。</p></blockquote>

<p>限定预测范围 避免外插法
 x的范围在 <code>0%到22%</code></p>

<h3>添加一条回归线  有lm运算得出  在回归线上放的人得到的比预期的多  下方同理</h3>

<p><code>abline(myLm)</code></p>

<p>任何点在距离回归线的距离叫做“残差”    预测总是会与机会误差同在  所以指出误差所在是必要的。
指出误差可以让分析方：<code>1 切实的预期 2 了解更多 3 更好的决策</code></p>

<h4>找出均方根误差</h4>

<p>summary(myLm)<code>#Summary函数里的可以显示Residual standard error: 2.298 on 998 degrees of freedom</code>
也可以使用函数 sigma直接显示
summary(myLm)$sigma <code>#[1] 2.297743</code></p>

<p>结果 加减2.3% 把机会误差的范围也计算进去</p>

<h3>分割的根本目的是管理误差</h3>

<p>以要求加薪10%为标准  划分两个结果 因为10%以下的误差最小
 两个独立的模型  两条回归线
 优秀的回归分析兼具解释功能和预测功能</p>

<h3>创建新模型</h3>

<h2>激进谈判者专用</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myLmBig &lt;- lm(received[negotiated == TRUE & requested &gt; 10] ~ requested[negotiated == TRUE & requested &gt; 10],
</span><span class='line'>              data=employees)
</span><span class='line'>#胆小谈判者专用
</span><span class='line'>myLmSmall &lt;- lm(received[negotiated == TRUE & requested &lt;= 10] ~ requested[negotiated == TRUE & requested &lt;= 10],
</span><span class='line'>              data=employees)</span></code></pre></td></tr></table></div></figure>


<h3>汇总分析两个新模型</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>summary(myLmSmall)$coefficients
</span><span class='line'>#                                                 Estimate Std. Error   t value      Pr(&gt;|t|)
</span><span class='line'>#(Intercept)                                     0.7933468 0.22472009  3.530378  4.378156e-04
</span><span class='line'>#requested[negotiated == TRUE & requested &lt;= 10] 0.9424946 0.03151835 29.903041 6.588020e-134
</span><span class='line'>summary(myLmSmall)$sigma #[1] 1.374526
</span><span class='line'>
</span><span class='line'>#--/ 方根误差更小 1.4左右
</span><span class='line'>
</span><span class='line'>summary(myLmBig)$coefficients
</span><span class='line'>#                                               Estimate Std. Error  t value     Pr(&gt;|t|)
</span><span class='line'>#(Intercept)                                    7.813403  1.8760371 4.164845 4.997597e-05
</span><span class='line'>#requested[negotiated == TRUE & requested &gt; 10] 0.302609  0.1420151 2.130824 3.457618e-02
</span><span class='line'>summary(myLmBig)$sigma #[1] 4.544424
</span><span class='line'>#--/ 方根误差在4.5</span></code></pre></td></tr></table></div></figure>


<p>Summary</p>

<h2>如果要求小于或等于10%的时候  Y = 0.8 + 0.9X  ±1.4%</h2>

<h2>如果要求大于10%的时候 Y = 7.8 + 0.3X ±4.5%</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R Note]]></title>
    <link href="http://woody1983.github.com/blog/2013/04/16/r-note/"/>
    <updated>2013-04-16T14:21:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/04/16/r-note</id>
    <content type="html"><![CDATA[<h3>R 的安装 OS是Centos5.5</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> 1011  wget http://cran.r-project.org/src/base/R-3/R-3.0.0.tar.gz
</span><span class='line'> 1012  tar zxvf R-3.0.0.tar.gz
</span><span class='line'> 1013  ls -lah
</span><span class='line'> 1014  cd R-3.0.0
</span><span class='line'> 1015  yum install gcc-gfortran
</span><span class='line'> 1016  yum install gcc gcc-c++
</span><span class='line'> 1017  yum install readline-devel
</span><span class='line'> 1018  yum install libXt-devel
</span><span class='line'> 1019  ./configure
</span><span class='line'> 1020  make
</span><span class='line'> 1021  make install
</span><span class='line'> 1022  R</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>RのSyntax</h3>

<p><code>+ "" *</code>典型的四则运算</p>

<p><code>Logical Values</code>
Some expressions return a <code>Logical Values</code> : <code>TRUE</code> or <code>FALSE</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; 2 + 25
</span><span class='line'>[1] FALSE</span></code></pre></td></tr></table></div></figure>


<p>T and F are shorthand for TRUE FALSE</p>

<p> 给Variables赋值用 <code>&lt;-</code>
you can re-assign any value to a variable at any time, assigning the TRUE logical value to &#8216;X&#8217;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; x &lt;- 42
</span><span class='line'>&gt; x/2
</span><span class='line'>[1] 21
</span><span class='line'>&gt; x &lt;- T
</span><span class='line'>&gt; x
</span><span class='line'>[1] TRUE
</span><span class='line'>&gt; x &lt;- "R"
</span><span class='line'>&gt; x
</span><span class='line'>[1] "R"</span></code></pre></td></tr></table></div></figure>


<h3>RのFunction</h3>

<p> 直接调用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sum(1,2,3)
</span><span class='line'>[1] 6
</span><span class='line'>&gt; sqrt(16)
</span><span class='line'>[1] 4</span></code></pre></td></tr></table></div></figure>


<p>有些Function有参数<code>names</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; rep("Yo",times=3)
</span><span class='line'>[1] "Yo" "Yo" "Yo"</span></code></pre></td></tr></table></div></figure>


<h3>RのHelp</h3>

<p><code>help(sum)</code> &amp; <code>example(sum)</code></p>

<h3>RのFiles</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; list.files()
</span><span class='line'>[1] "sum.R"
</span><span class='line'>&gt; source("sum.R")
</span><span class='line'>&gt; x
</span><span class='line'>[1] 6</span></code></pre></td></tr></table></div></figure>


<h3>RのVectors</h3>

<p>中文翻译:<code>载体</code>或 <code>向量</code> R的需要业务逻辑都依靠向量来完成。
A vector&#8217;s values can be numbers, strings, logical values, or any other type, as long as they&#8217;re all the same type!
The function <code>c</code> creates a new vector by combining a list of values.</p>

<h3>c is shorthand Combine</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; c(4,5,6)
</span><span class='line'>[1] 4 5 6
</span><span class='line'>&gt; x &lt;- c(4,5,6,7,8,9)
</span><span class='line'>&gt; x
</span><span class='line'>[1] 4 5 6 7 8 9</span></code></pre></td></tr></table></div></figure>


<p>不同Type的value不能combine成一个Vector 如果硬来 只能转换成一个characters的Vector</p>

<h3>RのSequence Vectors</h3>

<p>如果你需要一个数字序列的Vectors 用 <code>__:__</code>来创建</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; 5:9
</span><span class='line'>[1] 5 6 7 8 9
</span><span class='line'>&gt; 9:5
</span><span class='line'>[1] 9 8 7 6 5</span></code></pre></td></tr></table></div></figure>


<p>A more Versatile way to make seq is to call the <code>seq</code> fun. Let&#8217;s do the same thing with seqs:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; seq(1,9)
</span><span class='line'>[1] 1 2 3 4 5 6 7 8 9</span></code></pre></td></tr></table></div></figure>


<p>修改步长</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; seq(1,9,0.5)
</span><span class='line'> [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0</span></code></pre></td></tr></table></div></figure>


<h3>RのVector Access</h3>

<p>用一些Strings创建一个Vector 并存在一个Variable里。
we&#8217;re going to create a new vector with some strings in it,and store it in the Sentence variable.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence &lt;- c('walk','the','plank')
</span><span class='line'>&gt; sentence[3]
</span><span class='line'>[1] "plank"</span></code></pre></td></tr></table></div></figure>


<p>重写第三个</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[3] &lt;- 'dog'
</span><span class='line'>&gt; sentence[3]
</span><span class='line'>[1] "dog"</span></code></pre></td></tr></table></div></figure>


<p>追加第四个</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[4] &lt;- 'to'
</span><span class='line'>&gt; sentence
</span><span class='line'>[1] "walk" "the"  "dog"  "to"</span></code></pre></td></tr></table></div></figure>


<p>用Vector访问Vector</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[c(1,3)]
</span><span class='line'>[1] "walk" "dog"</span></code></pre></td></tr></table></div></figure>


<p>或者一个ranges</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[2:4]
</span><span class='line'>[1] "the" "dog" "to"</span></code></pre></td></tr></table></div></figure>


<p>追加一个Vector到指定的范围</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sentence[5:7] &lt;- c('the','poop','deck')
</span><span class='line'>&gt; sentence
</span><span class='line'>[1] "walk" "the"  "dog"  "to"   "the"  "poop" "deck"</span></code></pre></td></tr></table></div></figure>


<h3>RのVector Names</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; ranks &lt;- 1:3
</span><span class='line'>&gt; names(ranks) &lt;- c("first","second","third")
</span><span class='line'>&gt; ranks
</span><span class='line'> first second  third
</span><span class='line'>     1      2      3</span></code></pre></td></tr></table></div></figure>


<h3>RのPlotting One Vector</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; vesselsSunk &lt;- c(4,5,1)
</span><span class='line'>&gt; names(vesselsSunk) &lt;- c("England","French","Norway")
</span><span class='line'>&gt; barplot(vesselsSunk)
</span><span class='line'>
</span><span class='line'>&gt; barplot(1:00) 绘制一个从1到100的柱状图。</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R1.jpg"></p>

<h3>RのVector Math</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; a &lt;- c(1,2,3)
</span><span class='line'>&gt; b &lt;- c(4,5,6)
</span><span class='line'>&gt; a+1
</span><span class='line'>[1] 2 3 4
</span><span class='line'>&gt; a/2
</span><span class='line'>[1] 0.5 1.0 1.5
</span><span class='line'>&gt; a+2
</span><span class='line'>[1] 3 4 5
</span><span class='line'>&gt; a+b
</span><span class='line'>[1] 5 7 9
</span><span class='line'>&gt; a-b
</span><span class='line'>[1] -3 -3 -3
</span><span class='line'>
</span><span class='line'>&gt; a == c(1,99,3)
</span><span class='line'>[1]  TRUE FALSE  TRUE
</span><span class='line'>
</span><span class='line'>&gt; sin(a)
</span><span class='line'>[1] 0.8414710 0.9092974 0.1411200
</span><span class='line'>&gt; sqrt(a)
</span><span class='line'>[1] 1.000000 1.414214 1.732051
</span></code></pre></td></tr></table></div></figure>


<h3>RのScatter Plots</h3>

<p>散点图 The plot function takes two vectors, one for X values and one for Y values and draws a graph of them.</p>

<p>绘制数字和正弦sin之间的关系</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; x &lt;- seq(1,20, 0.1)
</span><span class='line'>&gt; y &lt;- sin(x)
</span><span class='line'>&gt; plot (x,y)
</span><span class='line'>&gt; q();
</span><span class='line'>Save workspace image? [y/n/c]: y
</span><span class='line'>
</span><span class='line'>&gt; values &lt;- -10:10
</span><span class='line'>&gt; absolutes &lt;- abs(values)
</span><span class='line'>&gt; plot(values,absolutes)
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R2.jpg"></p>

<p><img src="http://woody1983.github.com/images/img/R3.jpg"></p>

<h3>RのNA值</h3>

<p>当数据中的某个值不可用时 可用NA代替</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; a &lt;- c(1,3,NA,7,9)
</span><span class='line'>&gt; sum(a)
</span><span class='line'>[1] NA
</span><span class='line'>&gt; sum(a, na.rm=T)
</span><span class='line'>[1] 20</span></code></pre></td></tr></table></div></figure>


<h3>RのMatrices</h3>

<p>Matrix是一种二维数组。
A matrix is just a fancy term for a 2-dimensional array.
Let&#8217;s make a matrix 3 rows high by 4 columns wide,with all its fields set to 0.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; matrix(0,3,4)
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    0    0    0    0
</span><span class='line'>[2,]    0    0    0    0
</span><span class='line'>[3,]    0    0    0    0
</span><span class='line'>&gt; a &lt;- 1:12
</span><span class='line'>&gt; a
</span><span class='line'> [1]  1  2  3  4  5  6  7  8  9 10 11 12
</span><span class='line'>&gt; matrix(a,3,4)
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    1    4    7   10
</span><span class='line'>[2,]    2    5    8   11
</span><span class='line'>[3,]    3    6    9   12</span></code></pre></td></tr></table></div></figure>


<p>或者另一种方法 用<code>dim</code>函数</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; plank &lt;- 1:8
</span><span class='line'>&gt; dim(plank) &lt;- c(2,4)
</span><span class='line'>&gt; plank
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    1    3    5    7
</span><span class='line'>[2,]    2    4    6    8</span></code></pre></td></tr></table></div></figure>


<p>这就是Matrix!!!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; matrix(25,5,5)
</span><span class='line'>     [,1] [,2] [,3] [,4] [,5]
</span><span class='line'>[1,]   25   25   25   25   25
</span><span class='line'>[2,]   25   25   25   25   25
</span><span class='line'>[3,]   25   25   25   25   25
</span><span class='line'>[4,]   25   25   25   25   25
</span><span class='line'>[5,]   25   25   25   25   25
</span><span class='line'>&gt; matrix(1:25,5,5)
</span><span class='line'>     [,1] [,2] [,3] [,4] [,5]
</span><span class='line'>[1,]    1    6   11   16   21
</span><span class='line'>[2,]    2    7   12   17   22
</span><span class='line'>[3,]    3    8   13   18   23
</span><span class='line'>[4,]    4    9   14   19   24
</span><span class='line'>[5,]    5   10   15   20   25</span></code></pre></td></tr></table></div></figure>


<h3>RのMatrices Access</h3>

<p>seq真是好东西!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; plank
</span><span class='line'>     [,1] [,2] [,3] [,4]
</span><span class='line'>[1,]    1    3    5    7
</span><span class='line'>[2,]    2    4    6    8
</span><span class='line'>&gt; plank[2,3]
</span><span class='line'>[1] 6
</span><span class='line'>&gt; plank[2,]
</span><span class='line'>[1] 2 4 6 8
</span><span class='line'>&gt; plank[,4]
</span><span class='line'>[1] 7 8
</span><span class='line'>&gt; plank[,2:4]
</span><span class='line'>     [,1] [,2] [,3]
</span><span class='line'>[1,]    3    5    7
</span><span class='line'>[2,]    4    6    8</span></code></pre></td></tr></table></div></figure>


<h3>RのMatrices  Plotting</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; elevation &lt;- matrix(1,10,10)
</span><span class='line'>&gt; elevation[4,6] &lt;- 0
</span><span class='line'>&gt; coutour(elevation) #等高线地图
</span><span class='line'>&gt; persp(elevation, expand=0.2) #3D</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R4.jpg"></p>

<h3>Rの Summary Statistics</h3>

<p>统计数字摘要 Part of a statistician&#8217;s job is to explain their data.</p>

<h3>Mean  平均</h3>

<p><code>mean</code>是求平均的函数  配合<code>abline</code>可以加平均线</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; limbs &lt;- c(3,4,5,6,7,8,9)
</span><span class='line'>&gt; mean(limbs)
</span><span class='line'>[1] 6
</span><span class='line'>&gt; sum(limbs)
</span><span class='line'>[1] 42
</span><span class='line'>&gt; barplot(limbs)
</span><span class='line'>&gt; abline(h=mean(limbs))
</span><span class='line'>&gt; q()</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R5.jpg"></p>

<h3>Median 中位数</h3>

<p>Attention: 先plot后标中位线</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; limbs &lt;- c(4, 3, 4, 3, 2, 4, 4, 4)
</span><span class='line'>&gt; mean(limbs)
</span><span class='line'>[1] 3.5
</span><span class='line'>&gt; median(limbs)
</span><span class='line'>[1] 4
</span><span class='line'>&gt; abline(h = median(limbs))
</span><span class='line'>Error in int_abline(a = a, b = b, h = h, v = v, untf = untf, ...) :
</span><span class='line'>  plot.new has not been called yet
</span><span class='line'>&gt; barplot(limbs)
</span><span class='line'>&gt; abline(h = median(limbs))
</span></code></pre></td></tr></table></div></figure>


<h3>Standard Deviation</h3>

<p>标准偏差
<code>abline</code>应该是加标记线的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; pounds &lt;- c(4500,5000,35000, 40000, 35000, 45000, 10000, 15000)
</span><span class='line'>&gt; devication &lt;- sd(pounds)
</span><span class='line'>&gt; meanValue &lt;- mean(pounds)
</span><span class='line'>&gt; devication
</span><span class='line'>[1] 16718.12
</span><span class='line'>&gt; barplot(pounds)
</span><span class='line'>&gt; abline(h = meanValue)
</span><span class='line'>&gt; abline(h = devication + meanValue)
</span><span class='line'>&gt; abline(h = devication - meanValue)
</span><span class='line'>&gt; abline(h = meanValue - devication)
</span><span class='line'>
</span><span class='line'>&gt; devication - meanValue
</span><span class='line'>[1] -6969.38
</span><span class='line'>&gt; devication + meanValue
</span><span class='line'>[1] 40405.62
</span><span class='line'>&gt; meanValue - devication
</span><span class='line'>[1] 6969.38
</span><span class='line'>&gt; meanValue
</span><span class='line'>[1] 23687.5</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/R6.jpg"></p>

<h3>RのFactors</h3>

<p>跟踪分类的值类型</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; chests &lt;- c('gold','silver','gems','gold','gems')
</span><span class='line'>&gt; chests
</span><span class='line'>[1] "gold"   "silver" "gems"   "gold"   "gems"
</span><span class='line'>&gt; types &lt;- factor(chests)
</span><span class='line'>&gt; types
</span><span class='line'>[1] gold   silver gems   gold   gems
</span><span class='line'>Levels: gems gold silver
</span><span class='line'>
</span><span class='line'>&gt; as.integer(types)
</span><span class='line'>[1] 2 3 1 2 1
</span><span class='line'>&gt; levels(types)
</span><span class='line'>[1] "gems"   "gold"   "silver"</span></code></pre></td></tr></table></div></figure>


<h3>RのPlot with Factors</h3>

<p>绘制散点图和标签</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; weights &lt;- c(300,200,100,250,150)
</span><span class='line'>&gt; prices &lt;- c(9000,5000,12000,7500,18000)
</span><span class='line'>&gt; plot(weights,prices)
</span><span class='line'>
</span><span class='line'>&gt; legend("topright", levels(types),pch = 1:length(levels(types)))</span></code></pre></td></tr></table></div></figure>


<p>直接一点的写法:
<code>&gt; legend("topright", c("gems","gold","silver"),pch = 1:3)</code></p>

<h3>RのData Frames</h3>

<p>Our vectors with treasure chest data are perfect candidates for conversion to a data frame.<code>把Data转换成一个Data Frames</code></p>

<p><code>&gt; treasure &lt;- data.frame(weights, prices, types)</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; treasure
</span><span class='line'>  weights prices  types
</span><span class='line'>1     300   9000   gold
</span><span class='line'>2     200   5000 silver
</span><span class='line'>3     100  12000   gems
</span><span class='line'>4     250   7500   gold
</span><span class='line'>5     150  18000   gems</span></code></pre></td></tr></table></div></figure>


<h3>RのData Frames Access</h3>

<h4>用双括号 [[]]</h4>

<p>直接显示一列数据 直接使用列名也可以 记得加引号</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; treasure[[2]]
</span><span class='line'>[1]  9000  5000 12000  7500 18000
</span><span class='line'>&gt; treasure[[weights]]
</span><span class='line'>Error in .subset2(x, i, exact = exact) : no such index at level 1
</span><span class='line'>&gt; treasure[["weights"]]
</span><span class='line'>[1] 300 200 100 250 150</span></code></pre></td></tr></table></div></figure>


<p>Typing all those brackets can get tedious, so there&#8217;s also a shorthand notation: the data frame name, a dollar sign, and the column name (without quotes). Try using it to</p>

<p>get the <code>prices</code> column:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; treasure$types
</span><span class='line'>[1] gold   silver gems   gold   gems
</span><span class='line'>Levels: gems gold silver</span></code></pre></td></tr></table></div></figure>


<h3>RのLoading Data Frames</h3>

<p>使用<code>read.table</code>和<code>read.csv</code>读取本地文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; read.table("infantry.txt", sep="\t")
</span><span class='line'>                     V1
</span><span class='line'>1 Port         Infantry
</span><span class='line'>2      Porto Bello  700
</span><span class='line'>3      Cartagena    500
</span><span class='line'>4     Panama City  1500
</span><span class='line'>5     Havana       2000
</span><span class='line'>&gt; read.csv("targets.csv")
</span><span class='line'>         Port Population Worth
</span><span class='line'>1   Cartagena      35000 10000
</span><span class='line'>2 Porto Bello      49000 15000
</span><span class='line'>3      Havana     140000 50000
</span><span class='line'>4 Panama City     105000 35000</span></code></pre></td></tr></table></div></figure>


<p>银行<code>header</code>使用<code>read.table("infantry.txt", sep="\t", header=TRUE)</code></p>

<h3>RのMerging Data Frames</h3>

<p>第一步骤导入csv文件和txt文件 在TryR的教程基础上我添加了<code>data.frame</code>函数进行Data Frame化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; targets &lt;- data.frame(read.csv("targets.csv"))
</span><span class='line'>&gt; targets
</span><span class='line'>         Port Population Worth
</span><span class='line'>1   Cartagena      35000 10000
</span><span class='line'>2 Porto Bello      49000 15000
</span><span class='line'>3      Havana     140000 50000
</span><span class='line'>4 Panama City     105000 35000
</span><span class='line'>
</span><span class='line'>&gt; infantry &lt;- data.frame(read.table("infantry.txt", sep="\t", header=TRUE))
</span><span class='line'>&gt; infantry
</span><span class='line'>         Port Infantry
</span><span class='line'>1 Porto Bello      700
</span><span class='line'>2   Cartagena      500
</span><span class='line'>3 Panama City     1500
</span><span class='line'>4      Havana     2000
</span><span class='line'>&gt; infantry[[1]]
</span><span class='line'>[1] Porto Bello Cartagena   Panama City Havana
</span><span class='line'>Levels: Cartagena Havana Panama City Porto Bello
</span><span class='line'>&gt; infantry[[2]]
</span><span class='line'>[1]  700  500 1500 2000</span></code></pre></td></tr></table></div></figure>


<p>第二步开始Merge</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; merge(x = targets, y = infantry)
</span><span class='line'>         Port Population Worth Infantry
</span><span class='line'>1   Cartagena      35000 10000      500
</span><span class='line'>2      Havana     140000 50000     2000
</span><span class='line'>3 Panama City     105000 35000     1500
</span><span class='line'>4 Porto Bello      49000 15000      700</span></code></pre></td></tr></table></div></figure>


<p>和教程上的出入在于制作txt文件时 <code>\t</code>部分被替换错误 导致数据格式</p>

<p><img src="http://woody1983.github.com/images/img/R7.jpg"></p>

<h3>Real-World Data</h3>

<p>后记，R非常适合做统计。TryR的教程里的这一章节是用国家的GDP和盗版率做线性回归(暂时不知道啥意思)
关于盗版率的数据文件<code>piracy.csv</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Country,Piracy
</span><span class='line'>Australia,23
</span><span class='line'>Bangladesh,90
</span><span class='line'>Brunei,67
</span><span class='line'>China,77</span></code></pre></td></tr></table></div></figure>


<p><code>gdp.txt</code>文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Rank    Country        GDP
</span><span class='line'>1       Liechtenstein  141100
</span><span class='line'>2       Qatar          104300
</span><span class='line'>3       Luxembourg     81100
</span><span class='line'>4       Bermuda        69900</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; piracy &lt;- data.frame(read.csv("piracy.csv"))
</span><span class='line'>&gt; gdp &lt;- data.frame(read.table("gdp.txt", sep="\t", header=TRUE))
</span><span class='line'>&gt; piracy
</span><span class='line'>     Country Piracy
</span><span class='line'>1  Australia     23
</span><span class='line'>2 Bangladesh     90
</span><span class='line'>3     Brunei     67
</span><span class='line'>4      China     77
</span><span class='line'>&gt; gdp
</span><span class='line'>  Rank       Country    GDP
</span><span class='line'>1    1 Liechtenstein 141100
</span><span class='line'>2    2         Qatar 104300
</span><span class='line'>3    3    Luxembourg  81100
</span><span class='line'>4    4       Bermuda  69900</span></code></pre></td></tr></table></div></figure>


<p>可以先做一个散点图 <code>plot(countries$GDP,countries$Piracy)</code></p>

<p>补充:线性回归
<code>线性回归是利用数理统计中的回归分析，来确定两种或两种以上变量间相互依赖的定量关系的一种统计分析方法之一，运用十分广泛。分析按照自变量和因变量之间的关系类型，可分为线性回归分析和非线性回归分析.</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lm                    package:stats                    R Documentation
</span><span class='line'>
</span><span class='line'>Fitting Linear Models
</span><span class='line'>
</span><span class='line'>Description:
</span><span class='line'>
</span><span class='line'>     ‘lm’ is used to fit linear models.  It can be used to carry out
</span><span class='line'>     regression, single stratum analysis of variance and analysis of
</span><span class='line'>     covariance (although ‘aov’ may provide a more convenient interface
</span><span class='line'>     for these).
</span><span class='line'>We have more countries represented in our GDP data than we do our piracy rate data. If we know a country's GDP, can we use that to estimate its piracy rate?</span></code></pre></td></tr></table></div></figure>


<p>Try calculating the linear model for piracy rate by GDP, and assign it to the line variable:</p>

<p>RedoComplete
<code>&gt; line &lt;- lm(countries$Piracy ~ countries$GDP)</code></p>

<p>在图上标记出来
<code>&gt; abline(line)</code></p>

<h3>新图形包的安装</h3>

<p><code>install.packages("ggplot2")</code> and 查询一个new packages的使用说明<code>&gt; help(package = "ggplot2")</code></p>

<p>一个Demo</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; weights &lt;- c(300, 200, 100, 250, 150)
</span><span class='line'>&gt; prices &lt;- c(9000, 5000, 12000, 7500, 18000)
</span><span class='line'>&gt; chests &lt;- c('gold', 'silver', 'gems', 'gold', 'gems')
</span><span class='line'>&gt; types &lt;- factor(chests)
</span><span class='line'>
</span><span class='line'>&gt; qplot(weights, prices, color = types)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[吴秀波谈忧郁]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/25/wu-xiu-bo-tan-you-yu/"/>
    <updated>2013-03-25T15:01:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/25/wu-xiu-bo-tan-you-yu</id>
    <content type="html"><![CDATA[<p>吴秀波：我觉得人生除了在得意忘形时，其实无处不是困境，所谓困境就是因为不满，所以带来沮丧的感受。就拿影片中Frank这个男人做个解释，他就像一棵“树”，你看树的生存环境是“不能动”。所谓“不能动”，是指他在家庭中的位置，他生活的选择、对妻女的爱、对人性的善意不能动。那么，随之而来你会看到他面临了所有的困境，工作离他而去，妻子嫁给别人，甚至连孩子的抚养权都没有了，隐约而来以为的“幸福”也要离他而去。这些接踵而来的变故，就像树的叶子、花朵、果实一个个都掉了，这就是困境。如果这棵树就此死掉了，就是绝望。<code>如果这棵树在明年春天还能开花，到了秋天依旧结果，那在整个冬天他就叫做忧郁。在所有东西离你而去，生命中所有的失去渐渐开始，你依然在静静带着感恩的心境来接受的时候，我以为这是唯一能被人称为“忧郁”气质的东西</code>。</p>

<h3>吴秀波给我一种很睿智的感觉 网上也经常看到他的<code>语录</code> 读了几遍 感觉禅意十足 而且有些东西在我看来 实在是需要岁月的沉淀才能酝酿不一样的人生。</h3>

<p>时光网：Frank是一个稀有好男人，用文佳佳话说“好的都有点贱”，你怎么理解这个角色？</p>

<p>吴秀波：可能现今的社会状态下，一个男人不占女人便宜就叫好了。所以很多人看Frank这个角色，真有这样的男的吗？我不知道您是哪年生人，在我父母那个年代，这样的人比比皆是，也许现在还有这样的人。</p>

<!-- more -->


<p>“家庭”对吴秀波来说太重要了，他认为“如果你自己都不能去正确的领悟生活，你拿什么作为跟儿子的谈资？如果你自己都没有稳定的事业，你怎么来养活家人？如果你自己都不能保证不犯法，你怎么去报效你的父母？作为一个男人来讲，要对自己负责。”因此，脱下“明星光环”的吴秀波，就是个不折不扣的“家居男”。</p>

<p>　　早在成名之前，不停在歌厅与餐馆之间来回折腾的吴秀波便结识了现在的爱妻，当初他们是“姐弟恋”，30多岁时结婚，在吴秀波整个家底只剩下几千块的时候，妻子为他生下了两个可爱的孩子。正是因为妻儿让吴秀波放下了愤青架子，努力在影视圈打拼，为他们的幸福而不断努力。美满的家庭生活，让吴秀波本人都充满了温馨的“家居味”，丝毫没有“性格派”的硬冷与装酷，私下只给人平和亲切之感。</p>

<p>　　与此同时，吴秀波再红再风光，都竭力保护家人的信息不被公开，从未想过把老婆孩子作为娱乐话题被媒体曝光，也没有大秀恩爱，平淡低调才是吴秀波维护幸福的秘诀。所以每次看完采访提纲，他都会与媒体沟通说：“我非常真诚地表示，感情、家人、绯闻问题真的与工作无关，但我可以接受跟工作有关的采访。”所以，吴秀波只会对外界强调：“你问我爱我儿子和妻子吗，我的回答是爱。你问我如何处理家庭和工作之间的关系，我说在工作中想着家里，在家里想着工作。”就是如此“倔强”，让吴秀波至今都能将家人捍卫得滴水不漏，他在被问及私生活方面的表现越是“圆滑”和“难搞”，便越显示他对家的深厚感情。如此“家居男子”，不作秀、不喧哗，才是最有人情味儿的。</p>

<h3>关于明星</h3>

<p>马龙·白兰度最后也是一具枯骨，梦露再漂亮也就是一张照片。这就是一个过程，给你幸福你就要承受痛苦，同意吗？就好像你看一窝蚂蚁，从小到大看过无数蚂蚁，你记得哪只蚂蚁是你见过的吗？没有，都是蚂蚁，都是凡人。</p>

<h3>关于爱情</h3>

<p>被翻译成英文的:I fall in love with you at this age,it&#8217;s not because you have car and house.It&#8217;s only because you wore a shirt I like on that sunny day.
在这个年纪爱你，不因为你有车有房，只是那天阳光很好，你穿了一件我爱的衬衫。</p>

<p>原版<code>“那时候爱上一个人不是因为你有车有房，而是下午阳光很好，你穿了一件白衬衫。”</code></p>

<h3>关于信仰</h3>

<p>我觉得任何的信仰的源泉都来源于爱。爱是什么？爱只存在于第一人称，如我爱什么，我爱你，我爱他，我爱谁，这就是爱。你要说我爱你，你爱我吗？这不是爱，这叫换，两码事。所以我觉得所有的信仰源于爱，一旦爱不能成立或者不能释放，我就需要新的信仰来完善这个世界。</p>

<p>人在正常情况下，都要保持平静和愉悦，学习也是随时随地的，这样人会变得谦卑。</p>

<p>只要拥有完善的精神世界就好，别人骂我赞我，我都感恩，也都算是我的修行。</p>

<p>今天的天亮不亮，取决于你的眼睛是不是特别需要光。 ————吴秀波</p>

<h2>回头再总结吧 总之是个很值得学习的男人。</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monica et Vincent]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/18/monica-et-vincent/"/>
    <updated>2013-03-18T17:34:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/18/monica-et-vincent</id>
    <content type="html"><![CDATA[<p><code>第一次法文作业 漏洞百出 不忍直视。</code></p>

<p><img src="http://woody1983.github.com/images/img/monica.jpg"></p>

<h3>Ils s&#8217;appellent Monica et Vincent.</h3>

<h3>Ils sont acteur et lls travaillent dans le cinéma.</h3>

<h3>Ils habitent à Paris et ils ont deux enfants.</h3>

<h3>Ils aiment le musique, le cinéma et l&#8217;Opéra.</h3>

<p><img src="http://woody1983.github.com/images/img/monica1.jpg"></p>

<h3>Monica est italienne et elle parle très bien italien, anglais et un peu français.</h3>

<h3>Elle a les cheveux bruns et raides et elle est très belle.</h3>

<p><code>brun 在这里修饰头发 故不用阴性</code> &amp; <code>语言不使用阴性</code></p>

<p><img src="http://woody1983.github.com/images/img/vincent.jpg"></p>

<h3>Vincent est français et il parle très bien français anglais et un peu italien.</h3>

<h3>Vincent est grand et il a les cheveux bruns et crépus.</h3>

<h3>Ils sont très gentille et ils sont acteur de valeur.</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Note:Class init alloc]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/08/objective-c-note-class-init-alloc/"/>
    <updated>2013-03-08T16:58:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/08/objective-c-note-class-init-alloc</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">BNRItem</span> : <span class="nc">NSObject</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">itemName</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">serialNumber</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">valueInDollars</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSDate</span> <span class="o">*</span><span class="n">dateCreated</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>对象会直接保存非指针类型的实例变量，BNRItem 对象并没有直接保存其他对象，而只拥有三个指针，分别指向另外三个对象。这些指针都是BNRItem的实例变量。</h3>

<h3>也就是说 BNRItem通过一个itemName的指针 指向一个NSString对象。</h3>

<!-- more -->


<p><img src="http://woody1983.github.com/images/img/nsobject.jpg"></p>

<h1>实例变量的存取</h1>

<h2>存方法</h2>

<h3>修改实例的变量，指向另一个字符串，该BNRItem对象会将新的NSString对象命名为itemName</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setItemName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newItemName</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">itemName</span> <span class="o">=</span> <span class="n">newItemName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>取方法</h2>

<h3>返回BNRItem名为itemName的实例变量 一个指向NSString对象的指针</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">itemName</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">itemName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>调用</h2>

<p>对BNRItem对象使用setItemName和itemName方法即可实现设置和读取该变量的动作。</p>

<h2>例子</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//声明</span>
</span><span class='line'><span class="n">BNRItem</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="p">[[</span><span class="n">BNRItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">//设置</span>
</span><span class='line'><span class="p">[</span><span class="n">p</span> <span class="nl">setItemName:</span><span class="s">@&quot;Red Sofa&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">//读取</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="p">[</span><span class="n">p</span> <span class="n">itemName</span><span class="p">];</span>
</span><span class='line'><span class="c1">//输出</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>但在Objective-C中，取方法的方法名就是实例变量的变量名。</p></blockquote>

<h2>覆盖某种方法 直接定义就可以了</h2>

<h2>关于实例说明</h2>

<p>Description是NSObject类的方法，是一个介绍该类的方法。因为这个类已经在父类NSObject中声明过了，因此只要在定义文件中重新覆盖即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">description</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">descriptionString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFormat:</span><span class="s">@&quot;%@ (%@): Worth $%d, recorded on %@&quot;</span><span class="p">,</span>
</span><span class='line'>                                                   <span class="n">itemName</span><span class="p">,</span><span class="n">serialNumber</span><span class="p">,</span><span class="n">valueInDollars</span><span class="p">,</span><span class="n">dateCreated</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">descriptionString</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span><span class="err">向某个</span><span class="n">BNRItem</span><span class="err">实例发送</span><span class="n">description</span><span class="err">消息就会得到描述该实例的</span><span class="n">NSString</span><span class="err">对象，一般情况下格式化说明</span><span class="o">%</span><span class="err">@</span> <span class="err">程序就先调用实参的</span><span class="n">description</span><span class="err">方法。</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span><span class="n">p</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>alloc 向某个类发送这个信息 是创建该类的实例并得到指向新实例的指针</li>
<li>init 为实例变量设置初始值 编写更复杂的类时 需要创建更多的初始化方法 类似init 但会带参数</li>
</ul>


<h2>原先的代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt; </span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">BNRItem</span> : <span class="nc">NSObject</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">itemName</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">serialNumber</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">valueInDollars</span><span class="p">;</span>
</span><span class='line'><span class="n">NSDate</span> <span class="o">*</span><span class="n">dateCreated</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setItemName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">str</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">itemName</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setSerialNumber:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">str</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">serialNumber</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setValueInDollars:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">i</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nf">valueInDollars</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSDate</span> <span class="o">*</span><span class="p">)</span><span class="nf">dateCreated</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>要新增的方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithItemName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">name</span>
</span><span class='line'><span class="nf">valueInDollars:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">value</span>
</span><span class='line'><span class="nf">serialNumber:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">sNumber</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>这些参数都有类型和参数名。声明参数时，要先写标签，然后写类型（写在圆括号里），
最后写参数名。以initWithItemName:valueInDollars:serialNumber:为例， 和
initWithItemName:标签对应的参数是指向NSString对象的指针。在该方法的程序段中，
可以用name来引用该指针所指向的NSString对象。</p></blockquote>

<p>这个方法返回的是一个id类型，OC中ID可以指向任意对象的指针。</p>

<h1>实现指定初始化方法</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@implementation</span> <span class="nc">BNRItem</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithItemName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">name</span>
</span><span class='line'><span class="nf">valueInDollars:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">value</span>
</span><span class='line'><span class="nf">serialNumber:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">sNumber</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">// 调用父类的指定初始化方法</span>
</span><span class='line'>  <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// 为实例变量设定初始值</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="nl">setItemName:</span><span class="n">name</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="nl">setSerialNumber:</span><span class="n">sNumber</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="nl">setValueInDollars:</span><span class="n">value</span><span class="p">];</span>
</span><span class='line'>  <span class="n">dateCreated</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSDate</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// 返回初始化后的对象的地址</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>self</h2>

<p><code>self</code>存在于方法中，是一个隐式（implicit）局部变量。编写方法时不需要声明self，并且程序会自动为self赋值，通常情况下，self会用来向对象自己发送消息。</p>

<blockquote><p>初始化方法的最后一行代码必须返回初始化后的对象。</p></blockquote>

<h2>Super</h2>

<p>覆盖某个类的某个方法时 需要保留该方法在父类中的实现，在其基础上扩充子类的实现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">someMethod</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span> <span class="n">doMoreStuff</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">super</span> <span class="n">someMethod</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>以BNRItem的指定初始化方法为例，向super发送init消息会调用NSObject的init。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>这一步其实是先调用父类的初始化方法后 先将得到的返回值赋给self变量 如果变量是不是nil，如果不是就继续。</p>

<h2>一个类可以有多个初始化方法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithItemName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">name</span><span class="p">;</span>
</span><span class='line'><span class="c1">//和之前initWithItemName的声明看起来貌似只少了几个参数而已</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>实现initWithItemName:方法时，不需要将指定初始化方法中的代码搬过来再重写一遍。它只需要调用指定初始化方法，将得到的实参作为itemName传入，而其他实参则使用某个默认值传入，代码如下：</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithItemName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">name</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nl">initWithItemName:</span><span class="n">name</span>
</span><span class='line'><span class="nl">valueInDollars:</span><span class="mi">0</span>
</span><span class='line'><span class="nl">serialNumber:</span><span class="s">@&quot;&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>这种串联（chain）使用初始化方法的机制可以降低出错的概率，也更容易维护代码。在创建拥有多个初始化方法的类时，需要先将其中的某个初始化方法确定为“指定初始化方法”。然后只在指定初始化方法中编写初始化的核心代码，其他初始化方法只需要调用该核心代码并输入默认值即可。</p></blockquote>

<h2>初始化方法的调用方向</h2>

<p><img src="http://woody1983.github.com/images/img/nsobject2.jpg"></p>

<h4>覆盖BNRItem.m中的init方法，调用指定初始化方法，并使用默认值输入所有的实参，代码如下：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">init</span> <span class="p">{</span>
</span><span class='line'><span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nl">initWithItemName:</span><span class="s">@&quot;Item&quot;</span>
</span><span class='line'><span class="nl">valueInDollars:</span><span class="mi">0</span>
</span><span class='line'><span class="nl">serialNumber:</span><span class="s">@&quot;&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>使用初始化方法</h1>

<p>main.m会向BNRItem实例发送init消息，因为BNRItem类实现了上述两个初始化方法，所以程序会调用该类所实现的init方法，而该方法又会调用initWithItemName:valueInDollars：serialNumber:并输入默认值</p>

<p>测试:main.m中加入一行代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">BNRItem</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="p">[[</span><span class="n">BNRItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 创建一个新的NSString对象“Red Sofa”，并传给BNRItem对象</span>
</span><span class='line'><span class="p">[</span><span class="n">p</span> <span class="nl">setItemName:</span><span class="s">@&quot;Red Sofa&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>main.h</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt; </span>
</span><span class='line'><span class="cp">#import &quot;BNRItem.h&quot; </span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="err">@</span><span class="n">autoreleasepool</span> <span class="p">{</span>
</span><span class='line'><span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">items</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableArray</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">BNRItem</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="p">[[</span><span class="n">BNRItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithItemName:</span><span class="s">@&quot;Red Sofa&quot;</span>
</span><span class='line'><span class="nl">valueInDollars:</span><span class="mi">100</span>
</span><span class='line'><span class="nl">serialNumber:</span><span class="s">@&quot;A1B2C&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'><span class="n">items</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Can Beautiful Design Make Your Resume Stand Out?]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/06/can-beautiful-design-make-your-resume-stand-out/"/>
    <updated>2013-03-06T23:24:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/06/can-beautiful-design-make-your-resume-stand-out</id>
    <content type="html"><![CDATA[<p>今天有人在weibo上转了一个关于Resume的帖子，还有<code>@性感玉米</code>也发了一篇关于Resume格式的微博，感觉还是蛮有道理的。要在一页纸上以最有优势的方法展现你的个人价值，确实也值得花些时间去研究一下，毕竟这是自己的事情。</p>

<p><img src="http://woody1983.github.com/images/img/resume.jpg" width="500"></p>

<p>Recruiters spent 80% of their time looking at six data points:</p>

<ul>
<li><p>Name</p></li>
<li><p>Current title and company</p></li>
<li><p>Previous title and company</p></li>
<li><p>Current start and end dates</p></li>
<li><p>Previous start and end dates</p></li>
<li><p>Education</p></li>
</ul>


<p>The key is to keep these important data points clear. Loft Resumes recommends a hierarchy that presents information in a way that is easy to find and digest. Its service relies on graphic design principles, and clients can select from various formats or color palettes, but no two resumes will be exactly the same.</p>

<h3>有一些不错的例子</h3>

<!-- more -->


<h2>这个颜色和排版还是蛮不错的</h2>

<p><img src="http://woody1983.github.com/images/img/resume1.png" width="500"></p>

<h2>这个是蜂巢的运用和图例</h2>

<p><img src="http://woody1983.github.com/images/img/resume2.jpg" width="500"></p>

<h2>饼图的展示 非常不错 尤其是用在Skills 而且中间有一个图例就是数据库的。</h2>

<p><img src="http://woody1983.github.com/images/img/resume3.png" width="500"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSLog Format]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/06/nslog-format/"/>
    <updated>2013-03-06T23:08:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/06/nslog-format</id>
    <content type="html"><![CDATA[<p><img src="http://woody1983.github.com/images/img/nslog.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Note2]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/06/objective-c-note2/"/>
    <updated>2013-03-06T16:12:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/06/objective-c-note2</id>
    <content type="html"><![CDATA[<blockquote><p>今天的笔记 Objective-C感觉是一种很细腻的语言。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">MyObject</span> : <span class="nc">NSObject</span> <span class="p">{</span>
</span><span class='line'><span class="p">[</span><span class="n">instance</span> <span class="n">variables</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">method</span> <span class="n">declarations</span><span class="p">]</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">implementation</span> <span class="n">MyObject</span>
</span><span class='line'><span class="p">[</span><span class="n">method</span> <span class="n">implementations</span><span class="p">]</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Method declarations in Objective-C look like this:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Here, for example, is a method that takes a single parameters:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">planeName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>two parameters:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">planeName</span> <span class="nf">fuelCapacity:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">litresOfFuel</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>实现的时候</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">planeLauncher</span> <span class="n">launchPlane</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">planeLauncher</span> <span class="nl">launchPlane:</span><span class="s">@&quot;Boeing 747-300&quot;</span> <span class="nl">fuelCapacity:</span><span class="mi">183380</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<blockquote><p>The method declarations for a class are kept in its interface. Here’s an example of what the interface for a class that defines some methods looks like:</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">SomeObject</span>: <span class="nc">NSObject</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane:</span><span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">planeName</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="nf">numberOfPlanesInTheAir</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Properties</h2>

<blockquote><p>In object-oriented programming, it’s considered bad practice for one object to directly access another object’s data. Doing so breaks encapsulation, because it means that one object’s code is now dependent on the data stored in another.In order to access and change another object’s variables, you use a pair of instance methods known as a setterand getter. The getter method returns the current value of the variable, and the setter method changes the value.
In Objective-C, setter and getter method names must follow an established pattern. For example, given an instance variable named  <code>planeName</code>, the setter method would be named <code>setPlaneName:</code>and the getter method would be named <code>planeName</code>.</p></blockquote>

<h3>Declaring a property in an Objective-C class looks like this:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">SomeClass</span>: <span class="nc">NSObject</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">NSObject</span><span class="o">*</span> <span class="n">myProperty</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>关于Property</h1>

<h3>strong</h3>

<p>This property is a strong (owning) reference to an object; see  “Object Graphs in
Objective-C”(page  32). Using  strong  and  weakproperties controls whether the ob‐
ject referred to by the property stays in memory or not.</p>

<h3>weak</h3>

<p>This property is a weak (nonowning) reference to an object. When the object re‐
ferred to by this property is deallocated, this property is automatically set to nil.</p>

<h3>assign</h3>

<p>This property’s setter method simply assigns the property’s variable to whatever is
passed in, and performs no memory management.</p>

<h3>copy</h3>

<p>This property’s setter copies any object passed to it, creating a duplicate object.</p>

<h3>readwrite</h3>

<p>This property generates both getter and setter methods. (This attribute is set by
default—you need to explicitly use it only when overriding a superclass’s property.)</p>

<h3>readonly</h3>

<p>This property does not generate a setter method, rendering the property read-only
by other classes. (Your class’s implementation code can still modify the property’s
variable, however.)</p>

<h3>nonatomic</h3>

<p>This property’s setter and getter do not attempt to get a lock before making changes
to the variable, rendering it thread-safe.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">myProperty</span> <span class="o">=</span> <span class="n">_myCustomVariableName</span><span class="p">;</span>
</span><span class='line'><span class="c1">// the rest of the class code goes here</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>或者不用@synthesize  而使用@dynamic 来实现getter and setter methods</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'><span class="k">@dynamic</span> <span class="n">myProperty</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="nf">myProperty</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// this is the getter method for this property</span>
</span><span class='line'><span class="k">return</span> <span class="mi">123</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">setMyProperty:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">newValue</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// this is the setter method for this property</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Protocols</h2>

<blockquote><p>A protocolis a list of methods that your class promises to implement. Protocols are used to mark classes as having certain capabilities, like the ability to be copied, to be serialized and deserialized, or to act as a data source for some other class.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@protocol</span> <span class="nc">SomeProtocol</span>
</span><span class='line'><span class="p">[</span> <span class="n">method</span> <span class="n">declarations</span> <span class="p">]</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'><span class="c1">//用处</span>
</span><span class='line'><span class="n">You</span> <span class="n">can</span> <span class="n">mark</span> <span class="n">a</span> <span class="n">class</span> <span class="n">as</span> <span class="n">conformingto</span> <span class="n">a</span> <span class="n">protocol</span> <span class="n">by</span> <span class="n">declaring</span> <span class="n">so</span> <span class="k">in</span> <span class="n">the</span> <span class="n">class</span><span class="err">’</span><span class="n">s</span> <span class="nl">interface:</span>
</span><span class='line'><span class="err">@</span><span class="n">interface</span> <span class="nl">SomeObject:</span> <span class="n">NSObject</span> <span class="o">&lt;</span><span class="n">SomeProtocol</span><span class="o">&gt;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>alloc只是给对象保留内存空间，如果要使用必须准备初始化动作。</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">SomeClass</span><span class="o">*</span> <span class="n">anObject</span> <span class="o">=</span> <span class="p">[[</span><span class="n">SomeClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Some classes use a different designated initializer, or have multiple initializers you can use. For example, the NSStringclass has several—here are a few:
一些类使用不同的多个初始化方法或多个初始化</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">myString</span>  <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFormat:</span><span class="s">@&quot;here&#39;s a number: %i&quot;</span><span class="p">,</span> <span class="mi">123</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">anotherString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithData:</span><span class="n">anNSDataObject</span> <span class="nl">encoding:</span><span class="n">NSUTF8Encoding</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">oneMoreString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithContentsOfFile:</span><span class="s">@&quot;path to a file&quot;</span> <span class="nl">encoding:</span><span class="n">NSUTF8Encoding</span> <span class="n">error</span><span class="err">：</span><span class="n">someErrorPointer</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Foundation</h1>

<h2>String</h2>

<p>Strings are stored in the  NSStringclass, which makes them Objective-C objects just like
everything else. You can create an empty string with this code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">aString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">//Doing this isn’t terribly useful, because the NSString class is immutable</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">aString</span> <span class="o">=</span> <span class="s">@&quot;Hello, world!&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="err">@表示一个</span><span class="n">NSString</span><span class="err">对象</span> <span class="err">可以接受信息，和其他对象互动。</span>
</span><span class='line'><span class="c1">//it can receive messages and generally interact other objects in the application. </span>
</span><span class='line'>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">sizeOfString</span> <span class="o">=</span> <span class="p">[</span><span class="s">@&quot;Hello, world!&quot;</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'><span class="c1">//将这个NSString对象的长度提取出来</span>
</span><span class='line'>
</span><span class='line'><span class="err">还有一些内置方法</span> <span class="err">比如</span> <span class="err">大小</span> <span class="err">小写</span> <span class="err">首字母大写之类的</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">originalString</span>  <span class="o">=</span> <span class="s">@&quot;This is An EXAMPLE&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// &quot;THIS IS AN EXAMPLE&quot;</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">uppercaseString</span>  <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="n">uppercaseString</span><span class="p">];</span>
</span><span class='line'><span class="c1">// &quot;this is an example&quot;</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">lowerCaseString</span>  <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="n">lowercaseString</span><span class="p">];</span>
</span><span class='line'><span class="c1">// &quot;This Is An Example&quot;</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">capitalizedString</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="n">capitalizedString</span><span class="p">];</span>
</span><span class='line'><span class="c1">//To get the first five characters in a string, you do this:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">startSubstring</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="nl">substringToIndex:</span><span class="mi">5</span><span class="p">];</span> <span class="c1">// &quot;This &quot;</span>
</span><span class='line'><span class="c1">//To get everything past the first five characters:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">endSubstring</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="nl">substringFromIndex:</span><span class="mi">5</span><span class="p">];</span> <span class="c1">// &quot;is An EXAMPLE&quot;</span>
</span><span class='line'><span class="c1">//To get a substring of a range of characters, you first create an NSRangestructure, which</span>
</span><span class='line'><span class="c1">//defines the start point and length of the range. For example, to create an NSRangethat </span>
</span><span class='line'><span class="c1">//starts at the third character and is five characters long, you do this:</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">theRange</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">);</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">substring</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="nl">substringWithRange:</span><span class="n">theRange</span><span class="p">];</span> <span class="c1">// &quot;is is&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Structures and Objects</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">struct</span> <span class="n">CGPoint</span> <span class="p">{</span>
</span><span class='line'><span class="kt">float</span> <span class="n">x</span><span class="p">;</span>
</span><span class='line'><span class="kt">float</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">CGPoint</span> <span class="n">somePoint</span><span class="p">;</span>
</span><span class='line'><span class="n">somePoint</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">123</span><span class="p">;</span>
</span><span class='line'><span class="n">somePoint</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="mi">456</span><span class="p">;</span>
</span><span class='line'><span class="c1">// This is a variable that contains a pointer to an NSString</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">someString</span><span class="p">;</span>
</span><span class='line'><span class="c1">// This is a variable that contains a CGPoint</span>
</span><span class='line'><span class="n">CGPoint</span> <span class="n">somePoint</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>判断NSString</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">firstString</span> <span class="o">==</span> <span class="n">secondString</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Do something</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">([</span><span class="n">firstString</span> <span class="nl">isEqualToString:</span><span class="n">secondString</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Do something</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Searching Strings</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">sourceString</span> <span class="o">=</span> <span class="s">@&quot;Four score and seven years ago&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="p">[</span><span class="n">sourceString</span> <span class="nl">rangeOfString:</span><span class="s">@&quot;seven&quot;</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">range</span><span class="p">.</span><span class="n">location</span> <span class="o">==</span> <span class="n">NSNotFound</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// the string was not found</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// the string was found; &#39;range&#39; variable contains info on where it is</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>还有一些选项</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">sourceString</span> <span class="o">=</span> <span class="s">@&quot;Four score and seven years ago&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="p">[</span><span class="n">sourceString</span> <span class="nl">rangeOfString:</span><span class="s">@&quot;SEVEN&quot;</span>
</span><span class='line'><span class="nl">options:</span><span class="n">NSCaseInsensitiveSearch</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Arrays</h2>

<h3>Declaration:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="cp">###You can also retrieve objects from an array, using syntax like this:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">oneString</span> <span class="o">=</span> <span class="n">myArray</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">twoString</span> <span class="o">=</span> <span class="n">myArray</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//The syntax for accessing elements in an NSArray doesn’t work on iOS 5 and below.</span>
</span><span class='line'><span class="c1">//Instead, you need to use the slightly wordier method objectAtIndex:, like so:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">oneString</span> <span class="o">=</span> <span class="p">[</span><span class="n">myArray</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="n">myArray</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'><span class="c1">// count now equals 3</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="n">myArray</span> <span class="nl">indexOfObject:</span><span class="s">@&quot;two&quot;</span><span class="p">];</span>  <span class="c1">// should be equal to 1</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="o">==</span> <span class="n">NSNotFound</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Couldn&#39;t find the object!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Here’s an example of creating a subarray from an existing array:</span>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">subArrayRange</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">subArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">myArray</span> <span class="nl">subArrayWithRange:</span><span class="n">subArrayRange</span><span class="p">];</span>
</span><span class='line'><span class="cp">// subArray now contains &quot;two&quot;, &quot;three&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">###Fast Enumeration</span>
</span><span class='line'><span class="n">To</span> <span class="n">loop</span> <span class="n">over</span> <span class="n">an</span> <span class="n">array</span><span class="p">,</span> <span class="n">you</span> <span class="k">do</span> <span class="nl">this:</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span> <span class="n">string</span> <span class="k">in</span> <span class="n">myArray</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// this code is repeated 3 times, one for each item in the array</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">###Mutable Arrays</span>
</span><span class='line'><span class="n">NSMutableArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithArray:</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;One&quot;</span><span class="p">,</span> <span class="s">@&quot;Two&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="c1">// Add &quot;Three&quot; to the end</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">addObject:</span><span class="s">@&quot;Three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Add &quot;Zero&quot; to the start</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">insertObject:</span><span class="s">@&quot;Zero&quot;</span> <span class="nl">atIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="c1">// The array now contains &quot;Zero&quot;, &quot;One&quot;, &quot;Two&quot;, &quot;Three&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSMutableArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithArray:</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;One&quot;</span><span class="p">,</span> <span class="s">@&quot;Two&quot;</span><span class="p">,</span> <span class="s">@&quot;Three&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">removeObject:</span><span class="s">@&quot;One&quot;</span><span class="p">];</span>  <span class="c1">// removes &quot;One&quot;</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">removeObjectAtIndex:</span><span class="mi">1</span><span class="p">];</span> <span class="c1">// removes &quot;Three&quot;, the second</span>
</span><span class='line'><span class="c1">// item in the array at this point</span>
</span><span class='line'><span class="c1">// The array now contains just &quot;Two&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSMutableArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithArray:</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;One&quot;</span><span class="p">,</span> <span class="s">@&quot;Two&quot;</span><span class="p">,</span><span class="s">@&quot;Three&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">replaceObjectAtIndex:</span><span class="mi">1</span> <span class="nl">withObject:</span><span class="s">@&quot;Bananas&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">// myArray is now &quot;One&quot;, &quot;Bananas&quot;, &quot;Three&quot;</span>
</span><span class='line'><span class="n">You</span> <span class="n">can</span> <span class="n">also</span> <span class="n">ask</span> <span class="n">the</span> <span class="n">mutable</span> <span class="n">array</span> <span class="n">to</span> <span class="n">set</span> <span class="n">an</span> <span class="n">object</span> <span class="n">at</span> <span class="n">a</span> <span class="n">given</span> <span class="nl">index:</span>
</span><span class='line'><span class="n">myArray</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Null&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dictionaries</h2>

<p>/<em>
Table 3-1. Contact information
Key      Value
Name     Cave Johnson
Company  Aperture Science
Likes    Science
Dislikes Lemons
</em>/</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSDictionary</span><span class="o">*</span> <span class="n">translationDictionary</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span>
</span><span class='line'><span class="s">@&quot;greeting&quot;</span><span class="o">:</span> <span class="s">@&quot;Hello&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;farewell&quot;</span><span class="o">:</span> <span class="s">@&quot;Goodbye&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="c1">//You can retrieve a value from the dictionary in a similar way to how you get objects out of an NSArray:</span>
</span><span class='line'><span class="n">NSDictionary</span><span class="o">*</span> <span class="n">translationDictionary</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;greeting&quot;</span><span class="o">:</span> <span class="s">@&quot;Hello&quot;</span><span class="p">};</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">greeting</span> <span class="o">=</span> <span class="n">translationDictionary</span><span class="p">[</span><span class="s">@&quot;greeting&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Here, aDictionary is an NSDictionary</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span> <span class="n">key</span> <span class="k">in</span> <span class="n">aDictionary</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">NSObject</span><span class="o">*</span> <span class="n">theValue</span> <span class="o">=</span> <span class="n">aDictionary</span><span class="p">[</span><span class="n">key</span><span class="p">];</span>
</span><span class='line'><span class="c1">// do something with theValue</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//To set an object for a key in a mutable dictionary</span>
</span><span class='line'><span class="n">NSMutableDictionary</span><span class="o">*</span> <span class="n">aDictionary</span> <span class="o">=</span> <span class="err">@</span><span class="p">{};</span>
</span><span class='line'><span class="n">aDictionary</span><span class="p">[</span><span class="s">@&quot;greeting&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Hello&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">aDictionary</span><span class="p">[</span><span class="s">@&quot;farewell&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Goodbye&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">###To create an NSNumber from a number, simply put an @ in front of it. </span>
</span><span class='line'><span class="n">NSNumber</span><span class="o">*</span> <span class="n">theNumber</span> <span class="o">=</span> <span class="err">@</span><span class="mi">123</span><span class="p">;</span>
</span><span class='line'><span class="c1">//This NSNumberinstance can be included in any collection object:</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//&#39;numbers&#39; is an NSMutableArray</span>
</span><span class='line'><span class="p">[</span><span class="n">numbers</span> <span class="nl">addObject:</span><span class="n">theNumber</span><span class="p">];</span>
</span><span class='line'><span class="c1">//This NSNumberinstance can be included in any collection object:</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//&#39;numbers&#39; is an NSMutableArray</span>
</span><span class='line'><span class="p">[</span><span class="n">numbers</span> <span class="nl">addObject:</span><span class="n">theNumber</span><span class="p">];</span>
</span><span class='line'><span class="c1">//You can also set NSNumbers to the result of an expression. For example:</span>
</span><span class='line'><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span><span class="o">*</span> <span class="n">number</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="cp">// &#39;number&#39; contains 101</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#Data</span>
</span><span class='line'><span class="cp">###To load a text file into an NSDataobject, you can do the following:</span>
</span><span class='line'><span class="c1">// Assuming that there is a text file at /Examples/Test.txt:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">filePath</span> <span class="o">=</span> <span class="s">@&quot;/Examples/Test.txt&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSData</span><span class="o">*</span> <span class="n">loadedData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfFile:</span><span class="n">filePath</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>转换成NSString对象</h2>

<blockquote><p>For example, to convert an  NSDataobject to an  NSString, you can use the  NSString class’s  initWithData:encoding:method, which takes an  NSData  object and  an NSStringEncodingvalue (which indicates to the class how it should interpret the bytes).</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">loadedString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithData:</span><span class="n">loadedData</span>     <span class="nl">encoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//You can write an  NSDataobject to disk in a similar way</span>
</span><span class='line'><span class="c1">// Here, loadedData is an NSData object</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">filePath</span> <span class="o">=</span> <span class="s">@&quot;/Examples/Test.txt&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">loadedData</span> <span class="nl">writeToFile:</span><span class="n">filePath</span> <span class="nl">atomically:</span><span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>The NSCodingprotocol contains two key methods, which your class must implement in order to be serializable:</h3>

<ul>
<li>encodeWithCoder:</li>
<li>initWithCoder:</li>
</ul>


<h3>Here is an example of an implementation of the encodeWithCoder:method:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">encodeWithCoder:</span><span class="p">(</span><span class="n">NSKeyedArchiver</span><span class="o">*</span><span class="p">)</span><span class="nv">aCoder</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Store a string (or any other Objective-C object that supports coding)</span>
</span><span class='line'><span class="p">[</span><span class="n">aCoder</span> <span class="nl">encodeObject:</span><span class="n">myStringVariable</span> <span class="nl">forKey:</span><span class="s">@&quot;myString&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Store a number</span>
</span><span class='line'><span class="p">[</span><span class="n">aCoder</span> <span class="nl">encodeInteger:</span><span class="n">myIntegerVariable</span> <span class="nl">forKey:</span><span class="s">@&quot;anInteger&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Here is the corresponding initWithCoder:  method, which sets up the object and loads the encoded data:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nf">initWithCoder:</span><span class="p">(</span><span class="n">NSKeyedUnarchiver</span><span class="o">*</span><span class="p">)</span><span class="nv">aDecoder</span> <span class="p">{</span>
</span><span class='line'><span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">myStringVariable</span> <span class="o">=</span> <span class="p">[</span><span class="n">aDecoder</span> <span class="nl">decodeObjectForKey:</span><span class="s">@&quot;myString&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">myIntegerVariable</span> <span class="o">=</span> <span class="p">[</span><span class="n">aDecoder</span> <span class="nl">decodeIntegerForKey:</span><span class="s">@&quot;anInteger&quot;</span><span class="p">];</span>
</span><span class='line'><span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>To actually convert an object to a usable NSData, you can do this:</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// myObject is an object that </span>
</span><span class='line'><span class="c1">//conforms to NSCoding</span>
</span><span class='line'><span class="n">NSData</span><span class="o">*</span> <span class="n">object</span> <span class="n">storedData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSKeyedArchiver</span> <span class="nl">archivedDataWithRootObject:</span><span class="n">myObject</span><span class="p">];</span>
</span><span class='line'><span class="c1">// storedData can now be written to a file</span>
</span><span class='line'><span class="n">To</span> <span class="n">load</span> <span class="n">it</span> <span class="n">back</span><span class="p">,</span> <span class="n">you</span> <span class="n">can</span> <span class="k">do</span> <span class="nl">this:</span>
</span><span class='line'><span class="c1">// loadedData is an NSData loaded from somewhere, and SomeObject is </span>
</span><span class='line'><span class="c1">//a class that conforms to NSCoding</span>
</span><span class='line'><span class="n">SomeObject</span><span class="o">*</span> <span class="n">myObject</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSKeyedUnarchiver</span> <span class="nl">unarchiveObjectWithData:</span><span class="n">loadedData</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Design Patterns in Cocoa</h1>

<blockquote><p>Delegationis Cocoa’s term for passing off some responsibilities of an object to another.An example of this in action is the UIApplicationobject, which represents an application on iOS. This application needs to know what should happen when the application moves to the background. Many other languages handle this problem by subclassing</p></blockquote>

<p><img src="http://woody1983.github.com/images/img/ocnote2.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino Robot]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/05/arduino-robot/"/>
    <updated>2013-03-05T17:13:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/05/arduino-robot</id>
    <content type="html"><![CDATA[<h2>这玩意看的人心里长草&#8230;</h2>

<p><img src="http://woody1983.github.com/images/img/doob.jpg" width="300"></p>

<p>抽时间研究研究 还是蛮好玩的。</p>

<p><img src="http://woody1983.github.com/images/img/doob2.jpg" width="400"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Demo Note]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/05/objective-c-demo-note/"/>
    <updated>2013-03-05T16:38:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/05/objective-c-demo-note</id>
    <content type="html"><![CDATA[<h1>Project:Single View Application</h1>

<h2>MyFirstApp</h2>

<p><code>viewController.h</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span><span class="p">{</span>
</span><span class='line'>  <span class="kt">IBOutlet</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">nameLabel</span> <span class="c1">//新增一个数据成员</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">showName:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span><span class="p">;</span> <span class="c1">//新增一个方法showName</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>viewController.m</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;viewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWaring</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWaring</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">// 自带的？ Release any cache data, images, etc that aren&#39;t in use.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">showName:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">nameLabel</span> <span class="nl">setText:</span><span class="s">@&quot;My name is Johnny!&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>@interface 是声明一个类 大括号里面定义的是这个类的数据成员</li>
<li>在@end 之前定义的都是类方法  只定义 实现在@implementation部分实现</li>
<li>didReceiveMemoryWaring这个方法好像是自定义出来的</li>
</ul>


<!-- more -->


<h1>Project RadioStation</h1>

<h3>添加一个Objective-C Class : RadioStation</h3>

<p><code>RadioStation.h</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">RadioStation</span> : <span class="nc">NSObject</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">double</span> <span class="n">frequency</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSUInteger</span> <span class="n">band</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">minAMFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxAMFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">minFMFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxFMFrequency</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span> <span class="nf">atFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">name</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">frequency</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>RadioStation.m</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;RadioStation.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">RadioStation</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">minAMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">520.0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxAMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">1610.0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">minFMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">88.3</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxFMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">107.9</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span> <span class="nf">atFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;initWithName is Running!</span><span class="se">\n</span><span class="s"> newFrequency is %f , name is %@&quot;</span><span class="p">,</span><span class="n">newFrequency</span><span class="p">,</span><span class="n">newName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">name</span> <span class="o">=</span> <span class="n">newName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">frequency</span> <span class="o">=</span> <span class="n">newFrequency</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">name</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;name is ok&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">frequency</span><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">frequency</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span><span class="p">{</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">newName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span><span class="p">{</span>
</span><span class='line'>    <span class="n">frequency</span> <span class="o">=</span> <span class="n">newFrequency</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>viewController.h</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="k">@class</span> <span class="nc">RadioStation</span>;
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">XYZViewController</span> : <span class="nc">UIViewController</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">RadioStation</span> <span class="o">*</span><span class="n">myStation</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">IBOutlet</span> <span class="n">UILabel</span><span class="o">*</span> <span class="n">stationName</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">IBOutlet</span> <span class="n">UILabel</span><span class="o">*</span> <span class="n">stationFrequency</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">IBOutlet</span> <span class="n">UILabel</span><span class="o">*</span> <span class="n">stationBand</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>viewController.m</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;XYZViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;RadioStation.h&quot;</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">XYZViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">implementation</span> <span class="n">XYZViewController</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">buttonClick:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">stationName</span> <span class="nl">setText:</span><span class="p">[</span><span class="n">myStation</span> <span class="n">name</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">stationFrequency</span> <span class="nl">setText:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%.1f&quot;</span><span class="p">,[</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]]];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(([</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="p">[</span><span class="n">RadioStation</span> <span class="n">minFMFrequency</span><span class="p">])</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>        <span class="p">([</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="p">[</span><span class="n">RadioStation</span> <span class="n">maxFMFrequency</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">stationBand</span> <span class="nl">setText:</span><span class="s">@&quot;FM&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">stationBand</span> <span class="nl">setText:</span><span class="s">@&quot;AM&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;buttonClick frequency = %f&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="n">myStation</span> <span class="o">=</span> <span class="p">[[</span><span class="n">RadioStation</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithName:</span><span class="s">@&quot;Woody Style&quot;</span> <span class="nl">atFrequency:</span><span class="mf">94.1</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;App is Running&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidUnload</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidUnload</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Release any retained subviews of the main view.</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nl">shouldAutorotateToInterfaceOrientation:</span><span class="p">(</span><span class="n">UIInterfaceOrientation</span><span class="p">)</span><span class="n">interfaceOrientation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">interfaceOrientation</span> <span class="o">!=</span> <span class="n">UIInterfaceOrientationPortraitUpsideDown</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/oc_demo1.png" title="" ></p>
]]></content>
  </entry>
  
</feed>
