<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[1024Bit  电子游牧日志]]></title>
  <link href="http://woody1983.github.com/atom.xml" rel="self"/>
  <link href="http://woody1983.github.com/"/>
  <updated>2013-03-07T00:04:15+08:00</updated>
  <id>http://woody1983.github.com/</id>
  <author>
    <name><![CDATA[Woody.Xu]]></name>
    <email><![CDATA[unix1983@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Can Beautiful Design Make Your Resume Stand Out?]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/06/can-beautiful-design-make-your-resume-stand-out/"/>
    <updated>2013-03-06T23:24:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/06/can-beautiful-design-make-your-resume-stand-out</id>
    <content type="html"><![CDATA[<p>今天有人在weibo上转了一个关于Resume的帖子，还有<code>@性感玉米</code>也发了一篇关于Resume格式的微博，感觉还是蛮有道理的。要在一页纸上以最有优势的方法展现你的个人价值，确实也值得花些时间去研究一下，毕竟这是自己的事情。</p>

<p><img src="http://woody1983.github.com/images/img/resume.jpg" width="500"></p>

<p>Recruiters spent 80% of their time looking at six data points:</p>

<ul>
<li><p>Name</p></li>
<li><p>Current title and company</p></li>
<li><p>Previous title and company</p></li>
<li><p>Current start and end dates</p></li>
<li><p>Previous start and end dates</p></li>
<li><p>Education</p></li>
</ul>


<p>The key is to keep these important data points clear. Loft Resumes recommends a hierarchy that presents information in a way that is easy to find and digest. Its service relies on graphic design principles, and clients can select from various formats or color palettes, but no two resumes will be exactly the same.</p>

<h3>有一些不错的例子</h3>

<!-- more -->


<h2>这个颜色和排版还是蛮不错的</h2>

<p><img src="http://woody1983.github.com/images/img/resume1.png" width="500"></p>

<h2>这个是蜂巢的运用和图例</h2>

<p><img src="http://woody1983.github.com/images/img/resume2.jpg" width="500"></p>

<h2>饼图的展示 非常不错 尤其是用在Skills 而且中间有一个图例就是数据库的。</h2>

<p><img src="http://woody1983.github.com/images/img/resume3.png" width="500"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSLog Format]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/06/nslog-format/"/>
    <updated>2013-03-06T23:08:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/06/nslog-format</id>
    <content type="html"><![CDATA[<p><img src="http://woody1983.github.com/images/img/nslog.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Note2]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/06/objective-c-note2/"/>
    <updated>2013-03-06T16:12:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/06/objective-c-note2</id>
    <content type="html"><![CDATA[<blockquote><p>今天的笔记 Objective-C感觉是一种很细腻的语言。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">MyObject</span> : <span class="nc">NSObject</span> <span class="p">{</span>
</span><span class='line'><span class="p">[</span><span class="n">instance</span> <span class="n">variables</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">method</span> <span class="n">declarations</span><span class="p">]</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">implementation</span> <span class="n">MyObject</span>
</span><span class='line'><span class="p">[</span><span class="n">method</span> <span class="n">implementations</span><span class="p">]</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Method declarations in Objective-C look like this:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Here, for example, is a method that takes a single parameters:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">planeName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>two parameters:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">planeName</span> <span class="nf">fuelCapacity:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">litresOfFuel</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>实现的时候</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">planeLauncher</span> <span class="n">launchPlane</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">planeLauncher</span> <span class="nl">launchPlane:</span><span class="s">@&quot;Boeing 747-300&quot;</span> <span class="nl">fuelCapacity:</span><span class="mi">183380</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<blockquote><p>The method declarations for a class are kept in its interface. Here’s an example of what the interface for a class that defines some methods looks like:</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">SomeObject</span>: <span class="nc">NSObject</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">launchPlane:</span><span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">planeName</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="nf">numberOfPlanesInTheAir</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Properties</h2>

<blockquote><p>In object-oriented programming, it’s considered bad practice for one object to directly access another object’s data. Doing so breaks encapsulation, because it means that one object’s code is now dependent on the data stored in another.In order to access and change another object’s variables, you use a pair of instance methods known as a setterand getter. The getter method returns the current value of the variable, and the setter method changes the value.
In Objective-C, setter and getter method names must follow an established pattern. For example, given an instance variable named  <code>planeName</code>, the setter method would be named <code>setPlaneName:</code>and the getter method would be named <code>planeName</code>.</p></blockquote>

<h3>Declaring a property in an Objective-C class looks like this:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">SomeClass</span>: <span class="nc">NSObject</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">NSObject</span><span class="o">*</span> <span class="n">myProperty</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>关于Property</h1>

<h3>strong</h3>

<p>This property is a strong (owning) reference to an object; see  “Object Graphs in
Objective-C”(page  32). Using  strong  and  weakproperties controls whether the ob‐
ject referred to by the property stays in memory or not.</p>

<h3>weak</h3>

<p>This property is a weak (nonowning) reference to an object. When the object re‐
ferred to by this property is deallocated, this property is automatically set to nil.</p>

<h3>assign</h3>

<p>This property’s setter method simply assigns the property’s variable to whatever is
passed in, and performs no memory management.</p>

<h3>copy</h3>

<p>This property’s setter copies any object passed to it, creating a duplicate object.</p>

<h3>readwrite</h3>

<p>This property generates both getter and setter methods. (This attribute is set by
default—you need to explicitly use it only when overriding a superclass’s property.)</p>

<h3>readonly</h3>

<p>This property does not generate a setter method, rendering the property read-only
by other classes. (Your class’s implementation code can still modify the property’s
variable, however.)</p>

<h3>nonatomic</h3>

<p>This property’s setter and getter do not attempt to get a lock before making changes
to the variable, rendering it thread-safe.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">myProperty</span> <span class="o">=</span> <span class="n">_myCustomVariableName</span><span class="p">;</span>
</span><span class='line'><span class="c1">// the rest of the class code goes here</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>或者不用@synthesize  而使用@dynamic 来实现getter and setter methods</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'><span class="k">@dynamic</span> <span class="n">myProperty</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="nf">myProperty</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// this is the getter method for this property</span>
</span><span class='line'><span class="k">return</span> <span class="mi">123</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">setMyProperty:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">newValue</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// this is the setter method for this property</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Protocols</h2>

<blockquote><p>A protocolis a list of methods that your class promises to implement. Protocols are used to mark classes as having certain capabilities, like the ability to be copied, to be serialized and deserialized, or to act as a data source for some other class.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@protocol</span> <span class="nc">SomeProtocol</span>
</span><span class='line'><span class="p">[</span> <span class="n">method</span> <span class="n">declarations</span> <span class="p">]</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'><span class="c1">//用处</span>
</span><span class='line'><span class="n">You</span> <span class="n">can</span> <span class="n">mark</span> <span class="n">a</span> <span class="n">class</span> <span class="n">as</span> <span class="n">conformingto</span> <span class="n">a</span> <span class="n">protocol</span> <span class="n">by</span> <span class="n">declaring</span> <span class="n">so</span> <span class="k">in</span> <span class="n">the</span> <span class="n">class</span><span class="err">’</span><span class="n">s</span> <span class="nl">interface:</span>
</span><span class='line'><span class="err">@</span><span class="n">interface</span> <span class="nl">SomeObject:</span> <span class="n">NSObject</span> <span class="o">&lt;</span><span class="n">SomeProtocol</span><span class="o">&gt;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>alloc只是给对象保留内存空间，如果要使用必须准备初始化动作。</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">SomeClass</span><span class="o">*</span> <span class="n">anObject</span> <span class="o">=</span> <span class="p">[[</span><span class="n">SomeClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Some classes use a different designated initializer, or have multiple initializers you can use. For example, the NSStringclass has several—here are a few:
一些类使用不同的多个初始化方法或多个初始化</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">myString</span>  <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFormat:</span><span class="s">@&quot;here&#39;s a number: %i&quot;</span><span class="p">,</span> <span class="mi">123</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">anotherString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithData:</span><span class="n">anNSDataObject</span> <span class="nl">encoding:</span><span class="n">NSUTF8Encoding</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">oneMoreString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithContentsOfFile:</span><span class="s">@&quot;path to a file&quot;</span> <span class="nl">encoding:</span><span class="n">NSUTF8Encoding</span> <span class="n">error</span><span class="err">：</span><span class="n">someErrorPointer</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Foundation</h1>

<h2>String</h2>

<p>Strings are stored in the  NSStringclass, which makes them Objective-C objects just like
everything else. You can create an empty string with this code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">aString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">//Doing this isn’t terribly useful, because the NSString class is immutable</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">aString</span> <span class="o">=</span> <span class="s">@&quot;Hello, world!&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="err">@表示一个</span><span class="n">NSString</span><span class="err">对象</span> <span class="err">可以接受信息，和其他对象互动。</span>
</span><span class='line'><span class="c1">//it can receive messages and generally interact other objects in the application. </span>
</span><span class='line'>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">sizeOfString</span> <span class="o">=</span> <span class="p">[</span><span class="s">@&quot;Hello, world!&quot;</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'><span class="c1">//将这个NSString对象的长度提取出来</span>
</span><span class='line'>
</span><span class='line'><span class="err">还有一些内置方法</span> <span class="err">比如</span> <span class="err">大小</span> <span class="err">小写</span> <span class="err">首字母大写之类的</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">originalString</span>  <span class="o">=</span> <span class="s">@&quot;This is An EXAMPLE&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// &quot;THIS IS AN EXAMPLE&quot;</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">uppercaseString</span>  <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="n">uppercaseString</span><span class="p">];</span>
</span><span class='line'><span class="c1">// &quot;this is an example&quot;</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">lowerCaseString</span>  <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="n">lowercaseString</span><span class="p">];</span>
</span><span class='line'><span class="c1">// &quot;This Is An Example&quot;</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">capitalizedString</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="n">capitalizedString</span><span class="p">];</span>
</span><span class='line'><span class="c1">//To get the first five characters in a string, you do this:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">startSubstring</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="nl">substringToIndex:</span><span class="mi">5</span><span class="p">];</span> <span class="c1">// &quot;This &quot;</span>
</span><span class='line'><span class="c1">//To get everything past the first five characters:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">endSubstring</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="nl">substringFromIndex:</span><span class="mi">5</span><span class="p">];</span> <span class="c1">// &quot;is An EXAMPLE&quot;</span>
</span><span class='line'><span class="c1">//To get a substring of a range of characters, you first create an NSRangestructure, which</span>
</span><span class='line'><span class="c1">//defines the start point and length of the range. For example, to create an NSRangethat </span>
</span><span class='line'><span class="c1">//starts at the third character and is five characters long, you do this:</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">theRange</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">);</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">substring</span> <span class="o">=</span> <span class="p">[</span><span class="n">originalString</span> <span class="nl">substringWithRange:</span><span class="n">theRange</span><span class="p">];</span> <span class="c1">// &quot;is is&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Structures and Objects</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">struct</span> <span class="n">CGPoint</span> <span class="p">{</span>
</span><span class='line'><span class="kt">float</span> <span class="n">x</span><span class="p">;</span>
</span><span class='line'><span class="kt">float</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">CGPoint</span> <span class="n">somePoint</span><span class="p">;</span>
</span><span class='line'><span class="n">somePoint</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">123</span><span class="p">;</span>
</span><span class='line'><span class="n">somePoint</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="mi">456</span><span class="p">;</span>
</span><span class='line'><span class="c1">// This is a variable that contains a pointer to an NSString</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">someString</span><span class="p">;</span>
</span><span class='line'><span class="c1">// This is a variable that contains a CGPoint</span>
</span><span class='line'><span class="n">CGPoint</span> <span class="n">somePoint</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>判断NSString</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">firstString</span> <span class="o">==</span> <span class="n">secondString</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Do something</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">([</span><span class="n">firstString</span> <span class="nl">isEqualToString:</span><span class="n">secondString</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Do something</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Searching Strings</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">sourceString</span> <span class="o">=</span> <span class="s">@&quot;Four score and seven years ago&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="p">[</span><span class="n">sourceString</span> <span class="nl">rangeOfString:</span><span class="s">@&quot;seven&quot;</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">range</span><span class="p">.</span><span class="n">location</span> <span class="o">==</span> <span class="n">NSNotFound</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// the string was not found</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// the string was found; &#39;range&#39; variable contains info on where it is</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>还有一些选项</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">sourceString</span> <span class="o">=</span> <span class="s">@&quot;Four score and seven years ago&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="p">[</span><span class="n">sourceString</span> <span class="nl">rangeOfString:</span><span class="s">@&quot;SEVEN&quot;</span>
</span><span class='line'><span class="nl">options:</span><span class="n">NSCaseInsensitiveSearch</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Arrays</h2>

<h3>Declaration:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="cp">###You can also retrieve objects from an array, using syntax like this:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">oneString</span> <span class="o">=</span> <span class="n">myArray</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">twoString</span> <span class="o">=</span> <span class="n">myArray</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//The syntax for accessing elements in an NSArray doesn’t work on iOS 5 and below.</span>
</span><span class='line'><span class="c1">//Instead, you need to use the slightly wordier method objectAtIndex:, like so:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">oneString</span> <span class="o">=</span> <span class="p">[</span><span class="n">myArray</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="n">myArray</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'><span class="c1">// count now equals 3</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="n">myArray</span> <span class="nl">indexOfObject:</span><span class="s">@&quot;two&quot;</span><span class="p">];</span>  <span class="c1">// should be equal to 1</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="o">==</span> <span class="n">NSNotFound</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Couldn&#39;t find the object!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Here’s an example of creating a subarray from an existing array:</span>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">subArrayRange</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">subArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">myArray</span> <span class="nl">subArrayWithRange:</span><span class="n">subArrayRange</span><span class="p">];</span>
</span><span class='line'><span class="cp">// subArray now contains &quot;two&quot;, &quot;three&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">###Fast Enumeration</span>
</span><span class='line'><span class="n">To</span> <span class="n">loop</span> <span class="n">over</span> <span class="n">an</span> <span class="n">array</span><span class="p">,</span> <span class="n">you</span> <span class="k">do</span> <span class="nl">this:</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span> <span class="n">string</span> <span class="k">in</span> <span class="n">myArray</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// this code is repeated 3 times, one for each item in the array</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">###Mutable Arrays</span>
</span><span class='line'><span class="n">NSMutableArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithArray:</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;One&quot;</span><span class="p">,</span> <span class="s">@&quot;Two&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="c1">// Add &quot;Three&quot; to the end</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">addObject:</span><span class="s">@&quot;Three&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Add &quot;Zero&quot; to the start</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">insertObject:</span><span class="s">@&quot;Zero&quot;</span> <span class="nl">atIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="c1">// The array now contains &quot;Zero&quot;, &quot;One&quot;, &quot;Two&quot;, &quot;Three&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSMutableArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithArray:</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;One&quot;</span><span class="p">,</span> <span class="s">@&quot;Two&quot;</span><span class="p">,</span> <span class="s">@&quot;Three&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">removeObject:</span><span class="s">@&quot;One&quot;</span><span class="p">];</span>  <span class="c1">// removes &quot;One&quot;</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">removeObjectAtIndex:</span><span class="mi">1</span><span class="p">];</span> <span class="c1">// removes &quot;Three&quot;, the second</span>
</span><span class='line'><span class="c1">// item in the array at this point</span>
</span><span class='line'><span class="c1">// The array now contains just &quot;Two&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSMutableArray</span><span class="o">*</span> <span class="n">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithArray:</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;One&quot;</span><span class="p">,</span> <span class="s">@&quot;Two&quot;</span><span class="p">,</span><span class="s">@&quot;Three&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">myArray</span> <span class="nl">replaceObjectAtIndex:</span><span class="mi">1</span> <span class="nl">withObject:</span><span class="s">@&quot;Bananas&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">// myArray is now &quot;One&quot;, &quot;Bananas&quot;, &quot;Three&quot;</span>
</span><span class='line'><span class="n">You</span> <span class="n">can</span> <span class="n">also</span> <span class="n">ask</span> <span class="n">the</span> <span class="n">mutable</span> <span class="n">array</span> <span class="n">to</span> <span class="n">set</span> <span class="n">an</span> <span class="n">object</span> <span class="n">at</span> <span class="n">a</span> <span class="n">given</span> <span class="nl">index:</span>
</span><span class='line'><span class="n">myArray</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Null&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dictionaries</h2>

<p>/<em>
Table 3-1. Contact information
Key      Value
Name     Cave Johnson
Company  Aperture Science
Likes    Science
Dislikes Lemons
</em>/</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSDictionary</span><span class="o">*</span> <span class="n">translationDictionary</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span>
</span><span class='line'><span class="s">@&quot;greeting&quot;</span><span class="o">:</span> <span class="s">@&quot;Hello&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s">@&quot;farewell&quot;</span><span class="o">:</span> <span class="s">@&quot;Goodbye&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="c1">//You can retrieve a value from the dictionary in a similar way to how you get objects out of an NSArray:</span>
</span><span class='line'><span class="n">NSDictionary</span><span class="o">*</span> <span class="n">translationDictionary</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;greeting&quot;</span><span class="o">:</span> <span class="s">@&quot;Hello&quot;</span><span class="p">};</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">greeting</span> <span class="o">=</span> <span class="n">translationDictionary</span><span class="p">[</span><span class="s">@&quot;greeting&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Here, aDictionary is an NSDictionary</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span> <span class="n">key</span> <span class="k">in</span> <span class="n">aDictionary</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">NSObject</span><span class="o">*</span> <span class="n">theValue</span> <span class="o">=</span> <span class="n">aDictionary</span><span class="p">[</span><span class="n">key</span><span class="p">];</span>
</span><span class='line'><span class="c1">// do something with theValue</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//To set an object for a key in a mutable dictionary</span>
</span><span class='line'><span class="n">NSMutableDictionary</span><span class="o">*</span> <span class="n">aDictionary</span> <span class="o">=</span> <span class="err">@</span><span class="p">{};</span>
</span><span class='line'><span class="n">aDictionary</span><span class="p">[</span><span class="s">@&quot;greeting&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Hello&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">aDictionary</span><span class="p">[</span><span class="s">@&quot;farewell&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Goodbye&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">###To create an NSNumber from a number, simply put an @ in front of it. </span>
</span><span class='line'><span class="n">NSNumber</span><span class="o">*</span> <span class="n">theNumber</span> <span class="o">=</span> <span class="err">@</span><span class="mi">123</span><span class="p">;</span>
</span><span class='line'><span class="c1">//This NSNumberinstance can be included in any collection object:</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//&#39;numbers&#39; is an NSMutableArray</span>
</span><span class='line'><span class="p">[</span><span class="n">numbers</span> <span class="nl">addObject:</span><span class="n">theNumber</span><span class="p">];</span>
</span><span class='line'><span class="c1">//This NSNumberinstance can be included in any collection object:</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//&#39;numbers&#39; is an NSMutableArray</span>
</span><span class='line'><span class="p">[</span><span class="n">numbers</span> <span class="nl">addObject:</span><span class="n">theNumber</span><span class="p">];</span>
</span><span class='line'><span class="c1">//You can also set NSNumbers to the result of an expression. For example:</span>
</span><span class='line'><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span><span class="o">*</span> <span class="n">number</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="cp">// &#39;number&#39; contains 101</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#Data</span>
</span><span class='line'><span class="cp">###To load a text file into an NSDataobject, you can do the following:</span>
</span><span class='line'><span class="c1">// Assuming that there is a text file at /Examples/Test.txt:</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">filePath</span> <span class="o">=</span> <span class="s">@&quot;/Examples/Test.txt&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSData</span><span class="o">*</span> <span class="n">loadedData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfFile:</span><span class="n">filePath</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>转换成NSString对象</h2>

<blockquote><p>For example, to convert an  NSDataobject to an  NSString, you can use the  NSString class’s  initWithData:encoding:method, which takes an  NSData  object and  an NSStringEncodingvalue (which indicates to the class how it should interpret the bytes).</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">loadedString</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithData:</span><span class="n">loadedData</span>     <span class="nl">encoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//You can write an  NSDataobject to disk in a similar way</span>
</span><span class='line'><span class="c1">// Here, loadedData is an NSData object</span>
</span><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">filePath</span> <span class="o">=</span> <span class="s">@&quot;/Examples/Test.txt&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">loadedData</span> <span class="nl">writeToFile:</span><span class="n">filePath</span> <span class="nl">atomically:</span><span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>The NSCodingprotocol contains two key methods, which your class must implement in order to be serializable:</h3>

<ul>
<li>encodeWithCoder:</li>
<li>initWithCoder:</li>
</ul>


<h3>Here is an example of an implementation of the encodeWithCoder:method:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">encodeWithCoder:</span><span class="p">(</span><span class="n">NSKeyedArchiver</span><span class="o">*</span><span class="p">)</span><span class="nv">aCoder</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Store a string (or any other Objective-C object that supports coding)</span>
</span><span class='line'><span class="p">[</span><span class="n">aCoder</span> <span class="nl">encodeObject:</span><span class="n">myStringVariable</span> <span class="nl">forKey:</span><span class="s">@&quot;myString&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Store a number</span>
</span><span class='line'><span class="p">[</span><span class="n">aCoder</span> <span class="nl">encodeInteger:</span><span class="n">myIntegerVariable</span> <span class="nl">forKey:</span><span class="s">@&quot;anInteger&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Here is the corresponding initWithCoder:  method, which sets up the object and loads the encoded data:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nf">initWithCoder:</span><span class="p">(</span><span class="n">NSKeyedUnarchiver</span><span class="o">*</span><span class="p">)</span><span class="nv">aDecoder</span> <span class="p">{</span>
</span><span class='line'><span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">myStringVariable</span> <span class="o">=</span> <span class="p">[</span><span class="n">aDecoder</span> <span class="nl">decodeObjectForKey:</span><span class="s">@&quot;myString&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">myIntegerVariable</span> <span class="o">=</span> <span class="p">[</span><span class="n">aDecoder</span> <span class="nl">decodeIntegerForKey:</span><span class="s">@&quot;anInteger&quot;</span><span class="p">];</span>
</span><span class='line'><span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>To actually convert an object to a usable NSData, you can do this:</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// myObject is an object that </span>
</span><span class='line'><span class="c1">//conforms to NSCoding</span>
</span><span class='line'><span class="n">NSData</span><span class="o">*</span> <span class="n">object</span> <span class="n">storedData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSKeyedArchiver</span> <span class="nl">archivedDataWithRootObject:</span><span class="n">myObject</span><span class="p">];</span>
</span><span class='line'><span class="c1">// storedData can now be written to a file</span>
</span><span class='line'><span class="n">To</span> <span class="n">load</span> <span class="n">it</span> <span class="n">back</span><span class="p">,</span> <span class="n">you</span> <span class="n">can</span> <span class="k">do</span> <span class="nl">this:</span>
</span><span class='line'><span class="c1">// loadedData is an NSData loaded from somewhere, and SomeObject is </span>
</span><span class='line'><span class="c1">//a class that conforms to NSCoding</span>
</span><span class='line'><span class="n">SomeObject</span><span class="o">*</span> <span class="n">myObject</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSKeyedUnarchiver</span> <span class="nl">unarchiveObjectWithData:</span><span class="n">loadedData</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Design Patterns in Cocoa</h1>

<blockquote><p>Delegationis Cocoa’s term for passing off some responsibilities of an object to another.An example of this in action is the UIApplicationobject, which represents an application on iOS. This application needs to know what should happen when the application moves to the background. Many other languages handle this problem by subclassing</p></blockquote>

<p><img src="http://woody1983.github.com/images/img/ocnote2.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino Robot]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/05/arduino-robot/"/>
    <updated>2013-03-05T17:13:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/05/arduino-robot</id>
    <content type="html"><![CDATA[<h2>这玩意看的人心里长草&#8230;</h2>

<p><img src="http://woody1983.github.com/images/img/doob.jpg" width="300"></p>

<p>抽时间研究研究 还是蛮好玩的。</p>

<p><img src="http://woody1983.github.com/images/img/doob2.jpg" width="400"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Demo Note]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/05/objective-c-demo-note/"/>
    <updated>2013-03-05T16:38:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/05/objective-c-demo-note</id>
    <content type="html"><![CDATA[<h1>Project:Single View Application</h1>

<h2>MyFirstApp</h2>

<p><code>viewController.h</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span><span class="p">{</span>
</span><span class='line'>  <span class="kt">IBOutlet</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">nameLabel</span> <span class="c1">//新增一个数据成员</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">showName:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span><span class="p">;</span> <span class="c1">//新增一个方法showName</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>viewController.m</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;viewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWaring</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWaring</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">// 自带的？ Release any cache data, images, etc that aren&#39;t in use.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">showName:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">nameLabel</span> <span class="nl">setText:</span><span class="s">@&quot;My name is Johnny!&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>@interface 是声明一个类 大括号里面定义的是这个类的数据成员</li>
<li>在@end 之前定义的都是类方法  只定义 实现在@implementation部分实现</li>
<li>didReceiveMemoryWaring这个方法好像是自定义出来的</li>
</ul>


<!-- more -->


<h1>Project RadioStation</h1>

<h3>添加一个Objective-C Class : RadioStation</h3>

<p><code>RadioStation.h</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">RadioStation</span> : <span class="nc">NSObject</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">double</span> <span class="n">frequency</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSUInteger</span> <span class="n">band</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">minAMFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxAMFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">minFMFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxFMFrequency</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span> <span class="nf">atFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">name</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">frequency</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>RadioStation.m</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;RadioStation.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">RadioStation</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">minAMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">520.0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxAMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">1610.0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">minFMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">88.3</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">maxFMFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">107.9</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span> <span class="nf">atFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;initWithName is Running!</span><span class="se">\n</span><span class="s"> newFrequency is %f , name is %@&quot;</span><span class="p">,</span><span class="n">newFrequency</span><span class="p">,</span><span class="n">newName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">name</span> <span class="o">=</span> <span class="n">newName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">frequency</span> <span class="o">=</span> <span class="n">newFrequency</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">name</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;name is ok&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nf">frequency</span><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">frequency</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">newName</span><span class="p">{</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">newName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setFrequency:</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="nv">newFrequency</span><span class="p">{</span>
</span><span class='line'>    <span class="n">frequency</span> <span class="o">=</span> <span class="n">newFrequency</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>viewController.h</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="k">@class</span> <span class="nc">RadioStation</span>;
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">XYZViewController</span> : <span class="nc">UIViewController</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">RadioStation</span> <span class="o">*</span><span class="n">myStation</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">IBOutlet</span> <span class="n">UILabel</span><span class="o">*</span> <span class="n">stationName</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">IBOutlet</span> <span class="n">UILabel</span><span class="o">*</span> <span class="n">stationFrequency</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">IBOutlet</span> <span class="n">UILabel</span><span class="o">*</span> <span class="n">stationBand</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>viewController.m</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;XYZViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;RadioStation.h&quot;</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">XYZViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">implementation</span> <span class="n">XYZViewController</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">buttonClick:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">stationName</span> <span class="nl">setText:</span><span class="p">[</span><span class="n">myStation</span> <span class="n">name</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">stationFrequency</span> <span class="nl">setText:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%.1f&quot;</span><span class="p">,[</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]]];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(([</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="p">[</span><span class="n">RadioStation</span> <span class="n">minFMFrequency</span><span class="p">])</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>        <span class="p">([</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="p">[</span><span class="n">RadioStation</span> <span class="n">maxFMFrequency</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">stationBand</span> <span class="nl">setText:</span><span class="s">@&quot;FM&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">stationBand</span> <span class="nl">setText:</span><span class="s">@&quot;AM&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;buttonClick frequency = %f&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">myStation</span> <span class="n">frequency</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="n">myStation</span> <span class="o">=</span> <span class="p">[[</span><span class="n">RadioStation</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithName:</span><span class="s">@&quot;Woody Style&quot;</span> <span class="nl">atFrequency:</span><span class="mf">94.1</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;App is Running&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidUnload</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidUnload</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Release any retained subviews of the main view.</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nl">shouldAutorotateToInterfaceOrientation:</span><span class="p">(</span><span class="n">UIInterfaceOrientation</span><span class="p">)</span><span class="n">interfaceOrientation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">interfaceOrientation</span> <span class="o">!=</span> <span class="n">UIInterfaceOrientationPortraitUpsideDown</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://woody1983.github.com/images/img/oc_demo1.png" title="" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Note]]></title>
    <link href="http://woody1983.github.com/blog/2013/03/05/objective-c-note/"/>
    <updated>2013-03-05T14:18:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/03/05/objective-c-note</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">HelloWorld</span> : <span class="nc">NSObject</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">printGreeting</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">HelloWorld</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">printGreeting</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>      <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello World!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;HelloWorld.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">HelloWorld</span><span class="o">*</span> <span class="n">myObject</span> <span class="o">=</span> <span class="p">[[</span><span class="n">HelloWorld</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myObject</span> <span class="n">printGreeting</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">[</span><span class="n">myObject</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>还有上午其他的例子</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//@&quot;这里的内容应该作为Cocoa的NSString元素来处理&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 定义函数</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="nf">areIntsDifferent</span><span class="p">(</span><span class="kt">int</span> <span class="n">thing1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">thing2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">thing1</span> <span class="o">==</span> <span class="n">thing2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">NO</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">YES</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 返回一个BOOL类型的值  接受2个int类型的参数</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="nf">boolString</span> <span class="p">(</span><span class="kt">BOOL</span> <span class="n">yesNo</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">yesNo</span> <span class="o">==</span> <span class="n">NO</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="s">@&quot;NO&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="s">@&quot;YES&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">返回类型</span> <span class="err">函数名</span><span class="p">(</span><span class="err">参数类型</span> <span class="err">参数</span><span class="p">,</span><span class="err">参数类型</span><span class="mi">1</span> <span class="err">参数</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">// ...  code in here</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">main</span><span class="err">函数里调用的时候</span> <span class="err">先声明一个</span><span class="kt">BOOL</span><span class="err">类型的变量</span>
</span><span class='line'>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">areTheyDifferent</span><span class="p">;</span>
</span><span class='line'><span class="n">areTheyDifferent</span> <span class="o">=</span> <span class="n">areIntsDifferent</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;are %d and %d different? %@&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span> <span class="n">boolString</span><span class="p">(</span><span class="n">areTheyDifferent</span><span class="p">));</span><span class="c1">// 直接用返回值做参数</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//定义一个类  @interface 将该类的数据成员和特性告诉给编译器 </span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">Circle</span> : <span class="nc">NSObject</span>  <span class="c1">// 类名 来自NSObject类</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">ShapeColor</span> <span class="n">fillColor</span><span class="p">;</span>
</span><span class='line'>  <span class="n">ShapeRect</span> <span class="n">bounds</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="c1">// 告诉编译器circle对象需要的数据成员</span>
</span><span class='line'><span class="c1">//下面是方法的声明 </span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">draw</span><span class="p">;</span> <span class="c1">//方法需要参数的时候才需要一个冒号 否则就不需要</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">setFillColor</span> <span class="o">:</span> <span class="p">(</span><span class="n">ShapeColor</span><span class="p">)</span> <span class="n">fillColor</span><span class="p">;</span> <span class="c1">//参数的类型在圆括号里定义!?</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">setBounds</span> <span class="o">:</span> <span class="p">(</span><span class="n">ShapeRect</span><span class="p">)</span> <span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// void表示无返回值  -符号表示是类方法 区别于一般的函数原型和方法声明</span>
</span><span class='line'><span class="c1">// setFillColor 需要一个颜色参数</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// @implementation 中定义了类的实现部分</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">Circle</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">setFillColor:</span> <span class="p">(</span><span class="n">ShapeColor</span><span class="p">)</span> <span class="n">c</span> <span class="c1">//这个c是参数的重命名!!! @implementation 和 @interface的参数名不同是正确的。如果一致则会报错。</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">fillColor</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nl">setBounds:</span> <span class="p">(</span><span class="n">ShapeRect</span><span class="p">)</span> <span class="n">b</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">bounds</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">draw</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span> <span class="p">(</span><span class="s">@&quot;drawing a circle at (%d %d %d %d) in %@&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">bounds</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">bounds</span><span class="p">.</span><span class="n">y</span><span class="p">,</span>
</span><span class='line'>  <span class="n">bounds</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">bounds</span><span class="p">.</span><span class="n">height</span><span class="p">,</span>
</span><span class='line'>  <span class="n">colorName</span><span class="p">(</span><span class="n">fillColor</span><span class="p">)</span>
</span><span class='line'>  <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[个人理财黄金十条]]></title>
    <link href="http://woody1983.github.com/blog/2013/02/28/ge-ren-li-cai-huang-jin-shi-tiao/"/>
    <updated>2013-02-28T16:53:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/02/28/ge-ren-li-cai-huang-jin-shi-tiao</id>
    <content type="html"><![CDATA[<blockquote><p>Working hard and being smart with your money aren&#8217;t things you just should do because they seem virtuous — these behaviors ultimately allow you to get more enjoyment out of life. You&#8217;ll have no regrets when you&#8217;re able to accomplish what&#8217;s important to you because of your savvy ways. These are 10 golden rules that I try to live by; click through and then make a list of your own。你不该仅仅满足于努力工作和明智花钱，因为他们似乎不仅是一种美德，而且这些行为最终可以使你从生活中得到更多的乐趣。当你能用机智的方法完成重要的事情时，你不会有任何后悔和遗憾。这是我尝试过的10个黄金法则；你可以了解一下，然后列出自己的理财法则。</p></blockquote>

<h2>1.Live Within Your Means量入为出</h2>

<p>In order to be truly independent, it&#8217;s imperative</p>

<p>　　to live within your means. Your freedom is limited by owing money to anyone, whether it&#8217;s a credit card company or a family member, so set yourself up for an unrestricted life by saving for the things you want and spending with a plan。想要做到真正的独立，就必须学会量入为出。任何人的自由都会受到金钱的束缚，无论是欠的是信用卡公司还是家里的亲戚。因此，想要过上不受束缚的生活，就要学会通过储蓄来得到自己想要的东西，并学会有计划的开支。</p>

<!-- more -->


<h2>2.Work Hard努力工作</h2>

<p>Your job and the salary you command are your biggest assets in building wealth. Do your best at work and take the steps to make yourself indispensable to set yourself up for the highest level of success。你的工作与所能支配的工资是你建立财富的最大资产。努力工作，努力使自己一步步成长为不可或缺的人才，尽可能地迈向更大的成功。</p>

<h2>3.Research Before You Act先调查后行动</h2>

<p>Whether you&#8217;re comparing travel package and a la carte prices for a vacation or looking up a company to see if it&#8217;s legitimate, research is almost always worth your time。无论是比较度假的旅游套餐和点菜的价格，还是查询某公司是否合法，事前的研究都是值得你花时间去做的。</p>

<h2>4.Avoid Buyer&#8217;s Remorse避免购买后的自责</h2>

<p>Feeling guilty just doesn&#8217;t sit well. Avoid buyer&#8217;s remorse by asking yourself these questions before making a purchase: Do I love it? How often would I wear or use it? Can I afford it? Could I find it cheaper somewhere else?负罪感总是令人坐立不安。想要避免购买后的自责就要在采购之前先问自己几个问题：我喜欢它吗？我穿它或者用它的频率高吗？我买得起吗？别的地方有没有更便宜的？</p>

<h2>5.Avoid Saver&#8217;s Remorse避免省钱后的自责</h2>

<p>There is such a thing as being too thrifty for your own good. What&#8217;s the point of squirreling away so much cash if you can&#8217;t splurge occasionally on yourself and others? Include an amount of discretionary money into your budget to spend on things that you might not desperately need, but would make you smile。会有这样的事情发生，为了自己好而过分节俭。如果不能有时在周围人面前摆阔炫富，手里捧着大量现金有什么意义呢？将部分可自由支配的现金列入预算，买一些你并不是迫切需要、但会让自己开心的东西。</p>

<h2>6.Strive For Happiness为快乐而奋斗</h2>

<p>Finding a job that makes you happy most of the time is possible, and it&#8217;s worth taking risks to discover what fulfills you. If for one reason or another you&#8217;re stuck in a position that isn&#8217;t ideal, at least strive to end your day with something that does make you happy。找一份能让你多数时间都感到开心的工作，为了发现什么能让你获得自我满足感，花点代价是值得的。如果由于某种原因，你必须接受不理想的职位，最起码你应尽量发现可以使自己开心的事来结束每一天。</p>

<h2>7.Go For Quality, Not Quantity重质不重量</h2>

<p>Stuffing your closet with items that will fall apart in three months is a silly way to spend your hard earned cash. Buy a smaller quantity of things that are made to last, and you&#8217;ll be the owner of higher quality items that look and feel like they&#8217;re worth your money。用你辛辛苦苦赚的钱去买一些三个月就会坏的东西来装满你的壁橱是一种愚蠢的行为。买一些经久耐用的东西而不是单纯的追求数量，你会成为高品质生活的主人，而这些质量好的东西也会让你感觉到它们物有所值。</p>

<h2>8.Face Your Weaknesses Head-On直面自己的缺点</h2>

<p>We&#8217;re not perfect, but admitting that you have weaknesses and doing your best to improve will allow you to continue growing. Invest time in yourself to be the most well-rounded person you can be。人无完人，承认你的弱点并尽最大努力提升自己会让你不断成长。花费点时间在自己身上，努力让自己成为最完美的人。</p>

<h2>9.Save For the Predictable and the Unexpected储蓄，以备不时之需</h2>

<p>We&#8217;re all going to face retirement someday, and the best time to save for it is now. On the other hand, we also need to be prepared for the unexpected, like job loss or a medical emergency, so that we can remain in control of our finances even when other things aren&#8217;t going our way。我们都有退休的那天，现在就是存钱的最好时间。此外，我们平时应为不时之需而未雨绸缪，如失业或突发重病，这样，即使出现突发状况，我们也还能继续掌控我们的财政。</p>

<h2>10.Negotiate谈判</h2>

<p>Doors aren&#8217;t closed until you hear the word no. Negotiating things like salary and benefits can get you ahead of the game, and all you need is the confidence to ask。只要还没有听到“不”字，希望之门就是敞开的。谈判的内容可以是工资、福利这些可以让你在同行业中脱颖而出的东西。所以，你需要的做就是自信地去争取。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails3的嵌套练习]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/04/rails3de-qian-tao-lian-xi/"/>
    <updated>2013-01-04T14:41:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/04/rails3de-qian-tao-lian-xi</id>
    <content type="html"><![CDATA[<h3>假期一直想把嵌套模型的东西整理出来，因为用到的时候经常搞错。其实最重要的地方就是Routes和Path的变化。其余都还好，趁着下午比较无聊，开会之前做一个Demo，跑了一下还OK。</h3>

<!-- more -->


<h5>创建2个Model</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold</span> <span class="n">post</span> <span class="n">memo</span><span class="ss">:string</span> <span class="n">category</span><span class="ss">:string</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold</span> <span class="n">comment</span> <span class="n">content</span><span class="ss">:string</span> <span class="n">post_id</span><span class="ss">:integer</span>
</span></code></pre></td></tr></table></div></figure>


<h3>修改Data Migration的内容</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreatePosts</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:posts</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:memo</span><span class="p">,</span><span class="n">limit</span><span class="p">:</span> <span class="mi">1000</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:category</span><span class="p">,</span> <span class="n">limit</span><span class="p">:</span><span class="mi">20</span><span class="p">,</span> <span class="n">default</span><span class="p">:</span> <span class="s1">&#39;tweet&#39;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CreateComments</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:comments</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:content</span><span class="p">,</span><span class="n">limit</span><span class="p">:</span> <span class="mi">100</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:post_id</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>修改routes</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">resources</span> <span class="ss">:posts</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:comments</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="n">root</span><span class="vi">@mysql</span><span class="o">-</span><span class="nb">test</span><span class="o">-</span><span class="n">woody</span> <span class="no">ZombieTweets</span><span class="o">]</span><span class="c1"># rake routes</span>
</span><span class='line'>    <span class="n">post_comments</span> <span class="no">GET</span>    <span class="sr">/posts/</span><span class="ss">:post_id</span><span class="o">/</span><span class="n">comments</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>            <span class="n">comments</span><span class="c1">#index</span>
</span><span class='line'>                  <span class="no">POST</span>   <span class="sr">/posts/</span><span class="ss">:post_id</span><span class="o">/</span><span class="n">comments</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>            <span class="n">comments</span><span class="c1">#create</span>
</span><span class='line'> <span class="n">new_post_comment</span> <span class="no">GET</span>    <span class="sr">/posts/</span><span class="ss">:post_id</span><span class="o">/</span><span class="n">comments</span><span class="o">/</span><span class="kp">new</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>        <span class="n">comments</span><span class="c1">#new</span>
</span><span class='line'><span class="n">edit_post_comment</span> <span class="no">GET</span>    <span class="sr">/posts/</span><span class="ss">:post_id</span><span class="o">/</span><span class="n">comments</span><span class="o">/</span><span class="ss">:id</span><span class="o">/</span><span class="n">edit</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>   <span class="n">comments</span><span class="c1">#edit</span>
</span><span class='line'>     <span class="n">post_comment</span> <span class="no">GET</span>    <span class="sr">/posts/</span><span class="ss">:post_id</span><span class="o">/</span><span class="n">comments</span><span class="o">/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>        <span class="n">comments</span><span class="c1">#show</span>
</span><span class='line'>                  <span class="no">PUT</span>    <span class="sr">/posts/</span><span class="ss">:post_id</span><span class="o">/</span><span class="n">comments</span><span class="o">/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>        <span class="n">comments</span><span class="c1">#update</span>
</span><span class='line'>                  <span class="no">DELETE</span> <span class="sr">/posts/</span><span class="ss">:post_id</span><span class="o">/</span><span class="n">comments</span><span class="o">/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>        <span class="n">comments</span><span class="c1">#destroy</span>
</span><span class='line'>            <span class="n">posts</span> <span class="no">GET</span>    <span class="sr">/posts(.:format)                              posts#index</span>
</span><span class='line'><span class="sr">                  POST   /</span><span class="n">posts</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                              <span class="n">posts</span><span class="c1">#create</span>
</span><span class='line'>         <span class="n">new_post</span> <span class="no">GET</span>    <span class="sr">/posts/ne</span><span class="n">w</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                          <span class="n">posts</span><span class="c1">#new</span>
</span><span class='line'>        <span class="n">edit_post</span> <span class="no">GET</span>    <span class="sr">/posts/</span><span class="ss">:id</span><span class="o">/</span><span class="n">edit</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                     <span class="n">posts</span><span class="c1">#edit</span>
</span><span class='line'>             <span class="n">post</span> <span class="no">GET</span>    <span class="sr">/posts/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                          <span class="n">posts</span><span class="c1">#show</span>
</span><span class='line'>                  <span class="no">PUT</span>    <span class="sr">/posts/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                          <span class="n">posts</span><span class="c1">#update</span>
</span><span class='line'>                  <span class="no">DELETE</span> <span class="sr">/posts/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                          <span class="n">posts</span><span class="c1">#destroy</span>
</span><span class='line'>    <span class="n">zombie_tweets</span> <span class="no">GET</span>    <span class="sr">/zombies/</span><span class="ss">:zombie_id</span><span class="o">/</span><span class="n">tweets</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>          <span class="n">tweets</span><span class="c1">#index</span>
</span><span class='line'>                  <span class="no">POST</span>   <span class="sr">/zombies/</span><span class="ss">:zombie_id</span><span class="o">/</span><span class="n">tweets</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>          <span class="n">tweets</span><span class="c1">#create</span>
</span><span class='line'> <span class="n">new_zombie_tweet</span> <span class="no">GET</span>    <span class="sr">/zombies/</span><span class="ss">:zombie_id</span><span class="o">/</span><span class="n">tweets</span><span class="o">/</span><span class="kp">new</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>      <span class="n">tweets</span><span class="c1">#new</span>
</span><span class='line'><span class="n">edit_zombie_tweet</span> <span class="no">GET</span>    <span class="sr">/zombies/</span><span class="ss">:zombie_id</span><span class="o">/</span><span class="n">tweets</span><span class="o">/</span><span class="ss">:id</span><span class="o">/</span><span class="n">edit</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span> <span class="n">tweets</span><span class="c1">#edit</span>
</span><span class='line'>     <span class="n">zombie_tweet</span> <span class="no">GET</span>    <span class="sr">/zombies/</span><span class="ss">:zombie_id</span><span class="o">/</span><span class="n">tweets</span><span class="o">/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>      <span class="n">tweets</span><span class="c1">#show</span>
</span><span class='line'>                  <span class="no">PUT</span>    <span class="sr">/zombies/</span><span class="ss">:zombie_id</span><span class="o">/</span><span class="n">tweets</span><span class="o">/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>      <span class="n">tweets</span><span class="c1">#update</span>
</span><span class='line'>                  <span class="no">DELETE</span> <span class="sr">/zombies/</span><span class="ss">:zombie_id</span><span class="o">/</span><span class="n">tweets</span><span class="o">/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>      <span class="n">tweets</span><span class="c1">#destroy</span>
</span><span class='line'>          <span class="n">zombies</span> <span class="no">GET</span>    <span class="sr">/zombies(.:format)                            zombies#index</span>
</span><span class='line'><span class="sr">                  POST   /</span><span class="n">zombies</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                            <span class="n">zombies</span><span class="c1">#create</span>
</span><span class='line'>       <span class="n">new_zombie</span> <span class="no">GET</span>    <span class="sr">/zombies/ne</span><span class="n">w</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                        <span class="n">zombies</span><span class="c1">#new</span>
</span><span class='line'>      <span class="n">edit_zombie</span> <span class="no">GET</span>    <span class="sr">/zombies/</span><span class="ss">:id</span><span class="o">/</span><span class="n">edit</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                   <span class="n">zombies</span><span class="c1">#edit</span>
</span><span class='line'>           <span class="n">zombie</span> <span class="no">GET</span>    <span class="sr">/zombies/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                        <span class="n">zombies</span><span class="c1">#show</span>
</span><span class='line'>                  <span class="no">PUT</span>    <span class="sr">/zombies/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                        <span class="n">zombies</span><span class="c1">#update</span>
</span><span class='line'>                  <span class="no">DELETE</span> <span class="sr">/zombies/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span>                        <span class="n">zombies</span><span class="c1">#destroy</span>
</span></code></pre></td></tr></table></div></figure>


<h3>修改Model</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:category</span><span class="p">,</span> <span class="ss">:memo</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:comments</span><span class="p">,</span> <span class="n">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">:post_is</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:post</span><span class="p">,</span> <span class="n">foreign_key</span><span class="p">:</span> <span class="ss">:post_id</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>修改controller</h3>

<h4>主要是修改Comments的controller 先获取上一级Post的信息</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before_filter</span> <span class="ss">:get_post</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_post</span>
</span><span class='line'>  <span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:post_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>              
</span><span class='line'><span class="n">index</span> <span class="o">||</span> <span class="vi">@comments</span> <span class="o">=</span> <span class="no">Comment</span><span class="o">.</span><span class="n">all</span> <span class="err">修改成</span><span class="vi">@comments</span> <span class="o">=&gt;</span> <span class="vi">@post</span><span class="o">.</span><span class="n">comments</span>             
</span><span class='line'><span class="n">show</span>  <span class="o">||</span> <span class="vi">@comment</span> <span class="o">=</span> <span class="no">Comment</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="vi">@comment</span> <span class="o">=</span>  <span class="vi">@post</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="kp">new</span> <span class="err">和</span> <span class="n">edit</span> <span class="err">不变</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Create</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="vi">@comment</span> <span class="o">=</span> <span class="no">Comment</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:comment</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@comment</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Comment was successfully created.&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="vi">@comment</span><span class="p">,</span> <span class="n">status</span><span class="p">:</span> <span class="ss">:created</span><span class="p">,</span> <span class="n">location</span><span class="p">:</span> <span class="vi">@comment</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s2">&quot;new&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="n">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">修改</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="vi">@comment</span> <span class="o">=</span> <span class="vi">@post</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:comment</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span><span class="n">redirect_to</span> <span class="o">[</span><span class="vi">@post</span><span class="p">,</span><span class="vi">@comment</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                     <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Comment was successfully created.&#39;</span><span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="o">[</span><span class="vi">@post</span><span class="p">,</span><span class="vi">@comment</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                             <span class="n">status</span><span class="p">:</span> <span class="ss">:created</span><span class="p">,</span>
</span><span class='line'>                             <span class="n">location</span><span class="p">:</span> <span class="o">[</span><span class="vi">@post</span><span class="p">,</span><span class="vi">@comment</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s2">&quot;new&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span>
</span><span class='line'>                             <span class="n">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Update</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">update</span>
</span><span class='line'>    <span class="vi">@comment</span> <span class="o">=</span> <span class="no">Comment</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:comment</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@comment</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Comment was successfully updated.&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s2">&quot;edit&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="n">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">修改</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">update</span>
</span><span class='line'>    <span class="vi">@comment</span> <span class="o">=</span> <span class="vi">@post</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:comment</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="o">[</span><span class="vi">@post</span><span class="p">,</span><span class="vi">@comment</span><span class="o">]</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Comment was successfully updated.&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s2">&quot;edit&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="vi">@comment</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="n">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Destroy</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>    <span class="vi">@comment</span> <span class="o">=</span> <span class="no">Comment</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@comment</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="n">comments_url</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">修改</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>    <span class="vi">@comment</span> <span class="o">=</span> <span class="vi">@post</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@comment</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="n">post_comments_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>View 修改部分</h3>

<h4>post 页面</h4>

<p>添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;New Comment&#39;</span><span class="p">,</span><span class="n">new_post_comment_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Comments Index页面</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= link_to &#39;Show&#39;, [@post, comment] %&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="sx">&lt;td&gt;&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Edit&#39;</span><span class="p">,</span> <span class="n">edit_post_comment_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">,</span> <span class="n">comment</span><span class="p">)</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= link_to &#39;Destroy&#39;, [@post, comment], method: :delete, data: { confirm: &#39;Are you sure?&#39; } %&gt;&lt;/td&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;New Comment&#39;</span><span class="p">,</span><span class="n">new_post_comment_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Comments show 页面</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &#39;Edit&#39;, edit_post_comment_path(@post,@comment) %&gt; |</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Back&#39;</span><span class="p">,</span> <span class="n">post_comments_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>new</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Back&#39;</span><span class="p">,</span> <span class="n">post_comments_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>edit</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &#39;Show&#39;, post_comments_path(@post,@comment) %&gt; |</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Back&#39;</span><span class="p">,</span> <span class="n">post_comments_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>form_for</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="o">[</span><span class="vi">@post</span><span class="p">,</span> <span class="vi">@comment</span><span class="o">]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>将post_id的text_field删除</p></blockquote>

<p>All Post</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &#39;Post&#39;,@post %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span> <span class="o">[</span><span class="vi">@post</span><span class="p">,</span> <span class="n">comment</span><span class="o">]</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails3 Notes Model]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/rails3-notes-model/"/>
    <updated>2013-01-03T22:21:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/rails3-notes-model</id>
    <content type="html"><![CDATA[<h4>Rails3 中和Model有关的内容我单独整理出来了。可能是做数据库的时间比较多，喜欢从数据的层面分析问题。</h4>

<!-- more -->


<h1>Rails Model</h1>

<h2>Names Scope</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:rotting</span><span class="p">,</span> <span class="n">where</span><span class="p">(</span><span class="n">rotting</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:fresh</span><span class="p">,</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;age &lt; 20&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:recent</span><span class="p">,</span> <span class="n">order</span><span class="p">(</span><span class="s2">&quot;created_at desc&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用比较简单 直接在Crontroller中Call这些Scope</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Zombie</span><span class="o">.</span><span class="n">rotting</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="no">Zombie</span><span class="o">.</span><span class="n">recent</span><span class="o">.</span><span class="n">fresh</span><span class="o">.</span><span class="n">rotting</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Callbacks</h2>

<blockquote><p>应用场景比较简单，比如在save一个对象之前，根据目前这个对象的一些属性自动赋值。ex: When zombie age > 20 , set rotting to true.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">defore_save</span> <span class="ss">:make_rotting</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">make_rotting</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">rotting</span> <span class="o">=</span> <span class="kp">true</span> <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">20</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>All Callbacks</h4>

<ul>
<li>before_validation</li>
<li>save</li>
<li>create</li>
<li>update</li>
<li>destroy</li>
</ul>


<h2>model关系</h2>

<blockquote><p>单数和复数 has_one has_many belongs_to.复数的形式和英语标准文法里一致</p></blockquote>

<h1>Create Model 单数</h1>

<p><code>rails g model 单数 column:type</code></p>

<h2>dependent: :destroy</h2>

<p>has_one</p>

<h2>&#8220;include&#8221; option</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">all</span> <span class="c1">#然后在view里再去拉brain的数据 </span>
</span><span class='line'><span class="vi">@zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:brain</span><span class="p">)</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="c1">#Brain Load (0.3ms) SELECT * FROM &quot;brains&quot; WHERE &quot;zombie_id&quot; IN (4, 5, 6, 7)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>through</h2>

<blockquote><p>创建R表 也就是关联表。然后多对多关系的两边 同时宣告拥有多个R表 并且拥有多个第二个模型</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_many</span> <span class="ss">:assignments</span>
</span><span class='line'><span class="n">has_many</span> <span class="ss">:roles</span><span class="p">,</span> <span class="n">through</span><span class="p">:</span> <span class="ss">:assignments</span>
</span></code></pre></td></tr></table></div></figure>


<p>through关系建立完毕以后，创建多对多数据时 可以直接向第二个对象添加 ex</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">z</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'><span class="n">z</span><span class="o">.</span><span class="n">roles</span> <span class="o">&lt;&lt;</span> <span class="no">Role</span><span class="o">.</span><span class="n">find_by_title</span><span class="p">(</span><span class="s1">&#39;Captain&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#也可以用z.roles.push 看个人习惯</span>
</span><span class='line'><span class="err">这个时候</span><span class="n">check</span><span class="err">一下</span><span class="n">role</span><span class="err">的数据会看到他会</span><span class="n">inner</span> <span class="n">join</span><span class="err">关系表</span> <span class="err">调用</span><span class="n">a</span><span class="err">表的时候会使用</span><span class="n">b</span><span class="err">表的主键</span>
</span><span class='line'><span class="n">z</span><span class="o">.</span><span class="n">roles</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails3 Notes about view]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/rails3-notes-about-view/"/>
    <updated>2013-01-03T22:19:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/rails3-notes-about-view</id>
    <content type="html"><![CDATA[<h4>Rails3中View的Helper提供了很多实用的方法。</h4>

<!-- more -->


<h1>Viewer</h1>

<h2>Create a form</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">form_for</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果<code>@zombie</code>已经存在数据库里了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="o">&lt;</span><span class="n">form</span> <span class="n">action</span><span class="o">=</span><span class="s2">&quot;/zombies/8&quot;</span> <span class="nb">method</span><span class="o">=</span><span class="s2">&quot;post&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">input</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;_method&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;put&quot;</span> <span class="sr">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>否则就是post</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">form</span> <span class="n">action</span><span class="o">=</span><span class="s2">&quot;/zombies&quot;</span> <span class="nb">method</span><span class="o">=</span><span class="s2">&quot;post&quot;</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>f.submit</code>也是根据Zombie数据对象再数据库是否存在而选择显示Create 还是Update</p>

<h1>常见的Text_field</h1>

<p><code>f.text_field :name</code>提交出去的时候数据模型是这样子的</p>

<p><code>:params =&gt; {:zombie =&gt;{:name =&gt; 'Name'}}</code></p>

<h1>Label helper</h1>

<p><code>f.label :name</code> 在html里显示<code>&lt;label for="zombie_name"&gt;Name&lt;/label&gt;</code></p>

<h1>input helpers</h1>

<ul>
<li>text_area</li>
<li>check_box</li>
<li>radio_button :decomp, &#8216;fresh&#8217;, checked: true</li>
<li>select :decomp, [&#8216;frsh&#8217;,&#8217;new&#8217;]</li>
<li>select :decomp, [[&#8216;fresh,1],[&#8216;new&#8217;,2]]</li>
<li>password_field</li>
<li>number_field</li>
<li>range_field</li>
<li>email_field</li>
<li>url_field</li>
<li>telephone_field</li>
</ul>


<h2>Partials 减少重复代码 比如新建和更新的表单</h2>

<p>&lt;% render &#8216;form&#8217;%> <code>_form.html.erb</code></p>

<h1>View helper</h1>

<h2>div_for</h2>

<p>之前的<code>&lt;div id="tweet_&lt;%= tweet.id%&gt;" class='tweet'&gt;</code>可以写成
&lt;%= div_for tweet do %>
<code>dom_id(@tweet)</code> => tweet_2</p>

<h2>截断字符串</h2>

<p><code>truncate("I need brains!", :length =&gt; 10,:separator =&gt; ' ')</code>
:separator是为了保证不会切半个单词什么的。</p>

<h2>自动显示数量词单复数形式</h2>

<p><code>pluralize(Zombie.count,"zombie")</code></p>

<h2>String的标题化 //首字母自动大小写之类的设置 很使用</h2>

<p><code>@zombie.name.titleize</code></p>

<h2>队列化 a , b and c</h2>

<p><code>@role.name.to_sentence</code></p>

<h2>时间间隔表达</h2>

<p><code>time_ago_in_words @zombie.created_at</code></p>

<h2>Number的转换</h2>

<ul>
<li>number_to_currency</li>
<li>number_to_human</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Holiday Notes with Rails3]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/holiday-notes-with-rails/"/>
    <updated>2013-01-03T22:11:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/holiday-notes-with-rails</id>
    <content type="html"><![CDATA[<h4>假期没有出去玩 在家里宅了十几天的时间，基本消耗在Rails和德州扑克上多一些。现在开始整理笔记了，之前写的太乱。</h4>

<!-- more -->


<h1>Rails 重新开始</h1>

<blockquote><p>这个是在CodeSchool上学习的Rails开发教程的笔记。纪录下来，认真回过头好好复习一下。</p></blockquote>

<h1>Install Rails</h1>

<p>rails new TwitterForZombies</p>

<h2>Rails Commands</h2>

<ul>
<li>generate</li>
<li>console</li>
<li>server</li>
<li>dbconsole</li>
</ul>


<h2>Using Generators</h2>

<ul>
<li>helper</li>
<li>mailer</li>
<li>migration</li>
<li>model</li>
<li>scaffold</li>
</ul>


<h2>Using Scaffold</h2>

<p><code>rails g scaffold NAME [field:type field:type]</code></p>

<h2>Variable types</h2>

<ul>
<li>string</li>
<li>text</li>
<li>integer</li>
<li>boolean</li>
<li>decimal</li>
<li>float</li>
<li>binary</li>
<li>date</li>
<li>time</li>
<li>datetime</li>
</ul>


<h1>DB Migration</h1>

<h2>Create table in Migration</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>create_table :tablename do |t|
</span><span class='line'>  t.数据类型 :column_name
</span><span class='line'>  t.text :bio
</span><span class='line'>  t.index :name #add index with db
</span><span class='line'>  t.timestamps# same as t.datetime :created_at t.datetime :updated_at
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Adding Columns</h2>

<ul>
<li>AddColumn<code>Add&lt;Column_name&gt;To&lt;table_name&gt;</code></li>
<li>RemoveColumn <code>Remove&lt;&gt;From&lt;&gt;</code></li>
<li>add_index :table, :column</li>
<li>rename_column :table_name, :old, :new</li>
<li>rename_table :old_table, :new_table</li>
<li>drop_table :table_name</li>
<li>change_column :table, :column, :type, :options</li>
<li>change_column_default :table, :column, default: true/&#8217;string&#8217;</li>
</ul>


<p><code>rails g migration Drop__Table</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>  <span class="n">add_column</span> <span class="ss">:zombies</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:string</span><span class="p">,</span> <span class="n">limit</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span><span class="n">unique</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1> Migration options</h1>

<ul>
<li>default: <value></li>
<li>limit: 30</li>
<li>null: false</li>
<li>first: true</li>
<li>after: email</li>
<li>unique: true</li>
</ul>


<h2>Run Migrations</h2>

<ul>
<li>rake db:migrate</li>
<li>rake db:rollback</li>
<li>rake db:schema:dump #->￼db/schema.rb</li>
<li>rake db:setup</li>
</ul>


<h1>Ruby 1.9 Hash New Syntax</h1>

<p><code>{name: "hash new stntax"}</code>
<code>{render json: @zombies }</code></p>

<h1>REST {Link_to:}</h1>

<h3>to link to each action</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span> <span class="n">zombie</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">zombie</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;edit&#39;</span><span class="p">,</span> <span class="n">zombie</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:put</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="n">zombie</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span>
</span></code></pre></td></tr></table></div></figure>


<h2>resources :zombies</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &#39;All Zombies&#39;,  zombie_path %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;New Zombies&#39;</span><span class="p">,</span>  <span class="n">new_zombie_path</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= link_to &#39;Edit Zombies&#39;, edit_zombie_path(@zombie) %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &#39;Show Zombies&#39;, zombie_path(@zombie) %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Show Zombies&#39;</span><span class="p">,</span> <span class="vi">@zombie</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Nested Routes</h1>

<blockquote><p>嵌套路由 感觉平时项目里会经常用到 毕竟两个数据模型并行计算和处理的时候实在是太多了。</p></blockquote>

<p>标准写法是：将routes写成嵌套写法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:zombie</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:tweets</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>嵌套路由写好以后 还修改crontroller &amp; viewer{link_fo form_for}</p>

<h2>标准的嵌套url是 /zombies/4/tweets/2 /zombies/4/tweets</h2>

<p>那么在tweets的crontroller里 会接受到zombie和tweet两个id传参进来。</p>

<p>先在tweets&#8217;s crontroller中定义一个filter 来获取上一级信息 比如zombie
<code>before_filter :get_zombie</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">get_zombie</span>
</span><span class='line'>  <span class="vi">@zombie</span> <span class="o">=</span> <span class="no">Zombie</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:zombie_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">zombie</span> <span class="err">已经查出来了</span> <span class="n">show</span><span class="err">和</span><span class="n">index</span><span class="err">可以直接调用</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="vi">@tweet</span> <span class="o">=</span> <span class="vi">@zombie</span><span class="o">.</span><span class="n">tweets</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@tweets</span> <span class="o">=</span> <span class="vi">@zombie</span><span class="o">.</span><span class="n">tweets</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>在Nested rake routes的link写法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">link_to</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@zombie</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">&#39;s Tweets&quot;</span><span class="p">,</span> <span class="n">zombie_tweets_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;New Tweet&#39;</span><span class="p">,</span> <span class="n">new_zombie_tweet_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Edit Tweet&#39;</span><span class="p">,</span> <span class="n">edit_zombie_tweet_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">show</span> <span class="err">有两种写法</span> <span class="err">哪个简单用哪个</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span> <span class="n">zombie_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="p">)</span>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">link_to</span> <span class="s1">&#39;Destroy&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span><span class="p">,</span><span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span>
</span></code></pre></td></tr></table></div></figure>


<h2>嵌套的显示Viewer</h2>

<p>在二级目录里的index显示 需要使用到上一级资源的调用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="vi">@tweets</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tweets</span><span class="o">|</span>
</span><span class='line'>   <span class="n">tweet</span><span class="p">,</span><span class="n">body</span>
</span><span class='line'>   <span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span>
</span><span class='line'>   <span class="n">link_to</span> <span class="s1">&#39;Edit&#39;</span><span class="p">,</span><span class="n">edit_zombie_tweet_path</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span>
</span><span class='line'>   <span class="n">link_to</span> <span class="s1">&#39;Edstroy&#39;</span><span class="p">,</span><span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="n">tweet</span><span class="o">]</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="n">link_to</span> <span class="s1">&#39;New Tweet&#39;</span><span class="p">,</span><span class="n">new_zombie_tweet_path</span><span class="p">(</span><span class="vi">@zombie</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>创建_form 表单比较简单</h3>

<p><code>form_for([@zombie,@tweet]) do |f|</code></p>

<h3>嵌套路由里 Controller中就不能直接些二级目录数据实体</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>  <span class="vi">@tweet</span> <span class="o">=</span> <span class="vi">@zombie</span><span class="o">.</span><span class="n">tweets</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:tweet</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="err">返回信息的时候要将</span><span class="mi">2</span><span class="err">级目录的信息一起返回。</span>
</span><span class='line'>
</span><span class='line'><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@tweet</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span><span class="n">redirect_to</span> <span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="vi">@tweet</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Tweet was successfully created.&#39;</span><span class="p">}</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="vi">@tweet</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">status</span><span class="p">:</span> <span class="ss">:created</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">location</span><span class="p">:</span> <span class="o">[</span><span class="vi">@zombie</span><span class="p">,</span><span class="vi">@tweet</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s2">&quot;new&quot;</span> <span class="p">}</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="vi">@tweet</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span>
</span><span class='line'>                                <span class="n">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Asset Pipeline</h1>

<p>所有的tag 不需要指明路径 因为所有的资源调用和显示都会指向到<code>/assets/</code></p>

<ul>
<li>&lt;%= javascript_include_tag &#8220;custom&#8221; %></li>
<li>&lt;%= stylesheet_link_tag &#8220;style&#8221; %></li>
<li>&lt;%= image_tag &#8220;rails.png&#8221; %></li>
</ul>


<p>在css中调用一些图片的路径时 需要使用asset_path 否则无法使用缓存里的文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">form_new_zombie</span> <span class="n">input</span><span class="o">.</span><span class="n">submit</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">background</span><span class="o">-</span><span class="n">image</span><span class="p">:</span> <span class="n">url</span><span class="p">(</span><span class="o">&lt;%=</span> <span class="n">asset_path</span><span class="p">(</span><span class="s1">&#39;button.png&#39;</span><span class="p">)</span> <span class="o">%&gt;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>SCSS</h1>

<p><code>zombie.css.scss.erb</code> 嵌套写法的css</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">form</span><span class="o">.</span><span class="n">new_zombie</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">border</span><span class="p">:</span> <span class="mi">1</span><span class="n">px</span> <span class="n">dashed</span> <span class="n">gray</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">.</span><span class="n">field</span><span class="c1">#bio {</span>
</span><span class='line'>    <span class="nb">display</span><span class="p">:</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">input</span><span class="o">.</span><span class="n">submit</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">background</span><span class="o">-</span><span class="n">image</span><span class="p">:</span> <span class="n">url</span><span class="p">(</span><span class="o">&lt;%=</span> <span class="n">asset_path</span><span class="p">(</span><span class="s1">&#39;button.png&#39;</span><span class="p">)</span> <span class="o">%&gt;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails For Zombie]]></title>
    <link href="http://woody1983.github.com/blog/2013/01/03/rails-for-zombie/"/>
    <updated>2013-01-03T21:58:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2013/01/03/rails-for-zombie</id>
    <content type="html"><![CDATA[<h3>这是国外的一个在线教育平台的课程 感觉非常不错 有很多知识点。现在共享出来，一起学习。</h3>

<!-- more -->


<h4>Rails new</h4>

<blockquote><p>Enter the command to start a new rails app called &#8216;ZombieTweets&#8217;</p></blockquote>

<p>rails new Zombi­eTweets</p>

<h4>GENERATE SCAFFOLD</h4>

<blockquote><p>Enter the command to create tweet scaffold with a string status and an integer of zombie_id</p></blockquote>

<p>rails g scaff­old tweet­ statu­s:string zombi­e_id:integ­er</p>

<h4>RUN MIGRATION</h4>

<blockquote><p>Enter the command to run the migration you just created.</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake db:mi­grate
</span><span class='line'>==  CreateTweets: migrating ===================================================
</span><span class='line'>-- create_table(:tweets)
</span><span class='line'>   -&gt; 0.0017s
</span><span class='line'>==  CreateTweets: migrated (0.0025s) ==========================</span></code></pre></td></tr></table></div></figure>


<h4>BOOT IT UP</h4>

<blockquote><p>Enter the command to start a rails server</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails s
</span><span class='line'>=&gt; Booting WEBrick
</span><span class='line'>=&gt; Rails 3.1.0 application starting in development on http://0.0.0.0:3000
</span><span class='line'>=&gt; Call with -d to detach
</span><span class='line'>=&gt; Ctrl-C to shutdown server
</span><span class='line'>[2013-01-03 12-26-14] INFO  WEBrick 1.3.1
</span><span class='line'>[2013-01-03 12-26-14] INFO  ruby 1.9.2 (2011-02-18) [x86_64-darwin10.7.0]
</span><span class='line'>[2013-01-03 12-26-14] INFO  WEBrick::HTTPServer#start: pid=35740 port=3000</span></code></pre></td></tr></table></div></figure>


<h4>ADD COLUMN TO TABLE</h4>

<blockquote><p>Enter the command line text to generate a migration called AddPrivateToTweets which adds a boolean field called private.</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails g migra­tion AddPr­ivateToTwe­ets priva­te:boolean­
</span><span class='line'>invoke  active_record
</span><span class='line'>create    db/migrate/20130103122847_add_private_to_tweets.rb</span></code></pre></td></tr></table></div></figure>


<h4>ROLLBACK MIGRATION</h4>

<blockquote><p>Assume we ran that last migration. However we forgot a column we wanted to add, could you please roll it back from the command line?</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake db:ro­llback
</span><span class='line'>==  AddLocationToTweets: reverting ============================================
</span><span class='line'>-- remove_column("tweets", :show_location)
</span><span class='line'>   -&gt; 0.0008s
</span><span class='line'>-- remove_column("tweets", :location)
</span><span class='line'>   -&gt; 0.0003s
</span><span class='line'>==  AddLocationToTweets: reverted (0.0012s) ===================================</span></code></pre></td></tr></table></div></figure>


<h4>REMOVE COLUMN</h4>

<blockquote><p>On second thought, that category_name string column was a bad idea. Write a migration to remove the category_name column.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">RemoveCategoryNameFromTweets</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">up</span>
</span><span class='line'>    <span class="n">remove_column</span> <span class="ss">:tweets</span> <span class="p">,</span> <span class="ss">:category_name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">down</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:tweets</span><span class="p">,</span><span class="ss">:category_name</span> <span class="p">,</span> <span class="ss">:string</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>DATABASE SETUP</h4>

<blockquote><p>You&#8217;ve decided to install the app on another computer. Please enter the command you should use (instead of rake db:migrate) to create the database, load the schema, and run the seed file.</p></blockquote>

<p>rake db:setup</p>

<h4>IN THE CONSOLE</h4>

<blockquote><p>Enter the command to enter the Rails console</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Enter the command to enter the Rails console.
You are now running in the Rails console!
Experiment with creating a new Tweet and saving it to the database. Type next to move on.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="o">&gt;</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">crea</span><span class="err">­</span><span class="n">te</span><span class="p">(</span><span class="n">message</span><span class="err">­</span><span class="p">:</span> <span class="s1">&#39;hell­o&#39;</span><span class="p">,</span> <span class="n">categ</span><span class="err">­</span><span class="n">ory_name</span><span class="p">:</span> <span class="s1">&#39;cate­gory&#39;</span><span class="p">,</span> <span class="n">locat</span><span class="err">­</span><span class="n">ion</span><span class="p">:</span> <span class="s1">&#39;Chin­a&#39;</span><span class="p">,</span> <span class="n">show_</span><span class="err">­</span><span class="n">location</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span><span class="err">­</span> <span class="n">zombi</span><span class="err">­</span><span class="n">e_id</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c1">#&lt;Tweet id: 1, message: &quot;hello&quot;, category_name: &quot;category&quot;, location: &quot;China&quot;, show_location: true, zombie_id: 1&gt;</span>
</span><span class='line'><span class="n">ruby</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>schema:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">create_table</span><span class="p">(</span><span class="ss">:tweets</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:message</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:category_name</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:location</span><span class="p">,</span> <span class="ss">:limit</span> <span class="o">=&gt;</span> <span class="mi">30</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">boolean</span> <span class="ss">:show_location</span><span class="p">,</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:zombie_id</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>SCOPES</h4>

<blockquote><p>Write a scope on the Tweet model called recent which returns the 4 most recent tweets. Hint: You&#8217;ll need an order AND a limit scope.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:recent</span> <span class="p">,</span> <span class="n">order</span><span class="p">(</span><span class="s2">&quot;created_at desc&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Write another scope called graveyard which only shows tweets where the show_location column is true and the location is &#8220;graveyard&#8221;</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:recent</span><span class="p">,</span> <span class="n">order</span><span class="p">(</span><span class="s1">&#39;created_at desc&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:graveyard</span><span class="p">,</span> <span class="n">where</span><span class="p">(</span><span class="n">show_location</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span><span class="n">location</span><span class="p">:</span> <span class="s1">&#39;graveyard&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>USING SCOPES</h4>

<blockquote><p>In this controller action create an instance variable called @graveyard_tweets which uses both of the two scopes recent and graveyard together.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TweetsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@tweets</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>    <span class="vi">@graveyard_tweets</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">recent</span><span class="o">.</span><span class="n">graveyard</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>BEFORE SAVE</h4>

<blockquote><p>Create a before_save callback that checks to see if a tweet has a location, if it does have a location then set show_location to true.
Tip: You can check to see if location exists with if self.location?</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">before_save</span> <span class="ss">:tweet</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">tweet</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">show_location</span> <span class="o">=</span> <span class="kp">true</span> <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">location</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>CALLBACK LOGGING</h4>

<blockquote><p>Add callbacks so the appropriate log function is called after an update and destroy.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'><span class="n">after_update</span> <span class="ss">:log_update</span>
</span><span class='line'><span class="n">after_destroy</span> <span class="ss">:log_destroy</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">log_update</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Tweet </span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2"> updated&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">log_destroy</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Tweet </span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2"> deleted&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>HAS ONE</h4>

<blockquote><p>Instead of storing location inside the Tweet model, let&#8217;s instead break it out into a separate table (as you see below). In this case we want to define that a Tweet can have one Location, and a Location belongs to a Tweet. Fill out the models below accordingly.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="n">has_one</span> <span class="ss">:location</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Location</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="n">belongs_to</span> <span class="ss">:tweet</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>FOREIGN KEY</h4>

<blockquote><p>OH NO! Our Database Admin turned into a Zombie and decided to rename the belongs_to field in our locations table tweeter_id instead of the intelligent default tweet_id. We&#8217;re going to slay him and correct this, but in the meantime set the foreign_key on both relationships to tweeter_id. Also set the dependency so when a tweet is destroyed, the location is destroyed as well.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:location</span><span class="p">,</span> <span class="n">dependent</span><span class="p">:</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="n">foreign_key</span><span class="p">:</span> <span class="ss">:tweeter_id</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Location</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:tweet</span><span class="p">,</span> <span class="n">foreign_key</span><span class="p">:</span> <span class="ss">:tweeter_id</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>INCLUDES</h4>

<blockquote><p>We&#8217;re going to be iterating through many tweets and printing out their location. Refactor the controller code below to use the includes method.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TweetsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@tweets</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:location</span><span class="p">)</span><span class="o">.</span><span class="n">recent</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>RELATIONSHIP MIGRATION</h4>

<blockquote><p>A Tweet can belong to one or more Categories (e.g. eating flesh, walking dead, searching for brains). Write a migration that creates two tables, categories, and categorizations. Give categories one column named name of type string; and give categorizations two integer columns: tweet_id and category_id.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AddTweetCategories</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:categories</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:categorizations</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:tweet_id</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:category_id</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>HAS MANY THROUGH</h4>

<blockquote><p>Now that we have our new tables, it&#8217;s time to define the relationships between each of the models. Define the has_many through relationships in the Tweet &amp; Category model and the belongs_to relationships in the Categorization model.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:categorizations</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:categories</span><span class="p">,</span> <span class="n">through</span><span class="p">:</span> <span class="ss">:categorizations</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Categorization</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:tweet</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:category</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Category</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:categorizations</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:tweets</span><span class="p">,</span> <span class="n">through</span><span class="p">:</span> <span class="ss">:categorizations</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Moudle &amp; Class &amp; Method]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/11/ruby-moudle-and-class-and-method/"/>
    <updated>2012-12-11T15:17:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/11/ruby-moudle-and-class-and-method</id>
    <content type="html"><![CDATA[<h4>不能创建实例和继承 作用之一是提供namespace 通过使用<code>Moudle.method</code>的方式调用 可以避免方法 常数和类名称的冲突。</h4>

<p>include一个module以后 可以直接调用里面的常数和方法 一般调用方法为</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">HelloWorld</span>
</span><span class='line'>  <span class="no">Version</span> <span class="o">=</span> <span class="s2">&quot;1.0&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;Hi </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">. </span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1">#如果该method需要对外部公开的话</span>
</span><span class='line'>  <span class="kp">module_function</span> <span class="ss">:hello</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用的时候就是 <code>HelloWorld::Verison</code> or <code>HelloWorld.hello('1024bit')</code></p>

<blockquote><p>Mix-in 讲moduld混到Class中 可以将两个Class中相同的功能植入Module中</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">MyModule</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MyClass1</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">MyModule</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MyClass2</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">MyModule</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Class</h2>

<ul>
<li>初始化方法 initialize</li>
<li>访问方法 <code>attr_reader :name</code> &amp; <code>attr_writer</code> &amp; <code>attr_accessor</code></li>
<li>类变量<code>@@</code>是所有实例共享的变量</li>
<li>类方法 不能对实例操作。或者说实例无法调用类方法</li>
</ul>


<p>类方法的声明三种写法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HelloWorld</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">HelloWorld</span><span class="o">.</span><span class="nf">hello</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">#</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#=&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HelloWorld</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="no">HelloWorld</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#=&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HelloWorld</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">hello</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Method</h2>

<p>如果Method的参数过多 建议放到Hash里去处理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Ruby&quot;</span><span class="p">,</span><span class="n">option</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="n">long</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:long</span><span class="o">]</span>
</span><span class='line'>  <span class="n">body</span> <span class="o">=</span> <span class="n">message</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thanks TBBT]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/10/thanks-tbbt/"/>
    <updated>2012-12-10T21:49:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/10/thanks-tbbt</id>
    <content type="html"><![CDATA[<p>生活大爆炸最新一季一直没看 说实话还蛮想他们的。BG2最近更新也慢  准备把TBBT最新一季都download下来漫漫看</p>

<p><img src="http://woody1983.github.com/images/img/tbbt.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctoPress Upload Images]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/07/octopress-upload-images/"/>
    <updated>2012-12-07T10:08:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/07/octopress-upload-images</id>
    <content type="html"><![CDATA[<h3>First all</h3>

<p>make <code>source/images/img</code> folder</p>

<div><script src='https://gist.github.com/4230466.js?file='></script>
<noscript><pre><code>&lt;img src=&quot;../images/img/galaxy.jpg&quot;/&gt;

&lt;!-- or --&gt;

{% img ../images/img/greece.jpg %}
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 错误处理和例外]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/05/ruby-cuo-wu-chu-li-he-li-wai/"/>
    <updated>2012-12-05T11:50:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/05/ruby-cuo-wu-chu-li-he-li-wai</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ltotal</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">wtotal</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">ctotal</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="no">ARGV</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">input</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>    <span class="n">l</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">w</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">line</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="n">gets</span>
</span><span class='line'>      <span class="n">l</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">c</span> <span class="o">+=</span> <span class="n">line</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>      <span class="n">line</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/^\s+/</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">ary</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>      <span class="n">w</span> <span class="o">+=</span> <span class="n">ary</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">input</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;%8d %8d %8d %s</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">w</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ltotal</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">wtotal</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">ctotal</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">ex</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;&gt;&gt;&gt;&quot;</span><span class="p">,</span><span class="n">ex</span><span class="o">.</span><span class="n">message</span><span class="p">,</span><span class="s2">&quot;&lt;&lt;&lt;&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;%8d %8d %8d %s</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="n">ltotal</span><span class="p">,</span><span class="n">wtotal</span><span class="p">,</span><span class="n">ctotal</span><span class="p">,</span><span class="s2">&quot;total&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>当无法打开文件阅读的时候，就会将例外报给ex变量 并打印输出。</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Resource]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/04/ruby-resource/"/>
    <updated>2012-12-04T14:37:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/04/ruby-resource</id>
    <content type="html"><![CDATA[<h3>1、<a href="www.tryruby.org">TryRuby</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>需要翻墙 配合codeschool一起练习的话 会有$5的代金券可以抵用学费</span></code></pre></td></tr></table></div></figure>


<h3>2、<a href="http://www.codecademy.com/zh/tracks/ruby">CodeCadeMy</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>全部做完，受益匪浅。</span></code></pre></td></tr></table></div></figure>


<h3>3、<a href="http://lrthw.github.com">笨方法學 Ruby</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>讲的很仔细  用的1.9的版本 各个知识点都讲了 不错</span></code></pre></td></tr></table></div></figure>


<h3>4、<a href="http://www.learnstreet.com/">LearnStreet的Ruby板块</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>目前免费，有一个全程的练习和配套的3个小项目练习 一个银行 一个度量转换 一个锻炼记忆力的。</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>5、<a href="http://teamtreehouse.com">TeamtreeHouse</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>最近广告打的最猛的就是这个网站 收费 一个月25$  有Ruby 试听过一节课 暂时没报名
</span><span class='line'>讲的很详细 有内建Project配合 连发布工具都有 免费的用户可以看每个课程的前1分钟</span></code></pre></td></tr></table></div></figure>


<h3>6、 <a href="www.codeschool.com">CodeSchool</a></h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>强烈推荐的 包含Git 什么的 都有 其中的Ruby Bits讲最佳实践的课程 现在可以免费停Level-1 
</span><span class='line'>感觉不错 配合PDF和视频都可以下载的。 有几门免费课程CSS啊 之类的 学完都会有$5的代金券</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://stylesror.github.com">Ruby Style Guide 及 Rails Style Guide</a></h2>

<h2><a href="http://www.zenspider.com/Languages/Ruby/QuickRef.html">Ruby QuickRef</a></h2>

<h2><a href="http://mislav.uniqpath.com/poignant-guide/book/chapter-3.html">漫画教程 Why&#8217;s (Poignant) Guide to Ruby</a></h2>

<h2><a href="http://download.csdn.net/detail/Sevk/659363">RUBY语言入门教程.PDF</a></h2>

<h2><a href="http://ruby.on-page.net/">Ruby manual 一页教程</a></h2>

<h2><a href="http://www.kuqin.com/rubycndocument/man/index.html">面向对象脚本语言 Ruby 参考手册</a></h2>

<h2><a href="http://www.ruby-lang.org/zh_cn/documentation/ruby-from-other-languages/">从其它语言到 Ruby</a></h2>

<h2>Ruby 工具箱</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://api.rubyonrails.org/
</span><span class='line'>http://ruby-doc.org/
</span><span class='line'>http://apidock.com/
</span><span class='line'>http://guides.rubyonrails.org/</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby ARGV &amp; STDIN.gets.chomp()]]></title>
    <link href="http://woody1983.github.com/blog/2012/12/04/ruby-argv-and-stdin-dot-gets-dot-chomp/"/>
    <updated>2012-12-04T14:32:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/12/04/ruby-argv-and-stdin-dot-gets-dot-chomp</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ser</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">prompt</span> <span class="o">=</span> <span class="s1">&#39;&gt; &#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hi </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">, I&#39;m the </span><span class="si">#{</span><span class="vg">$0</span><span class="si">}</span><span class="s2"> script.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;I&#39;d like to ask you a few questions.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Do you like me </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">likes</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Where do you live </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">lives</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;What kind of computer do you have?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">computer</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="o">&lt;&lt;</span><span class="no">MESSAGE</span>
</span><span class='line'><span class="sh">Alright, so you said #{likes} about liking me.</span>
</span><span class='line'><span class="sh">You live in #{lives}.  Not sure where that is.</span>
</span><span class='line'><span class="sh">And you have a #{computer} computer.  Nice.</span>
</span><span class='line'><span class="no">MESSAGE</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Important: 同時必須注意的是，我們也用了 STDIN.gets 取代了 gets。這是因為如果有東西在 ARGV 裡，標準的gets 會認為將第一個參數當成檔案而嘗試從裡面讀東西。在要從使用者的輸入（如stdin）讀取資料的情況下我們必須明確地使用 STDIN.gets。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Artisan's Art Spirit]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/26/the-artisans-art-spirit/"/>
    <updated>2012-08-26T15:52:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/26/the-artisans-art-spirit</id>
    <content type="html"><![CDATA[<p>偶然一个机会在罗永浩的微博看到这样一段话，感觉不错，随即抄了下来。</p>

<h3>罗永浩提到的工匠精神：</h3>

<h5>1）对所从事的事情有一种完美主义情节，在力所能及的情况下做到极致。</h5>

<h5>2）对细节的执着，点点滴滴决不放过。</h5>

<h5>3）激情，对所做的事欲罢不能，并从中获得巨大的心灵满足。</h5>

<h5>4）执着，百折不挠的勇气。可惜，这年头太缺乏具有工匠精神的人。</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[曾国藩 家书一篇]]></title>
    <link href="http://woody1983.github.com/blog/2012/08/22/zengguofan/"/>
    <updated>2012-08-22T20:54:00+08:00</updated>
    <id>http://woody1983.github.com/blog/2012/08/22/zengguofan</id>
    <content type="html"><![CDATA[<h2>课程</h2>

<pre><code>主敬  整齐严肃，无时不惧。无事时心在腔子里，应事时专一不杂。
静坐  每日不拘何时，静坐一会，体验静极生阳来复之仁心，正位凝命，如鼎之镇。
早起  黎明即起，醒后勿沾恋。
读书不二  一书未点完，断不看他书。东翻西阅，都是徇外为人。
读史  《二十三史》每日读十页，虽有事不间断。 
写日记  须端楷，凡日间过恶，身过、心过、口过，皆记出，终身不间断。
日知其所亡  每日记“茶余偶谈”一则，分德行门、学问门、经济门、艺术门。
月无忘所能  每月作诗文数首，以验积理之多寡，养气之盛否。
谨言  刻刻留心。
养气  无不可对人言之事，气藏丹田。
保身  谨遵大人手谕：节欲，节劳，节饮食。
作字  早饭后作字，凡笔墨应酬，当作自己功课。
夜不出门  旷功疲神，切戒切戒。
</code></pre>
]]></content>
  </entry>
  
</feed>
