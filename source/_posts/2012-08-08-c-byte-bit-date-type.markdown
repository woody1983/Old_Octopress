---
layout: post
title: "C里面的Byte Bit概念和数据类型"
date: 2012-08-08 21:16
comments: true
categories: c
---

#二进制 八进制 十六进制

`位bit`是含有0或1的一个单位

给一串二进制加上架构的概念，这样的结构叫`字节`

一个字节`byte`由`8`位构成, 一个字`word`由`32`构成或`4`个字节

一个字节最大是8位，8位数的二进制 `1111 1111`换成十进制`255`,也就是说一个字节最大能存的整数是`255`

2个字节可以存放 `2的16次方`=65535 4个字节`2的32次方`=4 294 967 295

大小写的26个英文字母还有10个数字和标点符号加在一起的内容在字节对应中有个`ASC2`的编码。
<!-- more -->
###内存编号
>起始编号是1 隔8个位置加1

起始编码1 | 位7 | 位6 | 位5 | 位4 | 位3 | 位2 | 位1 | 位0
------------ | ------------- | ------------
1 | 0  | 0 | 0 | 1 | 0 | 1 | 1 | 0
2 | 1  | 0 | 1 | 1 | 0 | 0 | 1 | 1

### C语言用的是起始地址＋长度 编码2开始 往后4个字节

---
#数据类型 DataType

####数据类型是程序所处理的数据的抽象，将可能出现的数据进行分类 比如整数和带小数点的数。

####C语言创造了很多丰富的数据类型


* 构造类型
* 指针类型
* 空类型
* 基本类型

####基本类型
枚举类型`enum` 字符类型`char` 数值类型包括`实型`和`整型`

* 实型包括 单精度`float` 双精度`double`
* 整型包括 短整型`short` 整型`int` 长整型`long`

####构造类型
包括 `数组` `结构体` `共用体`

构造类型是由多个其他数据雷西瓜组合而成，可以分解成若干个元素或成员，每个元素或成员要么是一个基本数据类型，要么又是一个构造类型。

* 数组 所有元素是同一个类型
* 结构体 不同数据类型的组合
* 共用体 多个雨啊宿不同数据类型 共用一块内存

####空类型
Void 多数用在函数和指针的地方

```
需要Google一下的内容是
内存地址的布局方式 
int x = 4294967295 打印出来的正好是255
如果x的声明是4294967296 换成32地址的话
1 0000-0000 0000-0000 0000-0000 0000-0000 
如果x的声明是4294967297 换成32地址的话
1 0000-0000 0000-0000 0000-0000 0000-0001 
```

#整数类型
>类型分为 short int long

short `16-bit`or`2-byte` max-->`11111111 11111111`二进制 `65535`十进制

int `32 bit` or `4 byte`max-->`11111111 11111111 11111111 11111111`二进制 `4294967295`十进制

long `32 bit` or `4 byte`max-->`11111111 11111111 11111111 11111111`二进制 `4294967295`十进制

#### 一个int类型的整数实际上就是一个32个坑 一个萝卜一个坑

##整数的正负
```
有符号和无符号两种 32个坑的左边第一个坑就是用来标记正负的 最高位就是最左边那一位 0为正 1为负
```
####关于补码 (需要另外单独资料)
23的二进制是0001 0111 

正数的补码就是该数的二进制数

负数的补码是 例:-23 

* 先取该数的绝对值(-23)=23
* 变成二进制 0001 0111
* 二进制取反 1变0 0变1  1110 1000
* 将取反后的值加1

`计算机中的数值是以补码的形式存储的!!!`
`所有负数的二进制补码的最高位必然也必须是1`

signed int 表示4个字节的存储单元 第32位是符号位 剩下的31位才是数据位。

一个二进制数如何解释 还要看要把这个数当作什么数据类型来解释 unsigned int 和 signed int 最高位的字符完全代表了不同的含义 要么计算成一个数 要么当成一个正负号标记位。

 
